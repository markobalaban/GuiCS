<Type Name="ProgressBar" FullName="Terminal.Gui.ProgressBar">
  <TypeSignature Language="C#" Value="public class ProgressBar : Terminal.Gui.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProgressBar extends Terminal.Gui.View" />
  <AssemblyInfo>
    <AssemblyName>Terminal.Gui</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Terminal.Gui.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Progress bar can indicate progress of an activity visually.
            </summary>
    <remarks>
      <para>
                The progressbar can operate in two modes, percentage mode, or
                activity mode.  The progress bar starts in percentage mode and
                setting the Fraction property will reflect on the UI the progress 
                made so far.   Activity mode is used when the application has no 
                way of knowing how much time is left, and is started when you invoke
                the Pulse() method.    You should call the Pulse method repeatedly as
                your application makes progress.
              </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProgressBar (Terminal.Gui.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Terminal.Gui.Rect rect) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="Terminal.Gui.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">Rect.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Terminal.Gui.ProgressBar" /> class, starts in percentage mode.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fraction">
      <MemberSignature Language="C#" Value="public float Fraction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Fraction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the progress indicator fraction to display, must be a value between 0 and 1.
            </summary>
        <value>The fraction representing the progress.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pulse">
      <MemberSignature Language="C#" Value="public void Pulse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pulse() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Notifies the progress bar that some progress has taken place.
            </summary>
        <remarks>
            If the ProgressBar is is percentage mode, it switches to activity
            mode.   If is in activity mode, the marker is moved.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Redraw">
      <MemberSignature Language="C#" Value="public override void Redraw (Terminal.Gui.Rect region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Redraw(valuetype Terminal.Gui.Rect region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="Terminal.Gui.Rect" />
      </Parameters>
      <Docs>
        <param name="region">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
