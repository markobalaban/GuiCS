<Type Name="Label" FullName="Terminal.Gui.Label">
  <TypeSignature Language="C#" Value="public class Label : Terminal.Gui.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Label extends Terminal.Gui.View" />
  <AssemblyInfo>
    <AssemblyName>Terminal.Gui</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Terminal.Gui.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Label view, displays a string at a given position, can include multiple lines.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label (Terminal.Gui.Rect rect, NStack.ustring text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Terminal.Gui.Rect rect, class NStack.ustring text) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="Terminal.Gui.Rect" />
        <Parameter Name="text" Type="NStack.ustring" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
              Public constructor: creates a label at the given
              coordinate with the given string and uses the specified
              frame for the string.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label (Terminal.Gui.Rect rect, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Terminal.Gui.Rect rect, string text) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="rect" Type="Terminal.Gui.Rect" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
              Public constructor: creates a label at the given
              coordinate with the given string and uses the specified
              frame for the string.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label (int x, int y, NStack.ustring text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 x, int32 y, class NStack.ustring text) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="text" Type="NStack.ustring" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
              Public constructor: creates a label at the given
              coordinate with the given string, computes the bounding box
              based on the size of the string, assumes that the string contains
              newlines for multiple lines, no special breaking rules are used.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Label (int x, int y, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 x, int32 y, string text) cil managed" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <param name="text">To be added.</param>
        <summary>
              Public constructor: creates a label at the given
              coordinate with the given string, computes the bounding box
              based on the size of the string, assumes that the string contains
              newlines for multiple lines, no special breaking rules are used.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureLines">
      <MemberSignature Language="C#" Value="public static int MeasureLines (NStack.ustring text, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureLines(class NStack.ustring text, int32 width) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="NStack.ustring" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Text, may contain newlines.</param>
        <param name="width">The width for the text.</param>
        <summary>
            Computes the number of lines needed to render the specified text by the Label control
            </summary>
        <returns>Number of lines.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureLines">
      <MemberSignature Language="C#" Value="public static int MeasureLines (string text, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 MeasureLines(string text, int32 width) cil managed" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">Text, may contain newlines.</param>
        <param name="width">The width for the text.</param>
        <summary>
            Computes the number of lines needed to render the specified text by the Label control
            </summary>
        <returns>Number of lines.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redraw">
      <MemberSignature Language="C#" Value="public override void Redraw (Terminal.Gui.Rect region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Redraw(valuetype Terminal.Gui.Rect region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="Terminal.Gui.Rect" />
      </Parameters>
      <Docs>
        <param name="region">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual NStack.ustring Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NStack.ustring Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NStack.ustring</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
              The text displayed by this widget.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public Terminal.Gui.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Terminal.Gui.TextAlignment TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Terminal.Gui.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Controls the text-alignemtn property of the label, changing it will redisplay the label.
            </summary>
        <value>The text alignment.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextColor">
      <MemberSignature Language="C#" Value="public Terminal.Gui.Attribute TextColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Terminal.Gui.Attribute TextColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Terminal.Gui.Attribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
              The color used for the label
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
