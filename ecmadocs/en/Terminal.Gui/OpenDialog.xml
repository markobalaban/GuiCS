<Type Name="OpenDialog" FullName="Terminal.Gui.OpenDialog">
  <TypeSignature Language="C#" Value="public class OpenDialog : Terminal.Gui.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OpenDialog extends Terminal.Gui.FileDialog" />
  <AssemblyInfo>
    <AssemblyName>Terminal.Gui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Terminal.Gui.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Open Dialog provides an interactive dialog box for users to select files or directories.
            </summary>
    <remarks>
      <para>
              The open dialog can be used to select files for opening, it can be configured to allow
              multiple items to be selected (based on the AllowsMultipleSelection) variable and
              you can control whether this should allow files or directories to be selected.
            </para>
      <para>
              To use it, create an instance of the OpenDialog, configure its properties, and then
              call Application.Run on the resulting instance.   This will run the dialog modally,
              and when this returns, the list of filds will be available on the FilePaths property.
            </para>
      <para>
            To select more than one file, users can use the spacebar, or control-t.
            </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenDialog (NStack.ustring title, NStack.ustring message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class NStack.ustring title, class NStack.ustring message) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="title" Type="NStack.ustring" />
        <Parameter Name="message" Type="NStack.ustring" />
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <param name="message">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsMultipleSelection">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether this <see cref="T:Terminal.Gui.OpenDialog" /> allows multiple selection.
            </summary>
        <value>
          <c>true</c> if allows multiple selection; otherwise, <c>false</c>, defaults to false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChooseDirectories">
      <MemberSignature Language="C#" Value="public bool CanChooseDirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChooseDirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether this <see cref="T:Terminal.Gui.OpenDialog" /> can choose directories.
            </summary>
        <value>
          <c>true</c> if can choose directories; otherwise, <c>false</c> defaults to <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanChooseFiles">
      <MemberSignature Language="C#" Value="public bool CanChooseFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanChooseFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets a value indicating whether this <see cref="T:Terminal.Gui.OpenDialog" /> can choose files.
            </summary>
        <value>
          <c>true</c> if can choose files; otherwise, <c>false</c>.  Defaults to <c>true</c></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; FilePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the selected files, or an empty list if nothing has been selected
            </summary>
        <value>The file paths.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
