<Type Name="TextView" FullName="Terminal.Gui.TextView">
  <TypeSignature Language="C#" Value="public class TextView : Terminal.Gui.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextView extends Terminal.Gui.View" />
  <AssemblyInfo>
    <AssemblyName>Terminal.Gui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Terminal.Gui.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
              Multi-line text editing view
            </summary>
    <remarks>
      <para>
                The text view provides a multi-line text view.   Users interact
                with it with the standard Emacs commands for movement or the arrow
                keys. 
              </para>
      <list type="table">
        <listheader>
          <term>Shortcut</term>
          <description>Action performed</description>
        </listheader>
        <item>
          <term>Left cursor, Control-b</term>
          <description>
                     Moves the editing point left.
                   </description>
        </item>
        <item>
          <term>Right cursor, Control-f</term>
          <description>
                     Moves the editing point right.
                   </description>
        </item>
        <item>
          <term>Alt-b</term>
          <description>
                     Moves one word back.
                   </description>
        </item>
        <item>
          <term>Alt-f</term>
          <description>
                     Moves one word forward.
                   </description>
        </item>
        <item>
          <term>Up cursor, Control-p</term>
          <description>
                     Moves the editing point one line up.
                   </description>
        </item>
        <item>
          <term>Down cursor, Control-n</term>
          <description>
                     Moves the editing point one line down
                   </description>
        </item>
        <item>
          <term>Home key, Control-a</term>
          <description>
                     Moves the cursor to the beginning of the line.
                   </description>
        </item>
        <item>
          <term>End key, Control-e</term>
          <description>
                     Moves the cursor to the end of the line.
                   </description>
        </item>
        <item>
          <term>Delete, Control-d</term>
          <description>
                     Deletes the character in front of the cursor.
                   </description>
        </item>
        <item>
          <term>Backspace</term>
          <description>
                     Deletes the character behind the cursor.
                   </description>
        </item>
        <item>
          <term>Control-k</term>
          <description>
                     Deletes the text until the end of the line and replaces the kill buffer
                     with the deleted text.   You can paste this text in a different place by
                     using Control-y.
                   </description>
        </item>
        <item>
          <term>Control-y</term>
          <description>
                      Pastes the content of the kill ring into the current position.
                   </description>
        </item>
        <item>
          <term>Alt-d</term>
          <description>
                      Deletes the word above the cursor and adds it to the kill ring.  You 
                      can paste the contents of the kill ring with Control-y.
                   </description>
        </item>
        <item>
          <term>Control-q</term>
          <description>
                     Quotes the next input character, to prevent the normal processing of
                     key handling to take place.
                   </description>
        </item>
      </list>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
            Public constructor, creates a view on the specified area, with dimensions controlled with the X, Y, Width and Height properties.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextView (Terminal.Gui.Rect frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Terminal.Gui.Rect frame) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="frame" Type="Terminal.Gui.Rect" />
      </Parameters>
      <Docs>
        <param name="frame">To be added.</param>
        <summary>
              Public constructor, creates a view on the specified area, with absolute position and size.
            </summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CanFocus">
      <MemberSignature Language="C#" Value="public override bool CanFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentColumn">
      <MemberSignature Language="C#" Value="public int CurrentColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the cursor column.
            </summary>
        <value>The cursor column.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentRow">
      <MemberSignature Language="C#" Value="public int CurrentRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
               The current cursor row.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public bool LoadFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LoadFile(string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Path to the file to load.</param>
        <summary>
            Loads the contents of the file into the TextView.
            </summary>
        <returns>
          <c>true</c>, if file was loaded, <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadStream">
      <MemberSignature Language="C#" Value="public void LoadStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadStream(class System.IO.Stream stream) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Stream to load the contents from.</param>
        <summary>
            Loads the contents of the stream into the TextView.
            </summary>
        <returns>
          <c>true</c>, if stream was loaded, <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEvent">
      <MemberSignature Language="C#" Value="public override bool MouseEvent (Terminal.Gui.MouseEvent ev);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MouseEvent(valuetype Terminal.Gui.MouseEvent ev) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ev" Type="Terminal.Gui.MouseEvent" />
      </Parameters>
      <Docs>
        <param name="ev">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionCursor">
      <MemberSignature Language="C#" Value="public override void PositionCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PositionCursor() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
              Positions the cursor on the current row and column
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKey">
      <MemberSignature Language="C#" Value="public override bool ProcessKey (Terminal.Gui.KeyEvent kb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ProcessKey(valuetype Terminal.Gui.KeyEvent kb) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kb" Type="Terminal.Gui.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="kb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redraw">
      <MemberSignature Language="C#" Value="public override void Redraw (Terminal.Gui.Rect region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Redraw(valuetype Terminal.Gui.Rect region) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="Terminal.Gui.Rect" />
      </Parameters>
      <Docs>
        <param name="region">The region to redraw.</param>
        <summary>
            Redraw the text editor region 
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public NStack.ustring Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class NStack.ustring Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>NStack.ustring</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
              Sets or gets the text in the entry.
            </summary>
        <value>To be added.</value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
