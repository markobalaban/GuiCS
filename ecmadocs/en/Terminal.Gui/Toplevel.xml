<Type Name="Toplevel" FullName="Terminal.Gui.Toplevel">
  <TypeSignature Language="C#" Value="public class Toplevel : Terminal.Gui.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Toplevel extends Terminal.Gui.View" />
  <AssemblyInfo>
    <AssemblyName>Terminal.Gui</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Terminal.Gui.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Toplevel views can be modally executed.
            </summary>
    <remarks>
      <para>
                Toplevels can be modally executing views, and they return control
                to the caller when the "Running" property is set to false.
              </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Toplevel (Terminal.Gui.Rect frame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Terminal.Gui.Rect frame) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="frame" Type="Terminal.Gui.Rect" />
      </Parameters>
      <Docs>
        <param name="frame">Frame.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Terminal.Gui.Toplevel" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFocus">
      <MemberSignature Language="C#" Value="public override bool CanFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Terminal.Gui.Toplevel Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Terminal.Gui.Toplevel Create() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Terminal.Gui.Toplevel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Convenience factory method that creates a new toplevel with the current terminal dimensions.
            </summary>
        <returns>The create.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessKey">
      <MemberSignature Language="C#" Value="public override bool ProcessKey (Terminal.Gui.KeyEvent keyEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ProcessKey(valuetype Terminal.Gui.KeyEvent keyEvent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kb" Type="Terminal.Gui.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyEvent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Running">
      <MemberSignature Language="C#" Value="public bool Running;" />
      <MemberSignature Language="ILAsm" Value=".field public bool Running" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This flag is checked on each iteration of the mainloop and it continues
            running until this flag is set to false.   
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
