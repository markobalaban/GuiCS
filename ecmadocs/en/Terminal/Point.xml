<Type Name="Point" FullName="Terminal.Point">
  <TypeSignature Language="C#" Value="public struct Point" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Point extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>Terminal</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (Terminal.Size sz);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Terminal.Size sz) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sz" Type="Terminal.Size" />
      </Parameters>
      <Docs>
        <param name="sz">To be added.</param>
        <summary>
            	Point Constructor
             </summary>
        <remarks>
            	Creates a Point from a Size value.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 x, int32 y) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>
            	Point Constructor
             </summary>
        <remarks>
            	Creates a Point from a specified x,y coordinate pair.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static Terminal.Point Add (Terminal.Point pt, Terminal.Size sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Terminal.Point Add(valuetype Terminal.Point pt, valuetype Terminal.Size sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Terminal.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="Terminal.Point" />
        <Parameter Name="sz" Type="Terminal.Size" />
      </Parameters>
      <Docs>
        <param name="pt">The Point to add.</param>
        <param name="sz">The Size to add.</param>
        <summary>
            Adds the specified Size to the specified Point.
            </summary>
        <returns>The Point that is the result of the addition operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly Terminal.Point Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Terminal.Point Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Terminal.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            	Empty Shared Field
             </summary>
        <remarks>
            	An uninitialized Point Structure.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>
            	Equals Method
             </summary>
        <returns>To be added.</returns>
        <remarks>
            	Checks equivalence of this Point and another object.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            	GetHashCode Method
             </summary>
        <returns>To be added.</returns>
        <remarks>
            	Calculates a hashing value.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            	IsEmpty Property
             </summary>
        <value>To be added.</value>
        <remarks>
            	Indicates if both X and Y are zero.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (Terminal.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype Terminal.Point p) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Terminal.Point" />
      </Parameters>
      <Docs>
        <param name="p">The Point used offset this Point.</param>
        <summary>
            Translates this Point by the specified Point.
            </summary>
        <returns>The offset.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (int dx, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(int32 dx, int32 dy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dx">To be added.</param>
        <param name="dy">To be added.</param>
        <summary>
            	Offset Method
             </summary>
        <remarks>
            	Moves the Point a specified distance.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static Terminal.Point op_Addition (Terminal.Point pt, Terminal.Size sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Terminal.Point op_Addition(valuetype Terminal.Point pt, valuetype Terminal.Size sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Terminal.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="Terminal.Point" />
        <Parameter Name="sz" Type="Terminal.Size" />
      </Parameters>
      <Docs>
        <param name="pt">To be added.</param>
        <param name="sz">To be added.</param>
        <summary>
            	Addition Operator
             </summary>
        <returns>To be added.</returns>
        <remarks>
            	Translates a Point using the Width and Height
            	properties of the given <typeref>Size</typeref>.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (Terminal.Point left, Terminal.Point right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Terminal.Point left, valuetype Terminal.Point right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Terminal.Point" />
        <Parameter Name="right" Type="Terminal.Point" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            	Equality Operator
             </summary>
        <returns>To be added.</returns>
        <remarks>
            	Compares two Point objects. The return value is
            	based on the equivalence of the X and Y properties 
            	of the two points.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static Terminal.Size op_Explicit (Terminal.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Terminal.Size op_Explicit(valuetype Terminal.Point p) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Terminal.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Terminal.Point" />
      </Parameters>
      <Docs>
        <param name="p">To be added.</param>
        <summary>
            	Point to Size Conversion
             </summary>
        <returns>To be added.</returns>
        <remarks>
            	Returns a Size based on the Coordinates of a given 
            	Point. Requires explicit cast.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (Terminal.Point left, Terminal.Point right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Terminal.Point left, valuetype Terminal.Point right) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Terminal.Point" />
        <Parameter Name="right" Type="Terminal.Point" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            	Inequality Operator
             </summary>
        <returns>To be added.</returns>
        <remarks>
            	Compares two Point objects. The return value is
            	based on the equivalence of the X and Y properties 
            	of the two points.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static Terminal.Point op_Subtraction (Terminal.Point pt, Terminal.Size sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype Terminal.Point op_Subtraction(valuetype Terminal.Point pt, valuetype Terminal.Size sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Terminal.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="Terminal.Point" />
        <Parameter Name="sz" Type="Terminal.Size" />
      </Parameters>
      <Docs>
        <param name="pt">To be added.</param>
        <param name="sz">To be added.</param>
        <summary>
            	Subtraction Operator
             </summary>
        <returns>To be added.</returns>
        <remarks>
            	Translates a Point using the negation of the Width 
            	and Height properties of the given Size.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static Terminal.Point Subtract (Terminal.Point pt, Terminal.Size sz);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Terminal.Point Subtract(valuetype Terminal.Point pt, valuetype Terminal.Size sz) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Terminal.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="Terminal.Point" />
        <Parameter Name="sz" Type="Terminal.Size" />
      </Parameters>
      <Docs>
        <param name="pt">The Point to be subtracted from.</param>
        <param name="sz">The Size to subtract from the Point.</param>
        <summary>
            Returns the result of subtracting specified Size from the specified Point.
            </summary>
        <returns>The Point that is the result of the subtraction operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            	ToString Method
             </summary>
        <returns>To be added.</returns>
        <remarks>
            	Formats the Point as a string in coordinate notation.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 X" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the x-coordinate of this Point.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 Y" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the y-coordinate of this Point.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
