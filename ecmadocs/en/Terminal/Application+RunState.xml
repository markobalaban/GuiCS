<Type Name="Application+RunState" FullName="Terminal.Application+RunState">
  <TypeSignature Language="C#" Value="public class Application.RunState : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Application/RunState extends System.Object implements class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Terminal</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Captures the execution state for the provided TopLevel view.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases all resource used by the <see cref="T:Terminal.Application.RunState" /> object.
            </summary>
        <remarks>Call <see cref="M:Terminal.Application.RunState.Dispose" /> when you are finished using the <see cref="T:Terminal.Application.RunState" />. The
            <see cref="M:Terminal.Application.RunState.Dispose" /> method leaves the <see cref="T:Terminal.Application.RunState" /> in an unusable state. After
            calling <see cref="M:Terminal.Application.RunState.Dispose" />, you must release all references to the
            <see cref="T:Terminal.Application.RunState" /> so the garbage collector can reclaim the memory that the
            <see cref="T:Terminal.Application.RunState" /> was occupying.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">If set to <c>true</c> disposing.</param>
        <summary>
            Dispose the specified disposing.
            </summary>
        <returns>The dispose.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
