<Type Name="KeyEvent" FullName="Terminal.KeyEvent">
  <TypeSignature Language="C#" Value="public struct KeyEvent" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit KeyEvent extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>Terminal</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Describes a keyboard event.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEvent (Terminal.Key k);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Terminal.Key k) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="k" Type="Terminal.Key" />
      </Parameters>
      <Docs>
        <param name="k">To be added.</param>
        <summary>
              Constructs a new KeyEvent from the provided Key value - can be a rune cast into a Key value
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAlt">
      <MemberSignature Language="C#" Value="public bool IsAlt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether the Alt key was pressed (real or synthesized)
            </summary>
        <value>
          <c>true</c> if is alternate; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCtrl">
      <MemberSignature Language="C#" Value="public bool IsCtrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCtrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Determines whether the value is a control key
            </summary>
        <value>
          <c>true</c> if is ctrl; otherwise, <c>false</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public Terminal.Key Key;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype Terminal.Key Key" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Terminal.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Symb olid definition for the key.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public int KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
              The key value cast to an integer, you will typicall use this for
              extracting the Unicode rune value out of a key, when none of the
              symbolic options are in use.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
