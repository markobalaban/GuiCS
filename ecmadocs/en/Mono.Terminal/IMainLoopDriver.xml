<Type Name="IMainLoopDriver" FullName="Mono.Terminal.IMainLoopDriver">
  <TypeSignature Language="C#" Value="public interface IMainLoopDriver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMainLoopDriver" />
  <AssemblyInfo>
    <AssemblyName>Terminal.Gui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Public interface to create your own platform specific main loop driver.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="EventsPending">
      <MemberSignature Language="C#" Value="public bool EventsPending (bool wait);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EventsPending(bool wait) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="wait">If set to <c>true</c> wait until an event is available, otherwise return immediately.</param>
        <summary>
            Must report whether there are any events pending, or even block waiting for events.
            </summary>
        <returns>
          <c>true</c>, if there were pending events, <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MainIteration">
      <MemberSignature Language="C#" Value="public void MainIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MainIteration() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Setup">
      <MemberSignature Language="C#" Value="public void Setup (Mono.Terminal.MainLoop mainLoop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Setup(class Mono.Terminal.MainLoop mainLoop) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mainLoop" Type="Mono.Terminal.MainLoop" />
      </Parameters>
      <Docs>
        <param name="mainLoop">Main loop.</param>
        <summary>
            Initializes the main loop driver, gets the calling main loop for the initialization.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wakeup">
      <MemberSignature Language="C#" Value="public void Wakeup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Wakeup() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Wakes up the mainloop that might be waiting on input, must be thread safe.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
