### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.Application.RunState
  id: Application.RunState
  children:
  - Terminal.Gui.Application.RunState.Dispose
  - Terminal.Gui.Application.RunState.Dispose(System.Boolean)
  langs:
  - csharp
  name: Application.RunState
  nameWithType: Application.RunState
  fullName: Terminal.Gui.Application.RunState
  type: Class
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Captures the execution state for the provided TopLevel view.
  syntax:
    content: 'public class Application.RunState : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
- uid: Terminal.Gui.Application.RunState.Dispose
  id: Dispose
  parent: Terminal.Gui.Application.RunState
  langs:
  - csharp
  name: Dispose()
  nameWithType: Application.RunState.Dispose()
  fullName: Application.RunState.Dispose()
  type: Method
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Releases all resource used by the <xref href="Terminal.Gui.Application.RunState"></xref> object.
  remarks: >-
    Call <xref href="Terminal.Gui.Application.RunState.Dispose"></xref> when you are finished using the <xref href="Terminal.Gui.Application.RunState"></xref>. The
                <xref href="Terminal.Gui.Application.RunState.Dispose"></xref> method leaves the <xref href="Terminal.Gui.Application.RunState"></xref> in an unusable state. After
                calling <xref href="Terminal.Gui.Application.RunState.Dispose"></xref>, you must release all references to the
                <xref href="Terminal.Gui.Application.RunState"></xref> so the garbage collector can reclaim the memory that the
                <xref href="Terminal.Gui.Application.RunState"></xref> was occupying.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: Terminal.Gui.Application.RunState.Dispose*
  exceptions: []
- uid: Terminal.Gui.Application.RunState.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Terminal.Gui.Application.RunState
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Application.RunState.Dispose(Boolean)
  fullName: Application.RunState.Dispose(Boolean)
  type: Method
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: Dispose the specified disposing.
  syntax:
    content: public virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: If set to <code>true</code> disposing.
  overload: Terminal.Gui.Application.RunState.Dispose*
  exceptions: []
references:
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Terminal.Gui.Application.RunState.Dispose
  parent: Terminal.Gui.Application.RunState
  isExternal: false
  name: Dispose()
  nameWithType: Application.RunState.Dispose()
  fullName: Application.RunState.Dispose()
- uid: Terminal.Gui.Application.RunState.Dispose(System.Boolean)
  parent: Terminal.Gui.Application.RunState
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Application.RunState.Dispose(Boolean)
  fullName: Application.RunState.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Terminal.Gui.Application.RunState.Dispose*
  parent: Terminal.Gui.Application.RunState
  isExternal: false
  name: Dispose
  nameWithType: Application.RunState.Dispose
  fullName: Application.RunState.Dispose
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
