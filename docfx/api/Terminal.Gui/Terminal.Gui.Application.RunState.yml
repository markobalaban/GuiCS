### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.Application.RunState
  commentId: T:Terminal.Gui.Application.RunState
  id: Application.RunState
  parent: Terminal.Gui
  children:
  - Terminal.Gui.Application.RunState.Dispose
  - Terminal.Gui.Application.RunState.Dispose(System.Boolean)
  langs:
  - csharp
  - vb
  name: Application.RunState
  nameWithType: Application.RunState
  fullName: Terminal.Gui.Application.RunState
  type: Class
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: RunState
    path: ../Terminal.Gui/Core.cs
    startLine: 2134
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCaptures the execution state for the provided <xref href=\"Terminal.Gui.Application.RunState.Toplevel\" data-throw-if-not-resolved=\"false\"></xref>  view.\n"
  example: []
  syntax:
    content: 'public class RunState : IDisposable'
    content.vb: >-
      Public Class RunState

          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Terminal.Gui.Application.RunState.Dispose
  commentId: M:Terminal.Gui.Application.RunState.Dispose
  id: Dispose
  parent: Terminal.Gui.Application.RunState
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Application.RunState.Dispose()
  fullName: Terminal.Gui.Application.RunState.Dispose()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Dispose
    path: ../Terminal.Gui/Core.cs
    startLine: 2149
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nReleases alTop = l resource used by the <xref href=\"Terminal.Gui.Application.RunState\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  remarks: >-
    Call <xref href="Terminal.Gui.Application.RunState.Dispose" data-throw-if-not-resolved="false"></xref> when you are finished using the <xref href="Terminal.Gui.Application.RunState" data-throw-if-not-resolved="false"></xref>. The

    <xref href="Terminal.Gui.Application.RunState.Dispose" data-throw-if-not-resolved="false"></xref> method leaves the <xref href="Terminal.Gui.Application.RunState" data-throw-if-not-resolved="false"></xref> in an unusable state. After

    calling <xref href="Terminal.Gui.Application.RunState.Dispose" data-throw-if-not-resolved="false"></xref>, you must release all references to the

    <xref href="Terminal.Gui.Application.RunState" data-throw-if-not-resolved="false"></xref> so the garbage collector can reclaim the memory that the

    <xref href="Terminal.Gui.Application.RunState" data-throw-if-not-resolved="false"></xref> was occupying.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Terminal.Gui.Application.RunState.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.Application.RunState.Dispose(System.Boolean)
  commentId: M:Terminal.Gui.Application.RunState.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Terminal.Gui.Application.RunState
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: Application.RunState.Dispose(Boolean)
  fullName: Terminal.Gui.Application.RunState.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Dispose
    path: ../Terminal.Gui/Core.cs
    startLine: 2160
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nDispose the specified disposing.\n"
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: If set to <code>true</code> disposing.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Terminal.Gui.Application.RunState.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Terminal.Gui.Application.RunState.Toplevel
  commentId: F:Terminal.Gui.Application.RunState.Toplevel
  isExternal: true
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.Application.RunState
  commentId: T:Terminal.Gui.Application.RunState
  parent: Terminal.Gui
  name: Application.RunState
  nameWithType: Application.RunState
  fullName: Terminal.Gui.Application.RunState
- uid: Terminal.Gui.Application.RunState.Dispose
  commentId: M:Terminal.Gui.Application.RunState.Dispose
  isExternal: true
- uid: Terminal.Gui.Application.RunState.Dispose*
  commentId: Overload:Terminal.Gui.Application.RunState.Dispose
  name: Dispose
  nameWithType: Application.RunState.Dispose
  fullName: Terminal.Gui.Application.RunState.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
shouldSkipMarkup: true
