### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.Key
  commentId: T:Terminal.Gui.Key
  id: Key
  parent: Terminal.Gui
  children:
  - Terminal.Gui.Key.AltMask
  - Terminal.Gui.Key.Backspace
  - Terminal.Gui.Key.BackTab
  - Terminal.Gui.Key.CharMask
  - Terminal.Gui.Key.ControlA
  - Terminal.Gui.Key.ControlB
  - Terminal.Gui.Key.ControlC
  - Terminal.Gui.Key.ControlD
  - Terminal.Gui.Key.ControlE
  - Terminal.Gui.Key.ControlF
  - Terminal.Gui.Key.ControlG
  - Terminal.Gui.Key.ControlH
  - Terminal.Gui.Key.ControlI
  - Terminal.Gui.Key.ControlJ
  - Terminal.Gui.Key.ControlK
  - Terminal.Gui.Key.ControlL
  - Terminal.Gui.Key.ControlM
  - Terminal.Gui.Key.ControlN
  - Terminal.Gui.Key.ControlO
  - Terminal.Gui.Key.ControlP
  - Terminal.Gui.Key.ControlQ
  - Terminal.Gui.Key.ControlR
  - Terminal.Gui.Key.ControlS
  - Terminal.Gui.Key.ControlSpace
  - Terminal.Gui.Key.ControlT
  - Terminal.Gui.Key.ControlU
  - Terminal.Gui.Key.ControlV
  - Terminal.Gui.Key.ControlW
  - Terminal.Gui.Key.ControlX
  - Terminal.Gui.Key.ControlY
  - Terminal.Gui.Key.ControlZ
  - Terminal.Gui.Key.CtrlMask
  - Terminal.Gui.Key.CursorDown
  - Terminal.Gui.Key.CursorLeft
  - Terminal.Gui.Key.CursorRight
  - Terminal.Gui.Key.CursorUp
  - Terminal.Gui.Key.Delete
  - Terminal.Gui.Key.DeleteChar
  - Terminal.Gui.Key.End
  - Terminal.Gui.Key.Enter
  - Terminal.Gui.Key.Esc
  - Terminal.Gui.Key.F1
  - Terminal.Gui.Key.F10
  - Terminal.Gui.Key.F2
  - Terminal.Gui.Key.F3
  - Terminal.Gui.Key.F4
  - Terminal.Gui.Key.F5
  - Terminal.Gui.Key.F6
  - Terminal.Gui.Key.F7
  - Terminal.Gui.Key.F8
  - Terminal.Gui.Key.F9
  - Terminal.Gui.Key.Home
  - Terminal.Gui.Key.InsertChar
  - Terminal.Gui.Key.PageDown
  - Terminal.Gui.Key.PageUp
  - Terminal.Gui.Key.ShiftMask
  - Terminal.Gui.Key.Space
  - Terminal.Gui.Key.SpecialMask
  - Terminal.Gui.Key.Tab
  - Terminal.Gui.Key.Unknown
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: Key
  fullName: Terminal.Gui.Key
  type: Enum
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Key
    path: ../Terminal.Gui/Event.cs
    startLine: 26
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe <xref href=\"Terminal.Gui.Key\" data-throw-if-not-resolved=\"false\"></xref> enumeration contains special encoding for some keys, but can also\nencode all the unicode values that can be passed.   \n"
  remarks: "\n<p>\n  If the SpecialMask is set, then the value is that of the special mask,\n  otherwise, the value is the one of the lower bits (as extracted by CharMask)\n</p>\n<p>\n  Control keys are the values between 1 and 26 corresponding to Control-A to Control-Z\n</p>\n<p>\n  Unicode runes are also stored here, the letter &apos;A&quot; for example is encoded as a value 65 (not surfaced in the enum).\n</p>\n"
  example: []
  syntax:
    content: >-
      [Flags]

      public enum Key : uint
    content.vb: >-
      <Flags>

      Public Enum Key As UInteger
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: Terminal.Gui.Key.CharMask
  commentId: F:Terminal.Gui.Key.CharMask
  id: CharMask
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: CharMask
  nameWithType: Key.CharMask
  fullName: Terminal.Gui.Key.CharMask
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: CharMask
    path: ../Terminal.Gui/Event.cs
    startLine: 33
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nMask that indicates that this is a character value, values outside this range\nindicate special characters like Alt-key combinations or special keys on the\nkeyboard like function keys, arrows keys and so on.\n"
  example: []
  syntax:
    content: CharMask = 1048575U
    return:
      type: Terminal.Gui.Key
    content.vb: CharMask = 1048575UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.SpecialMask
  commentId: F:Terminal.Gui.Key.SpecialMask
  id: SpecialMask
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: SpecialMask
  nameWithType: Key.SpecialMask
  fullName: Terminal.Gui.Key.SpecialMask
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: SpecialMask
    path: ../Terminal.Gui/Event.cs
    startLine: 39
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nIf the SpecialMask is set, then the value is that of the special mask,\notherwise, the value is the one of the lower bits (as extracted by CharMask).\n"
  example: []
  syntax:
    content: SpecialMask = 4293918720U
    return:
      type: Terminal.Gui.Key
    content.vb: SpecialMask = 4293918720UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlSpace
  commentId: F:Terminal.Gui.Key.ControlSpace
  id: ControlSpace
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlSpace
  nameWithType: Key.ControlSpace
  fullName: Terminal.Gui.Key.ControlSpace
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlSpace
    path: ../Terminal.Gui/Event.cs
    startLine: 44
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-spacebar\n"
  example: []
  syntax:
    content: ControlSpace = 0U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlSpace = 0UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlA
  commentId: F:Terminal.Gui.Key.ControlA
  id: ControlA
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlA
  nameWithType: Key.ControlA
  fullName: Terminal.Gui.Key.ControlA
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlA
    path: ../Terminal.Gui/Event.cs
    startLine: 49
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-A\n"
  example: []
  syntax:
    content: ControlA = 1U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlA = 1UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlB
  commentId: F:Terminal.Gui.Key.ControlB
  id: ControlB
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlB
  nameWithType: Key.ControlB
  fullName: Terminal.Gui.Key.ControlB
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlB
    path: ../Terminal.Gui/Event.cs
    startLine: 53
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-B\n"
  example: []
  syntax:
    content: ControlB = 2U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlB = 2UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlC
  commentId: F:Terminal.Gui.Key.ControlC
  id: ControlC
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlC
  nameWithType: Key.ControlC
  fullName: Terminal.Gui.Key.ControlC
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlC
    path: ../Terminal.Gui/Event.cs
    startLine: 57
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-C\n"
  example: []
  syntax:
    content: ControlC = 3U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlC = 3UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlD
  commentId: F:Terminal.Gui.Key.ControlD
  id: ControlD
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlD
  nameWithType: Key.ControlD
  fullName: Terminal.Gui.Key.ControlD
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlD
    path: ../Terminal.Gui/Event.cs
    startLine: 61
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-D\n"
  example: []
  syntax:
    content: ControlD = 4U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlD = 4UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlE
  commentId: F:Terminal.Gui.Key.ControlE
  id: ControlE
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlE
  nameWithType: Key.ControlE
  fullName: Terminal.Gui.Key.ControlE
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlE
    path: ../Terminal.Gui/Event.cs
    startLine: 65
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-E\n"
  example: []
  syntax:
    content: ControlE = 5U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlE = 5UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlF
  commentId: F:Terminal.Gui.Key.ControlF
  id: ControlF
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlF
  nameWithType: Key.ControlF
  fullName: Terminal.Gui.Key.ControlF
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlF
    path: ../Terminal.Gui/Event.cs
    startLine: 69
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-F\n"
  example: []
  syntax:
    content: ControlF = 6U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlF = 6UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlG
  commentId: F:Terminal.Gui.Key.ControlG
  id: ControlG
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlG
  nameWithType: Key.ControlG
  fullName: Terminal.Gui.Key.ControlG
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlG
    path: ../Terminal.Gui/Event.cs
    startLine: 73
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-G\n"
  example: []
  syntax:
    content: ControlG = 7U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlG = 7UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlH
  commentId: F:Terminal.Gui.Key.ControlH
  id: ControlH
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlH
  nameWithType: Key.ControlH
  fullName: Terminal.Gui.Key.ControlH
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlH
    path: ../Terminal.Gui/Event.cs
    startLine: 77
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-H\n"
  example: []
  syntax:
    content: ControlH = 8U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlH = 8UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlI
  commentId: F:Terminal.Gui.Key.ControlI
  id: ControlI
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlI
  nameWithType: Key.ControlI
  fullName: Terminal.Gui.Key.ControlI
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlI
    path: ../Terminal.Gui/Event.cs
    startLine: 81
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-I (same as the tab key).\n"
  example: []
  syntax:
    content: ControlI = 9U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlI = 9UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlJ
  commentId: F:Terminal.Gui.Key.ControlJ
  id: ControlJ
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlJ
  nameWithType: Key.ControlJ
  fullName: Terminal.Gui.Key.ControlJ
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlJ
    path: ../Terminal.Gui/Event.cs
    startLine: 85
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-J\n"
  example: []
  syntax:
    content: ControlJ = 10U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlJ = 10UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlK
  commentId: F:Terminal.Gui.Key.ControlK
  id: ControlK
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlK
  nameWithType: Key.ControlK
  fullName: Terminal.Gui.Key.ControlK
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlK
    path: ../Terminal.Gui/Event.cs
    startLine: 89
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-K\n"
  example: []
  syntax:
    content: ControlK = 11U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlK = 11UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlL
  commentId: F:Terminal.Gui.Key.ControlL
  id: ControlL
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlL
  nameWithType: Key.ControlL
  fullName: Terminal.Gui.Key.ControlL
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlL
    path: ../Terminal.Gui/Event.cs
    startLine: 93
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-L\n"
  example: []
  syntax:
    content: ControlL = 12U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlL = 12UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlM
  commentId: F:Terminal.Gui.Key.ControlM
  id: ControlM
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlM
  nameWithType: Key.ControlM
  fullName: Terminal.Gui.Key.ControlM
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlM
    path: ../Terminal.Gui/Event.cs
    startLine: 97
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-M\n"
  example: []
  syntax:
    content: ControlM = 13U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlM = 13UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlN
  commentId: F:Terminal.Gui.Key.ControlN
  id: ControlN
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlN
  nameWithType: Key.ControlN
  fullName: Terminal.Gui.Key.ControlN
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlN
    path: ../Terminal.Gui/Event.cs
    startLine: 101
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-N (same as the return key).\n"
  example: []
  syntax:
    content: ControlN = 14U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlN = 14UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlO
  commentId: F:Terminal.Gui.Key.ControlO
  id: ControlO
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlO
  nameWithType: Key.ControlO
  fullName: Terminal.Gui.Key.ControlO
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlO
    path: ../Terminal.Gui/Event.cs
    startLine: 105
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-O\n"
  example: []
  syntax:
    content: ControlO = 15U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlO = 15UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlP
  commentId: F:Terminal.Gui.Key.ControlP
  id: ControlP
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlP
  nameWithType: Key.ControlP
  fullName: Terminal.Gui.Key.ControlP
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlP
    path: ../Terminal.Gui/Event.cs
    startLine: 109
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-P\n"
  example: []
  syntax:
    content: ControlP = 16U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlP = 16UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlQ
  commentId: F:Terminal.Gui.Key.ControlQ
  id: ControlQ
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlQ
  nameWithType: Key.ControlQ
  fullName: Terminal.Gui.Key.ControlQ
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlQ
    path: ../Terminal.Gui/Event.cs
    startLine: 113
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-Q\n"
  example: []
  syntax:
    content: ControlQ = 17U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlQ = 17UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlR
  commentId: F:Terminal.Gui.Key.ControlR
  id: ControlR
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlR
  nameWithType: Key.ControlR
  fullName: Terminal.Gui.Key.ControlR
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlR
    path: ../Terminal.Gui/Event.cs
    startLine: 117
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-R\n"
  example: []
  syntax:
    content: ControlR = 18U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlR = 18UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlS
  commentId: F:Terminal.Gui.Key.ControlS
  id: ControlS
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlS
  nameWithType: Key.ControlS
  fullName: Terminal.Gui.Key.ControlS
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlS
    path: ../Terminal.Gui/Event.cs
    startLine: 121
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-S\n"
  example: []
  syntax:
    content: ControlS = 19U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlS = 19UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlT
  commentId: F:Terminal.Gui.Key.ControlT
  id: ControlT
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlT
  nameWithType: Key.ControlT
  fullName: Terminal.Gui.Key.ControlT
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlT
    path: ../Terminal.Gui/Event.cs
    startLine: 125
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-T\n"
  example: []
  syntax:
    content: ControlT = 20U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlT = 20UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlU
  commentId: F:Terminal.Gui.Key.ControlU
  id: ControlU
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlU
  nameWithType: Key.ControlU
  fullName: Terminal.Gui.Key.ControlU
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlU
    path: ../Terminal.Gui/Event.cs
    startLine: 129
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-U\n"
  example: []
  syntax:
    content: ControlU = 21U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlU = 21UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlV
  commentId: F:Terminal.Gui.Key.ControlV
  id: ControlV
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlV
  nameWithType: Key.ControlV
  fullName: Terminal.Gui.Key.ControlV
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlV
    path: ../Terminal.Gui/Event.cs
    startLine: 133
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-V\n"
  example: []
  syntax:
    content: ControlV = 22U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlV = 22UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlW
  commentId: F:Terminal.Gui.Key.ControlW
  id: ControlW
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlW
  nameWithType: Key.ControlW
  fullName: Terminal.Gui.Key.ControlW
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlW
    path: ../Terminal.Gui/Event.cs
    startLine: 137
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-W\n"
  example: []
  syntax:
    content: ControlW = 23U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlW = 23UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlX
  commentId: F:Terminal.Gui.Key.ControlX
  id: ControlX
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlX
  nameWithType: Key.ControlX
  fullName: Terminal.Gui.Key.ControlX
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlX
    path: ../Terminal.Gui/Event.cs
    startLine: 141
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-X\n"
  example: []
  syntax:
    content: ControlX = 24U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlX = 24UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlY
  commentId: F:Terminal.Gui.Key.ControlY
  id: ControlY
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlY
  nameWithType: Key.ControlY
  fullName: Terminal.Gui.Key.ControlY
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlY
    path: ../Terminal.Gui/Event.cs
    startLine: 145
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-Y\n"
  example: []
  syntax:
    content: ControlY = 25U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlY = 25UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ControlZ
  commentId: F:Terminal.Gui.Key.ControlZ
  id: ControlZ
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ControlZ
  nameWithType: Key.ControlZ
  fullName: Terminal.Gui.Key.ControlZ
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ControlZ
    path: ../Terminal.Gui/Event.cs
    startLine: 149
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing Control-Z\n"
  example: []
  syntax:
    content: ControlZ = 26U
    return:
      type: Terminal.Gui.Key
    content.vb: ControlZ = 26UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.Esc
  commentId: F:Terminal.Gui.Key.Esc
  id: Esc
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: Esc
  nameWithType: Key.Esc
  fullName: Terminal.Gui.Key.Esc
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Esc
    path: ../Terminal.Gui/Event.cs
    startLine: 154
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing the escape key\n"
  example: []
  syntax:
    content: Esc = 27U
    return:
      type: Terminal.Gui.Key
    content.vb: Esc = 27UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.Enter
  commentId: F:Terminal.Gui.Key.Enter
  id: Enter
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: Enter
  nameWithType: Key.Enter
  fullName: Terminal.Gui.Key.Enter
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Enter
    path: ../Terminal.Gui/Event.cs
    startLine: 159
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing the return key.\n"
  example: []
  syntax:
    content: Enter = 10U
    return:
      type: Terminal.Gui.Key
    content.vb: Enter = 10UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.Space
  commentId: F:Terminal.Gui.Key.Space
  id: Space
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: Space
  nameWithType: Key.Space
  fullName: Terminal.Gui.Key.Space
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Space
    path: ../Terminal.Gui/Event.cs
    startLine: 164
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing the space bar\n"
  example: []
  syntax:
    content: Space = 32U
    return:
      type: Terminal.Gui.Key
    content.vb: Space = 32UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.Delete
  commentId: F:Terminal.Gui.Key.Delete
  id: Delete
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: Delete
  nameWithType: Key.Delete
  fullName: Terminal.Gui.Key.Delete
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Delete
    path: ../Terminal.Gui/Event.cs
    startLine: 169
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing the delete key.\n"
  example: []
  syntax:
    content: Delete = 127U
    return:
      type: Terminal.Gui.Key
    content.vb: Delete = 127UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.ShiftMask
  commentId: F:Terminal.Gui.Key.ShiftMask
  id: ShiftMask
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: ShiftMask
  nameWithType: Key.ShiftMask
  fullName: Terminal.Gui.Key.ShiftMask
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ShiftMask
    path: ../Terminal.Gui/Event.cs
    startLine: 174
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nWhen this value is set, the Key encodes the sequence Shift-KeyValue.\n"
  example: []
  syntax:
    content: ShiftMask = 268435456U
    return:
      type: Terminal.Gui.Key
    content.vb: ShiftMask = 268435456UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.AltMask
  commentId: F:Terminal.Gui.Key.AltMask
  id: AltMask
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: AltMask
  nameWithType: Key.AltMask
  fullName: Terminal.Gui.Key.AltMask
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: AltMask
    path: ../Terminal.Gui/Event.cs
    startLine: 180
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nWhen this value is set, the Key encodes the sequence Alt-KeyValue.\nAnd the actual value must be extracted by removing the AltMask.\n"
  example: []
  syntax:
    content: AltMask = 2147483648U
    return:
      type: Terminal.Gui.Key
    content.vb: AltMask = 2147483648UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.CtrlMask
  commentId: F:Terminal.Gui.Key.CtrlMask
  id: CtrlMask
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: CtrlMask
  nameWithType: Key.CtrlMask
  fullName: Terminal.Gui.Key.CtrlMask
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: CtrlMask
    path: ../Terminal.Gui/Event.cs
    startLine: 186
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nWhen this value is set, the Key encodes the sequence Ctrl-KeyValue.\nAnd the actual value must be extracted by removing the CtrlMask.\n"
  example: []
  syntax:
    content: CtrlMask = 1073741824U
    return:
      type: Terminal.Gui.Key
    content.vb: CtrlMask = 1073741824UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.Backspace
  commentId: F:Terminal.Gui.Key.Backspace
  id: Backspace
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: Backspace
  nameWithType: Key.Backspace
  fullName: Terminal.Gui.Key.Backspace
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Backspace
    path: ../Terminal.Gui/Event.cs
    startLine: 191
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nBackspace key.\n"
  example: []
  syntax:
    content: Backspace = 1048576U
    return:
      type: Terminal.Gui.Key
    content.vb: Backspace = 1048576UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.CursorUp
  commentId: F:Terminal.Gui.Key.CursorUp
  id: CursorUp
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: CursorUp
  nameWithType: Key.CursorUp
  fullName: Terminal.Gui.Key.CursorUp
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: CursorUp
    path: ../Terminal.Gui/Event.cs
    startLine: 196
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCursor up key\n"
  example: []
  syntax:
    content: CursorUp = 1048577U
    return:
      type: Terminal.Gui.Key
    content.vb: CursorUp = 1048577UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.CursorDown
  commentId: F:Terminal.Gui.Key.CursorDown
  id: CursorDown
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: CursorDown
  nameWithType: Key.CursorDown
  fullName: Terminal.Gui.Key.CursorDown
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: CursorDown
    path: ../Terminal.Gui/Event.cs
    startLine: 200
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCursor down key.\n"
  example: []
  syntax:
    content: CursorDown = 1048578U
    return:
      type: Terminal.Gui.Key
    content.vb: CursorDown = 1048578UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.CursorLeft
  commentId: F:Terminal.Gui.Key.CursorLeft
  id: CursorLeft
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: CursorLeft
  nameWithType: Key.CursorLeft
  fullName: Terminal.Gui.Key.CursorLeft
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: CursorLeft
    path: ../Terminal.Gui/Event.cs
    startLine: 204
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCursor left key.\n"
  example: []
  syntax:
    content: CursorLeft = 1048579U
    return:
      type: Terminal.Gui.Key
    content.vb: CursorLeft = 1048579UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.CursorRight
  commentId: F:Terminal.Gui.Key.CursorRight
  id: CursorRight
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: CursorRight
  nameWithType: Key.CursorRight
  fullName: Terminal.Gui.Key.CursorRight
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: CursorRight
    path: ../Terminal.Gui/Event.cs
    startLine: 208
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCursor right key.\n"
  example: []
  syntax:
    content: CursorRight = 1048580U
    return:
      type: Terminal.Gui.Key
    content.vb: CursorRight = 1048580UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.PageUp
  commentId: F:Terminal.Gui.Key.PageUp
  id: PageUp
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: PageUp
  nameWithType: Key.PageUp
  fullName: Terminal.Gui.Key.PageUp
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: PageUp
    path: ../Terminal.Gui/Event.cs
    startLine: 212
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nPage Up key.\n"
  example: []
  syntax:
    content: PageUp = 1048581U
    return:
      type: Terminal.Gui.Key
    content.vb: PageUp = 1048581UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.PageDown
  commentId: F:Terminal.Gui.Key.PageDown
  id: PageDown
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: PageDown
  nameWithType: Key.PageDown
  fullName: Terminal.Gui.Key.PageDown
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: PageDown
    path: ../Terminal.Gui/Event.cs
    startLine: 216
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nPage Down key.\n"
  example: []
  syntax:
    content: PageDown = 1048582U
    return:
      type: Terminal.Gui.Key
    content.vb: PageDown = 1048582UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.Home
  commentId: F:Terminal.Gui.Key.Home
  id: Home
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: Home
  nameWithType: Key.Home
  fullName: Terminal.Gui.Key.Home
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Home
    path: ../Terminal.Gui/Event.cs
    startLine: 220
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nHome key\n"
  example: []
  syntax:
    content: Home = 1048583U
    return:
      type: Terminal.Gui.Key
    content.vb: Home = 1048583UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.End
  commentId: F:Terminal.Gui.Key.End
  id: End
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: End
  nameWithType: Key.End
  fullName: Terminal.Gui.Key.End
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: End
    path: ../Terminal.Gui/Event.cs
    startLine: 224
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nEnd key\n"
  example: []
  syntax:
    content: End = 1048584U
    return:
      type: Terminal.Gui.Key
    content.vb: End = 1048584UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.DeleteChar
  commentId: F:Terminal.Gui.Key.DeleteChar
  id: DeleteChar
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: DeleteChar
  nameWithType: Key.DeleteChar
  fullName: Terminal.Gui.Key.DeleteChar
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: DeleteChar
    path: ../Terminal.Gui/Event.cs
    startLine: 228
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nDelete character key\n"
  example: []
  syntax:
    content: DeleteChar = 1048585U
    return:
      type: Terminal.Gui.Key
    content.vb: DeleteChar = 1048585UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.InsertChar
  commentId: F:Terminal.Gui.Key.InsertChar
  id: InsertChar
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: InsertChar
  nameWithType: Key.InsertChar
  fullName: Terminal.Gui.Key.InsertChar
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: InsertChar
    path: ../Terminal.Gui/Event.cs
    startLine: 232
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInsert character key\n"
  example: []
  syntax:
    content: InsertChar = 1048586U
    return:
      type: Terminal.Gui.Key
    content.vb: InsertChar = 1048586UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.F1
  commentId: F:Terminal.Gui.Key.F1
  id: F1
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: F1
  nameWithType: Key.F1
  fullName: Terminal.Gui.Key.F1
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: F1
    path: ../Terminal.Gui/Event.cs
    startLine: 236
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nF1 key.\n"
  example: []
  syntax:
    content: F1 = 1048587U
    return:
      type: Terminal.Gui.Key
    content.vb: F1 = 1048587UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.F2
  commentId: F:Terminal.Gui.Key.F2
  id: F2
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: F2
  nameWithType: Key.F2
  fullName: Terminal.Gui.Key.F2
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: F2
    path: ../Terminal.Gui/Event.cs
    startLine: 240
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nF2 key.\n"
  example: []
  syntax:
    content: F2 = 1048588U
    return:
      type: Terminal.Gui.Key
    content.vb: F2 = 1048588UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.F3
  commentId: F:Terminal.Gui.Key.F3
  id: F3
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: F3
  nameWithType: Key.F3
  fullName: Terminal.Gui.Key.F3
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: F3
    path: ../Terminal.Gui/Event.cs
    startLine: 244
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nF3 key.\n"
  example: []
  syntax:
    content: F3 = 1048589U
    return:
      type: Terminal.Gui.Key
    content.vb: F3 = 1048589UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.F4
  commentId: F:Terminal.Gui.Key.F4
  id: F4
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: F4
  nameWithType: Key.F4
  fullName: Terminal.Gui.Key.F4
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: F4
    path: ../Terminal.Gui/Event.cs
    startLine: 248
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nF4 key.\n"
  example: []
  syntax:
    content: F4 = 1048590U
    return:
      type: Terminal.Gui.Key
    content.vb: F4 = 1048590UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.F5
  commentId: F:Terminal.Gui.Key.F5
  id: F5
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: F5
  nameWithType: Key.F5
  fullName: Terminal.Gui.Key.F5
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: F5
    path: ../Terminal.Gui/Event.cs
    startLine: 252
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nF5 key.\n"
  example: []
  syntax:
    content: F5 = 1048591U
    return:
      type: Terminal.Gui.Key
    content.vb: F5 = 1048591UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.F6
  commentId: F:Terminal.Gui.Key.F6
  id: F6
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: F6
  nameWithType: Key.F6
  fullName: Terminal.Gui.Key.F6
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: F6
    path: ../Terminal.Gui/Event.cs
    startLine: 256
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nF6 key.\n"
  example: []
  syntax:
    content: F6 = 1048592U
    return:
      type: Terminal.Gui.Key
    content.vb: F6 = 1048592UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.F7
  commentId: F:Terminal.Gui.Key.F7
  id: F7
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: F7
  nameWithType: Key.F7
  fullName: Terminal.Gui.Key.F7
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: F7
    path: ../Terminal.Gui/Event.cs
    startLine: 260
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nF7 key.\n"
  example: []
  syntax:
    content: F7 = 1048593U
    return:
      type: Terminal.Gui.Key
    content.vb: F7 = 1048593UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.F8
  commentId: F:Terminal.Gui.Key.F8
  id: F8
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: F8
  nameWithType: Key.F8
  fullName: Terminal.Gui.Key.F8
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: F8
    path: ../Terminal.Gui/Event.cs
    startLine: 264
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nF8 key.\n"
  example: []
  syntax:
    content: F8 = 1048594U
    return:
      type: Terminal.Gui.Key
    content.vb: F8 = 1048594UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.F9
  commentId: F:Terminal.Gui.Key.F9
  id: F9
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: F9
  nameWithType: Key.F9
  fullName: Terminal.Gui.Key.F9
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: F9
    path: ../Terminal.Gui/Event.cs
    startLine: 268
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nF9 key.\n"
  example: []
  syntax:
    content: F9 = 1048595U
    return:
      type: Terminal.Gui.Key
    content.vb: F9 = 1048595UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.F10
  commentId: F:Terminal.Gui.Key.F10
  id: F10
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: F10
  nameWithType: Key.F10
  fullName: Terminal.Gui.Key.F10
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: F10
    path: ../Terminal.Gui/Event.cs
    startLine: 272
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nF10 key.\n"
  example: []
  syntax:
    content: F10 = 1048596U
    return:
      type: Terminal.Gui.Key
    content.vb: F10 = 1048596UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.Tab
  commentId: F:Terminal.Gui.Key.Tab
  id: Tab
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: Tab
  nameWithType: Key.Tab
  fullName: Terminal.Gui.Key.Tab
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Tab
    path: ../Terminal.Gui/Event.cs
    startLine: 276
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe key code for the user pressing the tab key (forwards tab key).\n"
  example: []
  syntax:
    content: Tab = 1048597U
    return:
      type: Terminal.Gui.Key
    content.vb: Tab = 1048597UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.BackTab
  commentId: F:Terminal.Gui.Key.BackTab
  id: BackTab
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: BackTab
  nameWithType: Key.BackTab
  fullName: Terminal.Gui.Key.BackTab
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: BackTab
    path: ../Terminal.Gui/Event.cs
    startLine: 280
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nShift-tab key (backwards tab key).\n"
  example: []
  syntax:
    content: BackTab = 1048598U
    return:
      type: Terminal.Gui.Key
    content.vb: BackTab = 1048598UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Terminal.Gui.Key.Unknown
  commentId: F:Terminal.Gui.Key.Unknown
  id: Unknown
  parent: Terminal.Gui.Key
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: Key.Unknown
  fullName: Terminal.Gui.Key.Unknown
  type: Field
  source:
    remote:
      path: Terminal.Gui/Event.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Unknown
    path: ../Terminal.Gui/Event.cs
    startLine: 284
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nA key with an unknown mapping was raised.\n"
  example: []
  syntax:
    content: Unknown = 1048599U
    return:
      type: Terminal.Gui.Key
    content.vb: Unknown = 1048599UI
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Terminal.Gui.Key
  commentId: T:Terminal.Gui.Key
  parent: Terminal.Gui
  name: Key
  nameWithType: Key
  fullName: Terminal.Gui.Key
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
shouldSkipMarkup: true
