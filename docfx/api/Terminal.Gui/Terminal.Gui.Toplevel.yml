### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.Toplevel
  commentId: T:Terminal.Gui.Toplevel
  id: Toplevel
  parent: Terminal.Gui
  children:
  - Terminal.Gui.Toplevel.#ctor
  - Terminal.Gui.Toplevel.#ctor(Terminal.Gui.Rect)
  - Terminal.Gui.Toplevel.Add(Terminal.Gui.View)
  - Terminal.Gui.Toplevel.CanFocus
  - Terminal.Gui.Toplevel.Create
  - Terminal.Gui.Toplevel.MenuBar
  - Terminal.Gui.Toplevel.Modal
  - Terminal.Gui.Toplevel.ProcessKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.Toplevel.Ready
  - Terminal.Gui.Toplevel.Redraw(Terminal.Gui.Rect)
  - Terminal.Gui.Toplevel.Remove(Terminal.Gui.View)
  - Terminal.Gui.Toplevel.RemoveAll
  - Terminal.Gui.Toplevel.Running
  - Terminal.Gui.Toplevel.StatusBar
  - Terminal.Gui.Toplevel.WillPresent
  langs:
  - csharp
  - vb
  name: Toplevel
  nameWithType: Toplevel
  fullName: Terminal.Gui.Toplevel
  type: Class
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Toplevel
    path: ../Terminal.Gui/Core.cs
    startLine: 1493
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nToplevel views can be modally executed.\n"
  remarks: "\n<p>\n  Toplevels can be modally executing views, and they return control\n  to the caller when the &quot;Running&quot; property is set to false, or\n  by calling <xref href=\"Terminal.Gui.Application.RequestStop()\" data-throw-if-not-resolved=\"false\"></xref>\n</p>\n<p>\n  There will be a toplevel created for you on the first time use\n  and can be accessed from the property <xref href=\"Terminal.Gui.Application.Top\" data-throw-if-not-resolved=\"false\"></xref>,\n  but new toplevels can be created and ran on top of it.   To run, create the\n  toplevel and then invoke <xref href=\"Terminal.Gui.Application.Run\" data-throw-if-not-resolved=\"false\"></xref> with the\n  new toplevel.\n</p>\n<p>\n  TopLevels can also opt-in to more sophisticated initialization\n  by implementing <xref href=\"System.ComponentModel.ISupportInitialize\" data-throw-if-not-resolved=\"false\"></xref>. When they do\n  so, the <xref href=\"System.ComponentModel.ISupportInitialize.BeginInit\" data-throw-if-not-resolved=\"false\"></xref> and\n<xref href=\"System.ComponentModel.ISupportInitialize.EndInit\" data-throw-if-not-resolved=\"false\"></xref> methods will be called\nbefore running the view.\nIf first-run-only initialization is preferred, the <xref href=\"System.ComponentModel.ISupportInitializeNotification\" data-throw-if-not-resolved=\"false\"></xref>\ncan be implemented too, in which case the <xref href=\"System.ComponentModel.ISupportInitialize\" data-throw-if-not-resolved=\"false\"></xref>\nmethods will only be called if <xref href=\"System.ComponentModel.ISupportInitializeNotification.IsInitialized\" data-throw-if-not-resolved=\"false\"></xref>\nis <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>. This allows proper View inheritance hierarchies\nto override base class layout code optimally by doing so only on first run,\ninstead of on every run.\n</p>\n"
  example: []
  syntax:
    content: 'public class Toplevel : View, IEnumerable'
    content.vb: >-
      Public Class Toplevel

          Inherits View

          Implements IEnumerable
  inheritance:
  - System.Object
  - Terminal.Gui.Responder
  - Terminal.Gui.View
  derivedClasses:
  - Terminal.Gui.Window
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - Terminal.Gui.View.Enter
  - Terminal.Gui.View.Leave
  - Terminal.Gui.View.MouseEnter
  - Terminal.Gui.View.MouseLeave
  - Terminal.Gui.View.Driver
  - Terminal.Gui.View.Subviews
  - Terminal.Gui.View.Id
  - Terminal.Gui.View.IsCurrentTop
  - Terminal.Gui.View.WantMousePositionReports
  - Terminal.Gui.View.WantContinuousButtonPressed
  - Terminal.Gui.View.Frame
  - Terminal.Gui.View.GetEnumerator
  - Terminal.Gui.View.LayoutStyle
  - Terminal.Gui.View.Bounds
  - Terminal.Gui.View.X
  - Terminal.Gui.View.Y
  - Terminal.Gui.View.Width
  - Terminal.Gui.View.Height
  - Terminal.Gui.View.SuperView
  - Terminal.Gui.View.SetNeedsDisplay
  - Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  - Terminal.Gui.View.ChildNeedsDisplay
  - Terminal.Gui.View.Add(Terminal.Gui.View[])
  - Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  - Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  - Terminal.Gui.View.Clear
  - Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  - Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  - Terminal.Gui.View.ClipToBounds
  - Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  - Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  - Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  - Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  - Terminal.Gui.View.Move(System.Int32,System.Int32)
  - Terminal.Gui.View.PositionCursor
  - Terminal.Gui.View.HasFocus
  - Terminal.Gui.View.OnEnter
  - Terminal.Gui.View.OnLeave
  - Terminal.Gui.View.Focused
  - Terminal.Gui.View.MostFocused
  - Terminal.Gui.View.ColorScheme
  - Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  - Terminal.Gui.View.ClearNeedsDisplay
  - Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  - Terminal.Gui.View.KeyPress
  - Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.KeyDown
  - Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.KeyUp
  - Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.EnsureFocus
  - Terminal.Gui.View.FocusFirst
  - Terminal.Gui.View.FocusLast
  - Terminal.Gui.View.FocusPrev
  - Terminal.Gui.View.FocusNext
  - Terminal.Gui.View.LayoutSubviews
  - Terminal.Gui.View.ToString
  - Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  - Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  - Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Terminal.Gui.Toplevel.Running
  commentId: P:Terminal.Gui.Toplevel.Running
  id: Running
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: Running
  nameWithType: Toplevel.Running
  fullName: Terminal.Gui.Toplevel.Running
  type: Property
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Running
    path: ../Terminal.Gui/Core.cs
    startLine: 1498
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets or sets whether the Mainloop for this <xref href=\"Terminal.Gui.Toplevel\" data-throw-if-not-resolved=\"false\"></xref> is running or not. Setting\nthis property to false will cause the MainLoop to exit. \n"
  example: []
  syntax:
    content: public bool Running { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Running As Boolean
  overload: Terminal.Gui.Toplevel.Running*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.Toplevel.Ready
  commentId: E:Terminal.Gui.Toplevel.Ready
  id: Ready
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: Ready
  nameWithType: Toplevel.Ready
  fullName: Terminal.Gui.Toplevel.Ready
  type: Event
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Ready
    path: ../Terminal.Gui/Core.cs
    startLine: 1505
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nFired once the Toplevel&apos;s MainLoop has started it&apos;s first iteration. \nSubscribe to this event to perform tasks when the <xref href=\"Terminal.Gui.Toplevel\" data-throw-if-not-resolved=\"false\"></xref> has been laid out and focus has been set.\nchanges. A Ready event handler is a good place to finalize initialization after calling `<xref href=\"Terminal.Gui.Application.Run\" data-throw-if-not-resolved=\"false\"></xref>(topLevel)`. \n"
  example: []
  syntax:
    content: public event EventHandler Ready
    return:
      type: System.EventHandler
    content.vb: Public Event Ready As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.Toplevel.#ctor(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.Toplevel.#ctor(Terminal.Gui.Rect)
  id: '#ctor(Terminal.Gui.Rect)'
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: Toplevel(Rect)
  nameWithType: Toplevel.Toplevel(Rect)
  fullName: Terminal.Gui.Toplevel.Toplevel(Terminal.Gui.Rect)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Core.cs
    startLine: 1519
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitializes a new instance of the <xref href=\"Terminal.Gui.Toplevel\" data-throw-if-not-resolved=\"false\"></xref> class with the specified absolute layout.\n"
  example: []
  syntax:
    content: public Toplevel(Rect frame)
    parameters:
    - id: frame
      type: Terminal.Gui.Rect
      description: Frame.
    content.vb: Public Sub New(frame As Rect)
  overload: Terminal.Gui.Toplevel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.Toplevel.#ctor
  commentId: M:Terminal.Gui.Toplevel.#ctor
  id: '#ctor'
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: Toplevel()
  nameWithType: Toplevel.Toplevel()
  fullName: Terminal.Gui.Toplevel.Toplevel()
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Core.cs
    startLine: 1527
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitializes a new instance of the <xref href=\"Terminal.Gui.Toplevel\" data-throw-if-not-resolved=\"false\"></xref> class with Computed layout, defaulting to <xref uid=\"langword_csharp_async\" name=\"async\" href=\"\"></xref> full screen.\n"
  example: []
  syntax:
    content: public Toplevel()
    content.vb: Public Sub New
  overload: Terminal.Gui.Toplevel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.Toplevel.Create
  commentId: M:Terminal.Gui.Toplevel.Create
  id: Create
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: Toplevel.Create()
  fullName: Terminal.Gui.Toplevel.Create()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Create
    path: ../Terminal.Gui/Core.cs
    startLine: 1543
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nConvenience factory method that creates a new toplevel with the current terminal dimensions.\n"
  example: []
  syntax:
    content: public static Toplevel Create()
    return:
      type: Terminal.Gui.Toplevel
      description: The create.
    content.vb: Public Shared Function Create As Toplevel
  overload: Terminal.Gui.Toplevel.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Toplevel.CanFocus
  commentId: P:Terminal.Gui.Toplevel.CanFocus
  id: CanFocus
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: CanFocus
  nameWithType: Toplevel.CanFocus
  fullName: Terminal.Gui.Toplevel.CanFocus
  type: Property
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: CanFocus
    path: ../Terminal.Gui/Core.cs
    startLine: 1552
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets or sets a value indicating whether this <xref href=\"Terminal.Gui.Toplevel\" data-throw-if-not-resolved=\"false\"></xref> can focus.\n"
  example: []
  syntax:
    content: public override bool CanFocus { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if can focus; otherwise, <code>false</code>.
    content.vb: Public Overrides ReadOnly Property CanFocus As Boolean
  overridden: Terminal.Gui.Responder.CanFocus
  overload: Terminal.Gui.Toplevel.CanFocus*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: Terminal.Gui.Toplevel.Modal
  commentId: P:Terminal.Gui.Toplevel.Modal
  id: Modal
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: Modal
  nameWithType: Toplevel.Modal
  fullName: Terminal.Gui.Toplevel.Modal
  type: Property
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Modal
    path: ../Terminal.Gui/Core.cs
    startLine: 1561
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nDetermines whether the <xref href=\"Terminal.Gui.Toplevel\" data-throw-if-not-resolved=\"false\"></xref> is modal or not.\nCauses <xref href=\"Terminal.Gui.Toplevel.ProcessKey(Terminal.Gui.KeyEvent)\" data-throw-if-not-resolved=\"false\"></xref> to propagate keys upwards\nby default unless set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.\n"
  example: []
  syntax:
    content: public bool Modal { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Modal As Boolean
  overload: Terminal.Gui.Toplevel.Modal*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.Toplevel.MenuBar
  commentId: P:Terminal.Gui.Toplevel.MenuBar
  id: MenuBar
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: MenuBar
  nameWithType: Toplevel.MenuBar
  fullName: Terminal.Gui.Toplevel.MenuBar
  type: Property
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: MenuBar
    path: ../Terminal.Gui/Core.cs
    startLine: 1566
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCheck id current toplevel has menu bar\n"
  example: []
  syntax:
    content: public MenuBar MenuBar { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.MenuBar
    content.vb: Public Property MenuBar As MenuBar
  overload: Terminal.Gui.Toplevel.MenuBar*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.Toplevel.StatusBar
  commentId: P:Terminal.Gui.Toplevel.StatusBar
  id: StatusBar
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: StatusBar
  nameWithType: Toplevel.StatusBar
  fullName: Terminal.Gui.Toplevel.StatusBar
  type: Property
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: StatusBar
    path: ../Terminal.Gui/Core.cs
    startLine: 1571
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCheck id current toplevel has status bar\n"
  example: []
  syntax:
    content: public StatusBar StatusBar { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.StatusBar
    content.vb: Public Property StatusBar As StatusBar
  overload: Terminal.Gui.Toplevel.StatusBar*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.Toplevel.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.Toplevel.ProcessKey(Terminal.Gui.KeyEvent)
  id: ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: ProcessKey(KeyEvent)
  nameWithType: Toplevel.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.Toplevel.ProcessKey(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ProcessKey
    path: ../Terminal.Gui/Core.cs
    startLine: 1574
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override bool ProcessKey(KeyEvent keyEvent)
    parameters:
    - id: keyEvent
      type: Terminal.Gui.KeyEvent
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ProcessKey(keyEvent As KeyEvent) As Boolean
  overridden: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  overload: Terminal.Gui.Toplevel.ProcessKey*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.Toplevel.Add(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Toplevel.Add(Terminal.Gui.View)
  id: Add(Terminal.Gui.View)
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: Add(View)
  nameWithType: Toplevel.Add(View)
  fullName: Terminal.Gui.Toplevel.Add(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Add
    path: ../Terminal.Gui/Core.cs
    startLine: 1626
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override void Add(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
    content.vb: Public Overrides Sub Add(view As View)
  overridden: Terminal.Gui.View.Add(Terminal.Gui.View)
  overload: Terminal.Gui.Toplevel.Add*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.Toplevel.Remove(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Toplevel.Remove(Terminal.Gui.View)
  id: Remove(Terminal.Gui.View)
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: Remove(View)
  nameWithType: Toplevel.Remove(View)
  fullName: Terminal.Gui.Toplevel.Remove(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Remove
    path: ../Terminal.Gui/Core.cs
    startLine: 1638
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override void Remove(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
    content.vb: Public Overrides Sub Remove(view As View)
  overridden: Terminal.Gui.View.Remove(Terminal.Gui.View)
  overload: Terminal.Gui.Toplevel.Remove*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.Toplevel.RemoveAll
  commentId: M:Terminal.Gui.Toplevel.RemoveAll
  id: RemoveAll
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: RemoveAll()
  nameWithType: Toplevel.RemoveAll()
  fullName: Terminal.Gui.Toplevel.RemoveAll()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: RemoveAll
    path: ../Terminal.Gui/Core.cs
    startLine: 1650
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override void RemoveAll()
    content.vb: Public Overrides Sub RemoveAll
  overridden: Terminal.Gui.View.RemoveAll
  overload: Terminal.Gui.Toplevel.RemoveAll*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.Toplevel.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.Toplevel.Redraw(Terminal.Gui.Rect)
  id: Redraw(Terminal.Gui.Rect)
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: Redraw(Rect)
  nameWithType: Toplevel.Redraw(Rect)
  fullName: Terminal.Gui.Toplevel.Redraw(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Redraw
    path: ../Terminal.Gui/Core.cs
    startLine: 1711
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override void Redraw(Rect region)
    parameters:
    - id: region
      type: Terminal.Gui.Rect
    content.vb: Public Overrides Sub Redraw(region As Rect)
  overridden: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  overload: Terminal.Gui.Toplevel.Redraw*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.Toplevel.WillPresent
  commentId: M:Terminal.Gui.Toplevel.WillPresent
  id: WillPresent
  parent: Terminal.Gui.Toplevel
  langs:
  - csharp
  - vb
  name: WillPresent()
  nameWithType: Toplevel.WillPresent()
  fullName: Terminal.Gui.Toplevel.WillPresent()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Core.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: WillPresent
    path: ../Terminal.Gui/Core.cs
    startLine: 1738
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThis method is invoked by Application.Begin as part of the Application.Run after\nthe views have been laid out, and before the views are drawn for the first time.\n"
  example: []
  syntax:
    content: public virtual void WillPresent()
    content.vb: Public Overridable Sub WillPresent
  overload: Terminal.Gui.Toplevel.WillPresent*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Terminal.Gui.Application.RequestStop()
  commentId: M:Terminal.Gui.Application.RequestStop()
  isExternal: true
- uid: Terminal.Gui.Application.Top
  commentId: P:Terminal.Gui.Application.Top
  isExternal: true
- uid: Terminal.Gui.Application.Run
  commentId: M:Terminal.Gui.Application.Run
  isExternal: true
- uid: System.ComponentModel.ISupportInitialize
  commentId: T:System.ComponentModel.ISupportInitialize
  isExternal: true
- uid: System.ComponentModel.ISupportInitialize.BeginInit
  commentId: M:System.ComponentModel.ISupportInitialize.BeginInit
  isExternal: true
- uid: System.ComponentModel.ISupportInitialize.EndInit
  commentId: M:System.ComponentModel.ISupportInitialize.EndInit
  isExternal: true
- uid: System.ComponentModel.ISupportInitializeNotification
  commentId: T:System.ComponentModel.ISupportInitializeNotification
  isExternal: true
- uid: System.ComponentModel.ISupportInitializeNotification.IsInitialized
  commentId: P:System.ComponentModel.ISupportInitializeNotification.IsInitialized
  isExternal: true
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Terminal.Gui.Responder
  commentId: T:Terminal.Gui.Responder
  parent: Terminal.Gui
  name: Responder
  nameWithType: Responder
  fullName: Terminal.Gui.Responder
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Terminal.Gui.View.Enter
  commentId: E:Terminal.Gui.View.Enter
  parent: Terminal.Gui.View
  name: Enter
  nameWithType: View.Enter
  fullName: Terminal.Gui.View.Enter
- uid: Terminal.Gui.View.Leave
  commentId: E:Terminal.Gui.View.Leave
  parent: Terminal.Gui.View
  name: Leave
  nameWithType: View.Leave
  fullName: Terminal.Gui.View.Leave
- uid: Terminal.Gui.View.MouseEnter
  commentId: E:Terminal.Gui.View.MouseEnter
  parent: Terminal.Gui.View
  name: MouseEnter
  nameWithType: View.MouseEnter
  fullName: Terminal.Gui.View.MouseEnter
- uid: Terminal.Gui.View.MouseLeave
  commentId: E:Terminal.Gui.View.MouseLeave
  parent: Terminal.Gui.View
  name: MouseLeave
  nameWithType: View.MouseLeave
  fullName: Terminal.Gui.View.MouseLeave
- uid: Terminal.Gui.View.Driver
  commentId: P:Terminal.Gui.View.Driver
  parent: Terminal.Gui.View
  name: Driver
  nameWithType: View.Driver
  fullName: Terminal.Gui.View.Driver
- uid: Terminal.Gui.View.Subviews
  commentId: P:Terminal.Gui.View.Subviews
  parent: Terminal.Gui.View
  name: Subviews
  nameWithType: View.Subviews
  fullName: Terminal.Gui.View.Subviews
- uid: Terminal.Gui.View.Id
  commentId: P:Terminal.Gui.View.Id
  parent: Terminal.Gui.View
  name: Id
  nameWithType: View.Id
  fullName: Terminal.Gui.View.Id
- uid: Terminal.Gui.View.IsCurrentTop
  commentId: P:Terminal.Gui.View.IsCurrentTop
  parent: Terminal.Gui.View
  name: IsCurrentTop
  nameWithType: View.IsCurrentTop
  fullName: Terminal.Gui.View.IsCurrentTop
- uid: Terminal.Gui.View.WantMousePositionReports
  commentId: P:Terminal.Gui.View.WantMousePositionReports
  parent: Terminal.Gui.View
  name: WantMousePositionReports
  nameWithType: View.WantMousePositionReports
  fullName: Terminal.Gui.View.WantMousePositionReports
- uid: Terminal.Gui.View.WantContinuousButtonPressed
  commentId: P:Terminal.Gui.View.WantContinuousButtonPressed
  parent: Terminal.Gui.View
  name: WantContinuousButtonPressed
  nameWithType: View.WantContinuousButtonPressed
  fullName: Terminal.Gui.View.WantContinuousButtonPressed
- uid: Terminal.Gui.View.Frame
  commentId: P:Terminal.Gui.View.Frame
  parent: Terminal.Gui.View
  name: Frame
  nameWithType: View.Frame
  fullName: Terminal.Gui.View.Frame
- uid: Terminal.Gui.View.GetEnumerator
  commentId: M:Terminal.Gui.View.GetEnumerator
  parent: Terminal.Gui.View
  name: GetEnumerator()
  nameWithType: View.GetEnumerator()
  fullName: Terminal.Gui.View.GetEnumerator()
  spec.csharp:
  - uid: Terminal.Gui.View.GetEnumerator
    name: GetEnumerator
    nameWithType: View.GetEnumerator
    fullName: Terminal.Gui.View.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.GetEnumerator
    name: GetEnumerator
    nameWithType: View.GetEnumerator
    fullName: Terminal.Gui.View.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.LayoutStyle
  commentId: P:Terminal.Gui.View.LayoutStyle
  parent: Terminal.Gui.View
  name: LayoutStyle
  nameWithType: View.LayoutStyle
  fullName: Terminal.Gui.View.LayoutStyle
- uid: Terminal.Gui.View.Bounds
  commentId: P:Terminal.Gui.View.Bounds
  parent: Terminal.Gui.View
  name: Bounds
  nameWithType: View.Bounds
  fullName: Terminal.Gui.View.Bounds
- uid: Terminal.Gui.View.X
  commentId: P:Terminal.Gui.View.X
  parent: Terminal.Gui.View
  name: X
  nameWithType: View.X
  fullName: Terminal.Gui.View.X
- uid: Terminal.Gui.View.Y
  commentId: P:Terminal.Gui.View.Y
  parent: Terminal.Gui.View
  name: Y
  nameWithType: View.Y
  fullName: Terminal.Gui.View.Y
- uid: Terminal.Gui.View.Width
  commentId: P:Terminal.Gui.View.Width
  parent: Terminal.Gui.View
  name: Width
  nameWithType: View.Width
  fullName: Terminal.Gui.View.Width
- uid: Terminal.Gui.View.Height
  commentId: P:Terminal.Gui.View.Height
  parent: Terminal.Gui.View
  name: Height
  nameWithType: View.Height
  fullName: Terminal.Gui.View.Height
- uid: Terminal.Gui.View.SuperView
  commentId: P:Terminal.Gui.View.SuperView
  parent: Terminal.Gui.View
  name: SuperView
  nameWithType: View.SuperView
  fullName: Terminal.Gui.View.SuperView
- uid: Terminal.Gui.View.SetNeedsDisplay
  commentId: M:Terminal.Gui.View.SetNeedsDisplay
  parent: Terminal.Gui.View
  name: SetNeedsDisplay()
  nameWithType: View.SetNeedsDisplay()
  fullName: Terminal.Gui.View.SetNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: SetNeedsDisplay(Rect)
  nameWithType: View.SetNeedsDisplay(Rect)
  fullName: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ChildNeedsDisplay
  commentId: M:Terminal.Gui.View.ChildNeedsDisplay
  parent: Terminal.Gui.View
  name: ChildNeedsDisplay()
  nameWithType: View.ChildNeedsDisplay()
  fullName: Terminal.Gui.View.ChildNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.ChildNeedsDisplay
    name: ChildNeedsDisplay
    nameWithType: View.ChildNeedsDisplay
    fullName: Terminal.Gui.View.ChildNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ChildNeedsDisplay
    name: ChildNeedsDisplay
    nameWithType: View.ChildNeedsDisplay
    fullName: Terminal.Gui.View.ChildNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View[])
  parent: Terminal.Gui.View
  name: Add(View[])
  nameWithType: View.Add(View[])
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View[])
  nameWithType.vb: View.Add(View())
  fullName.vb: Terminal.Gui.View.Add(Terminal.Gui.View())
  name.vb: Add(View())
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: BringSubviewToFront(View)
  nameWithType: View.BringSubviewToFront(View)
  fullName: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    nameWithType: View.BringSubviewToFront
    fullName: Terminal.Gui.View.BringSubviewToFront
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    nameWithType: View.BringSubviewToFront
    fullName: Terminal.Gui.View.BringSubviewToFront
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SendSubviewToBack(View)
  nameWithType: View.SendSubviewToBack(View)
  fullName: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    nameWithType: View.SendSubviewToBack
    fullName: Terminal.Gui.View.SendSubviewToBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    nameWithType: View.SendSubviewToBack
    fullName: Terminal.Gui.View.SendSubviewToBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SendSubviewBackwards(View)
  nameWithType: View.SendSubviewBackwards(View)
  fullName: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
    name: SendSubviewBackwards
    nameWithType: View.SendSubviewBackwards
    fullName: Terminal.Gui.View.SendSubviewBackwards
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
    name: SendSubviewBackwards
    nameWithType: View.SendSubviewBackwards
    fullName: Terminal.Gui.View.SendSubviewBackwards
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: BringSubviewForward(View)
  nameWithType: View.BringSubviewForward(View)
  fullName: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
    name: BringSubviewForward
    nameWithType: View.BringSubviewForward
    fullName: Terminal.Gui.View.BringSubviewForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
    name: BringSubviewForward
    nameWithType: View.BringSubviewForward
    fullName: Terminal.Gui.View.BringSubviewForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Clear
  commentId: M:Terminal.Gui.View.Clear
  parent: Terminal.Gui.View
  name: Clear()
  nameWithType: View.Clear()
  fullName: Terminal.Gui.View.Clear()
  spec.csharp:
  - uid: Terminal.Gui.View.Clear
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Clear
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: Clear(Rect)
  nameWithType: View.Clear(Rect)
  fullName: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  name: ScreenToView(Int32, Int32)
  nameWithType: View.ScreenToView(Int32, Int32)
  fullName: Terminal.Gui.View.ScreenToView(System.Int32, System.Int32)
  spec.csharp:
  - uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
    name: ScreenToView
    nameWithType: View.ScreenToView
    fullName: Terminal.Gui.View.ScreenToView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
    name: ScreenToView
    nameWithType: View.ScreenToView
    fullName: Terminal.Gui.View.ScreenToView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ClipToBounds
  commentId: M:Terminal.Gui.View.ClipToBounds
  parent: Terminal.Gui.View
  name: ClipToBounds()
  nameWithType: View.ClipToBounds()
  fullName: Terminal.Gui.View.ClipToBounds()
  spec.csharp:
  - uid: Terminal.Gui.View.ClipToBounds
    name: ClipToBounds
    nameWithType: View.ClipToBounds
    fullName: Terminal.Gui.View.ClipToBounds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ClipToBounds
    name: ClipToBounds
    nameWithType: View.ClipToBounds
    fullName: Terminal.Gui.View.ClipToBounds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: SetClip(Rect)
  nameWithType: View.SetClip(Rect)
  fullName: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
    name: SetClip
    nameWithType: View.SetClip
    fullName: Terminal.Gui.View.SetClip
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
    name: SetClip
    nameWithType: View.SetClip
    fullName: Terminal.Gui.View.SetClip
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  commentId: M:Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawFrame(Rect, Int32, Boolean)
  nameWithType: View.DrawFrame(Rect, Int32, Boolean)
  fullName: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect, System.Int32, System.Boolean)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
    name: DrawFrame
    nameWithType: View.DrawFrame
    fullName: Terminal.Gui.View.DrawFrame
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
    name: DrawFrame
    nameWithType: View.DrawFrame
    fullName: Terminal.Gui.View.DrawFrame
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  commentId: M:Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawHotString(ustring, Attribute, Attribute)
  nameWithType: View.DrawHotString(ustring, Attribute, Attribute)
  fullName: Terminal.Gui.View.DrawHotString(NStack.ustring, Terminal.Gui.Attribute, Terminal.Gui.Attribute)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  commentId: M:Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawHotString(ustring, Boolean, ColorScheme)
  nameWithType: View.DrawHotString(ustring, Boolean, ColorScheme)
  fullName: Terminal.Gui.View.DrawHotString(NStack.ustring, System.Boolean, Terminal.Gui.ColorScheme)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: Terminal.Gui.ColorScheme
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: Terminal.Gui.ColorScheme
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.Move(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  name: Move(Int32, Int32)
  nameWithType: View.Move(Int32, Int32)
  fullName: Terminal.Gui.View.Move(System.Int32, System.Int32)
  spec.csharp:
  - uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: View.Move
    fullName: Terminal.Gui.View.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: View.Move
    fullName: Terminal.Gui.View.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.PositionCursor
  commentId: M:Terminal.Gui.View.PositionCursor
  parent: Terminal.Gui.View
  name: PositionCursor()
  nameWithType: View.PositionCursor()
  fullName: Terminal.Gui.View.PositionCursor()
  spec.csharp:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    nameWithType: View.PositionCursor
    fullName: Terminal.Gui.View.PositionCursor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    nameWithType: View.PositionCursor
    fullName: Terminal.Gui.View.PositionCursor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.HasFocus
  commentId: P:Terminal.Gui.View.HasFocus
  parent: Terminal.Gui.View
  name: HasFocus
  nameWithType: View.HasFocus
  fullName: Terminal.Gui.View.HasFocus
- uid: Terminal.Gui.View.OnEnter
  commentId: M:Terminal.Gui.View.OnEnter
  parent: Terminal.Gui.View
  name: OnEnter()
  nameWithType: View.OnEnter()
  fullName: Terminal.Gui.View.OnEnter()
  spec.csharp:
  - uid: Terminal.Gui.View.OnEnter
    name: OnEnter
    nameWithType: View.OnEnter
    fullName: Terminal.Gui.View.OnEnter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnEnter
    name: OnEnter
    nameWithType: View.OnEnter
    fullName: Terminal.Gui.View.OnEnter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnLeave
  commentId: M:Terminal.Gui.View.OnLeave
  parent: Terminal.Gui.View
  name: OnLeave()
  nameWithType: View.OnLeave()
  fullName: Terminal.Gui.View.OnLeave()
  spec.csharp:
  - uid: Terminal.Gui.View.OnLeave
    name: OnLeave
    nameWithType: View.OnLeave
    fullName: Terminal.Gui.View.OnLeave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnLeave
    name: OnLeave
    nameWithType: View.OnLeave
    fullName: Terminal.Gui.View.OnLeave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Focused
  commentId: P:Terminal.Gui.View.Focused
  parent: Terminal.Gui.View
  name: Focused
  nameWithType: View.Focused
  fullName: Terminal.Gui.View.Focused
- uid: Terminal.Gui.View.MostFocused
  commentId: P:Terminal.Gui.View.MostFocused
  parent: Terminal.Gui.View
  name: MostFocused
  nameWithType: View.MostFocused
  fullName: Terminal.Gui.View.MostFocused
- uid: Terminal.Gui.View.ColorScheme
  commentId: P:Terminal.Gui.View.ColorScheme
  parent: Terminal.Gui.View
  name: ColorScheme
  nameWithType: View.ColorScheme
  fullName: Terminal.Gui.View.ColorScheme
- uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  commentId: M:Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  parent: Terminal.Gui.View
  isExternal: true
  name: AddRune(Int32, Int32, Rune)
  nameWithType: View.AddRune(Int32, Int32, Rune)
  fullName: Terminal.Gui.View.AddRune(System.Int32, System.Int32, System.Rune)
  spec.csharp:
  - uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
    name: AddRune
    nameWithType: View.AddRune
    fullName: Terminal.Gui.View.AddRune
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Rune
    name: Rune
    nameWithType: Rune
    fullName: System.Rune
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
    name: AddRune
    nameWithType: View.AddRune
    fullName: Terminal.Gui.View.AddRune
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Rune
    name: Rune
    nameWithType: Rune
    fullName: System.Rune
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ClearNeedsDisplay
  commentId: M:Terminal.Gui.View.ClearNeedsDisplay
  parent: Terminal.Gui.View
  name: ClearNeedsDisplay()
  nameWithType: View.ClearNeedsDisplay()
  fullName: Terminal.Gui.View.ClearNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.ClearNeedsDisplay
    name: ClearNeedsDisplay
    nameWithType: View.ClearNeedsDisplay
    fullName: Terminal.Gui.View.ClearNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ClearNeedsDisplay
    name: ClearNeedsDisplay
    nameWithType: View.ClearNeedsDisplay
    fullName: Terminal.Gui.View.ClearNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SetFocus(View)
  nameWithType: View.SetFocus(View)
  fullName: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
    name: SetFocus
    nameWithType: View.SetFocus
    fullName: Terminal.Gui.View.SetFocus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
    name: SetFocus
    nameWithType: View.SetFocus
    fullName: Terminal.Gui.View.SetFocus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyPress
  commentId: E:Terminal.Gui.View.KeyPress
  parent: Terminal.Gui.View
  name: KeyPress
  nameWithType: View.KeyPress
  fullName: Terminal.Gui.View.KeyPress
- uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessHotKey(KeyEvent)
  nameWithType: View.ProcessHotKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    nameWithType: View.ProcessHotKey
    fullName: Terminal.Gui.View.ProcessHotKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    nameWithType: View.ProcessHotKey
    fullName: Terminal.Gui.View.ProcessHotKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessColdKey(KeyEvent)
  nameWithType: View.ProcessColdKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    nameWithType: View.ProcessColdKey
    fullName: Terminal.Gui.View.ProcessColdKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    nameWithType: View.ProcessColdKey
    fullName: Terminal.Gui.View.ProcessColdKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyDown
  commentId: E:Terminal.Gui.View.KeyDown
  parent: Terminal.Gui.View
  name: KeyDown
  nameWithType: View.KeyDown
  fullName: Terminal.Gui.View.KeyDown
- uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: OnKeyDown(KeyEvent)
  nameWithType: View.OnKeyDown(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    nameWithType: View.OnKeyDown
    fullName: Terminal.Gui.View.OnKeyDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    nameWithType: View.OnKeyDown
    fullName: Terminal.Gui.View.OnKeyDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyUp
  commentId: E:Terminal.Gui.View.KeyUp
  parent: Terminal.Gui.View
  name: KeyUp
  nameWithType: View.KeyUp
  fullName: Terminal.Gui.View.KeyUp
- uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: OnKeyUp(KeyEvent)
  nameWithType: View.OnKeyUp(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    nameWithType: View.OnKeyUp
    fullName: Terminal.Gui.View.OnKeyUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    nameWithType: View.OnKeyUp
    fullName: Terminal.Gui.View.OnKeyUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.EnsureFocus
  commentId: M:Terminal.Gui.View.EnsureFocus
  parent: Terminal.Gui.View
  name: EnsureFocus()
  nameWithType: View.EnsureFocus()
  fullName: Terminal.Gui.View.EnsureFocus()
  spec.csharp:
  - uid: Terminal.Gui.View.EnsureFocus
    name: EnsureFocus
    nameWithType: View.EnsureFocus
    fullName: Terminal.Gui.View.EnsureFocus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.EnsureFocus
    name: EnsureFocus
    nameWithType: View.EnsureFocus
    fullName: Terminal.Gui.View.EnsureFocus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusFirst
  commentId: M:Terminal.Gui.View.FocusFirst
  parent: Terminal.Gui.View
  name: FocusFirst()
  nameWithType: View.FocusFirst()
  fullName: Terminal.Gui.View.FocusFirst()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusFirst
    name: FocusFirst
    nameWithType: View.FocusFirst
    fullName: Terminal.Gui.View.FocusFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusFirst
    name: FocusFirst
    nameWithType: View.FocusFirst
    fullName: Terminal.Gui.View.FocusFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusLast
  commentId: M:Terminal.Gui.View.FocusLast
  parent: Terminal.Gui.View
  name: FocusLast()
  nameWithType: View.FocusLast()
  fullName: Terminal.Gui.View.FocusLast()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusLast
    name: FocusLast
    nameWithType: View.FocusLast
    fullName: Terminal.Gui.View.FocusLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusLast
    name: FocusLast
    nameWithType: View.FocusLast
    fullName: Terminal.Gui.View.FocusLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusPrev
  commentId: M:Terminal.Gui.View.FocusPrev
  parent: Terminal.Gui.View
  name: FocusPrev()
  nameWithType: View.FocusPrev()
  fullName: Terminal.Gui.View.FocusPrev()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusPrev
    name: FocusPrev
    nameWithType: View.FocusPrev
    fullName: Terminal.Gui.View.FocusPrev
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusPrev
    name: FocusPrev
    nameWithType: View.FocusPrev
    fullName: Terminal.Gui.View.FocusPrev
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusNext
  commentId: M:Terminal.Gui.View.FocusNext
  parent: Terminal.Gui.View
  name: FocusNext()
  nameWithType: View.FocusNext()
  fullName: Terminal.Gui.View.FocusNext()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusNext
    name: FocusNext
    nameWithType: View.FocusNext
    fullName: Terminal.Gui.View.FocusNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusNext
    name: FocusNext
    nameWithType: View.FocusNext
    fullName: Terminal.Gui.View.FocusNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.LayoutSubviews
  commentId: M:Terminal.Gui.View.LayoutSubviews
  parent: Terminal.Gui.View
  name: LayoutSubviews()
  nameWithType: View.LayoutSubviews()
  fullName: Terminal.Gui.View.LayoutSubviews()
  spec.csharp:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    nameWithType: View.LayoutSubviews
    fullName: Terminal.Gui.View.LayoutSubviews
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    nameWithType: View.LayoutSubviews
    fullName: Terminal.Gui.View.LayoutSubviews
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ToString
  commentId: M:Terminal.Gui.View.ToString
  parent: Terminal.Gui.View
  name: ToString()
  nameWithType: View.ToString()
  fullName: Terminal.Gui.View.ToString()
  spec.csharp:
  - uid: Terminal.Gui.View.ToString
    name: ToString
    nameWithType: View.ToString
    fullName: Terminal.Gui.View.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ToString
    name: ToString
    nameWithType: View.ToString
    fullName: Terminal.Gui.View.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  name: OnMouseEnter(MouseEvent)
  nameWithType: View.OnMouseEnter(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    nameWithType: View.OnMouseEnter
    fullName: Terminal.Gui.View.OnMouseEnter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    nameWithType: View.OnMouseEnter
    fullName: Terminal.Gui.View.OnMouseEnter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  name: OnMouseLeave(MouseEvent)
  nameWithType: View.OnMouseLeave(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    nameWithType: View.OnMouseLeave
    fullName: Terminal.Gui.View.OnMouseLeave
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    nameWithType: View.OnMouseLeave
    fullName: Terminal.Gui.View.OnMouseLeave
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.Responder
  name: MouseEvent(MouseEvent)
  nameWithType: Responder.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    nameWithType: Responder.MouseEvent
    fullName: Terminal.Gui.Responder.MouseEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    nameWithType: Responder.MouseEvent
    fullName: Terminal.Gui.Responder.MouseEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Terminal.Gui.Toplevel
  commentId: T:Terminal.Gui.Toplevel
  parent: Terminal.Gui
  name: Toplevel
  nameWithType: Toplevel
  fullName: Terminal.Gui.Toplevel
- uid: Terminal.Gui.Toplevel.Running*
  commentId: Overload:Terminal.Gui.Toplevel.Running
  name: Running
  nameWithType: Toplevel.Running
  fullName: Terminal.Gui.Toplevel.Running
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Terminal.Gui.Toplevel.#ctor*
  commentId: Overload:Terminal.Gui.Toplevel.#ctor
  name: Toplevel
  nameWithType: Toplevel.Toplevel
  fullName: Terminal.Gui.Toplevel.Toplevel
- uid: Terminal.Gui.Rect
  commentId: T:Terminal.Gui.Rect
  parent: Terminal.Gui
  name: Rect
  nameWithType: Rect
  fullName: Terminal.Gui.Rect
- uid: Terminal.Gui.Toplevel.Create*
  commentId: Overload:Terminal.Gui.Toplevel.Create
  name: Create
  nameWithType: Toplevel.Create
  fullName: Terminal.Gui.Toplevel.Create
- uid: Terminal.Gui.Responder.CanFocus
  commentId: P:Terminal.Gui.Responder.CanFocus
  parent: Terminal.Gui.Responder
  name: CanFocus
  nameWithType: Responder.CanFocus
  fullName: Terminal.Gui.Responder.CanFocus
- uid: Terminal.Gui.Toplevel.CanFocus*
  commentId: Overload:Terminal.Gui.Toplevel.CanFocus
  name: CanFocus
  nameWithType: Toplevel.CanFocus
  fullName: Terminal.Gui.Toplevel.CanFocus
- uid: Terminal.Gui.Toplevel.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.Toplevel.ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.Toplevel
  name: ProcessKey(KeyEvent)
  nameWithType: Toplevel.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.Toplevel.ProcessKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.Toplevel.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    nameWithType: Toplevel.ProcessKey
    fullName: Terminal.Gui.Toplevel.ProcessKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.Toplevel.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    nameWithType: Toplevel.ProcessKey
    fullName: Terminal.Gui.Toplevel.ProcessKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.Toplevel.Modal*
  commentId: Overload:Terminal.Gui.Toplevel.Modal
  name: Modal
  nameWithType: Toplevel.Modal
  fullName: Terminal.Gui.Toplevel.Modal
- uid: Terminal.Gui.Toplevel.MenuBar*
  commentId: Overload:Terminal.Gui.Toplevel.MenuBar
  name: MenuBar
  nameWithType: Toplevel.MenuBar
  fullName: Terminal.Gui.Toplevel.MenuBar
- uid: Terminal.Gui.MenuBar
  commentId: T:Terminal.Gui.MenuBar
  parent: Terminal.Gui
  name: MenuBar
  nameWithType: MenuBar
  fullName: Terminal.Gui.MenuBar
- uid: Terminal.Gui.Toplevel.StatusBar*
  commentId: Overload:Terminal.Gui.Toplevel.StatusBar
  name: StatusBar
  nameWithType: Toplevel.StatusBar
  fullName: Terminal.Gui.Toplevel.StatusBar
- uid: Terminal.Gui.StatusBar
  commentId: T:Terminal.Gui.StatusBar
  parent: Terminal.Gui
  name: StatusBar
  nameWithType: StatusBar
  fullName: Terminal.Gui.StatusBar
- uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessKey(KeyEvent)
  nameWithType: View.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    nameWithType: View.ProcessKey
    fullName: Terminal.Gui.View.ProcessKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    nameWithType: View.ProcessKey
    fullName: Terminal.Gui.View.ProcessKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.Toplevel.ProcessKey*
  commentId: Overload:Terminal.Gui.Toplevel.ProcessKey
  name: ProcessKey
  nameWithType: Toplevel.ProcessKey
  fullName: Terminal.Gui.Toplevel.ProcessKey
- uid: Terminal.Gui.KeyEvent
  commentId: T:Terminal.Gui.KeyEvent
  parent: Terminal.Gui
  name: KeyEvent
  nameWithType: KeyEvent
  fullName: Terminal.Gui.KeyEvent
- uid: Terminal.Gui.Toplevel.Add(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Toplevel.Add(Terminal.Gui.View)
  parent: Terminal.Gui.Toplevel
  name: Add(View)
  nameWithType: Toplevel.Add(View)
  fullName: Terminal.Gui.Toplevel.Add(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.Toplevel.Add(Terminal.Gui.View)
    name: Add
    nameWithType: Toplevel.Add
    fullName: Terminal.Gui.Toplevel.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.Toplevel.Add(Terminal.Gui.View)
    name: Add
    nameWithType: Toplevel.Add
    fullName: Terminal.Gui.Toplevel.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Add(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: Add(View)
  nameWithType: View.Add(View)
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.Toplevel.Add*
  commentId: Overload:Terminal.Gui.Toplevel.Add
  name: Add
  nameWithType: Toplevel.Add
  fullName: Terminal.Gui.Toplevel.Add
- uid: Terminal.Gui.Toplevel.Remove(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Toplevel.Remove(Terminal.Gui.View)
  parent: Terminal.Gui.Toplevel
  name: Remove(View)
  nameWithType: Toplevel.Remove(View)
  fullName: Terminal.Gui.Toplevel.Remove(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.Toplevel.Remove(Terminal.Gui.View)
    name: Remove
    nameWithType: Toplevel.Remove
    fullName: Terminal.Gui.Toplevel.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.Toplevel.Remove(Terminal.Gui.View)
    name: Remove
    nameWithType: Toplevel.Remove
    fullName: Terminal.Gui.Toplevel.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Remove(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: Remove(View)
  nameWithType: View.Remove(View)
  fullName: Terminal.Gui.View.Remove(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    nameWithType: View.Remove
    fullName: Terminal.Gui.View.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    nameWithType: View.Remove
    fullName: Terminal.Gui.View.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.Toplevel.Remove*
  commentId: Overload:Terminal.Gui.Toplevel.Remove
  name: Remove
  nameWithType: Toplevel.Remove
  fullName: Terminal.Gui.Toplevel.Remove
- uid: Terminal.Gui.Toplevel.RemoveAll
  commentId: M:Terminal.Gui.Toplevel.RemoveAll
  parent: Terminal.Gui.Toplevel
  name: RemoveAll()
  nameWithType: Toplevel.RemoveAll()
  fullName: Terminal.Gui.Toplevel.RemoveAll()
  spec.csharp:
  - uid: Terminal.Gui.Toplevel.RemoveAll
    name: RemoveAll
    nameWithType: Toplevel.RemoveAll
    fullName: Terminal.Gui.Toplevel.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.Toplevel.RemoveAll
    name: RemoveAll
    nameWithType: Toplevel.RemoveAll
    fullName: Terminal.Gui.Toplevel.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.RemoveAll
  commentId: M:Terminal.Gui.View.RemoveAll
  parent: Terminal.Gui.View
  name: RemoveAll()
  nameWithType: View.RemoveAll()
  fullName: Terminal.Gui.View.RemoveAll()
  spec.csharp:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    nameWithType: View.RemoveAll
    fullName: Terminal.Gui.View.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    nameWithType: View.RemoveAll
    fullName: Terminal.Gui.View.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.Toplevel.RemoveAll*
  commentId: Overload:Terminal.Gui.Toplevel.RemoveAll
  name: RemoveAll
  nameWithType: Toplevel.RemoveAll
  fullName: Terminal.Gui.Toplevel.RemoveAll
- uid: Terminal.Gui.Toplevel.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.Toplevel.Redraw(Terminal.Gui.Rect)
  parent: Terminal.Gui.Toplevel
  name: Redraw(Rect)
  nameWithType: Toplevel.Redraw(Rect)
  fullName: Terminal.Gui.Toplevel.Redraw(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.Toplevel.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: Toplevel.Redraw
    fullName: Terminal.Gui.Toplevel.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.Toplevel.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: Toplevel.Redraw
    fullName: Terminal.Gui.Toplevel.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: Redraw(Rect)
  nameWithType: View.Redraw(Rect)
  fullName: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: View.Redraw
    fullName: Terminal.Gui.View.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: View.Redraw
    fullName: Terminal.Gui.View.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.Toplevel.Redraw*
  commentId: Overload:Terminal.Gui.Toplevel.Redraw
  name: Redraw
  nameWithType: Toplevel.Redraw
  fullName: Terminal.Gui.Toplevel.Redraw
- uid: Terminal.Gui.Toplevel.WillPresent*
  commentId: Overload:Terminal.Gui.Toplevel.WillPresent
  name: WillPresent
  nameWithType: Toplevel.WillPresent
  fullName: Terminal.Gui.Toplevel.WillPresent
shouldSkipMarkup: true
