### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.Pos
  commentId: T:Terminal.Gui.Pos
  id: Pos
  parent: Terminal.Gui
  children:
  - Terminal.Gui.Pos.AnchorEnd(System.Int32)
  - Terminal.Gui.Pos.At(System.Int32)
  - Terminal.Gui.Pos.Bottom(Terminal.Gui.View)
  - Terminal.Gui.Pos.Center
  - Terminal.Gui.Pos.Left(Terminal.Gui.View)
  - Terminal.Gui.Pos.op_Addition(Terminal.Gui.Pos,Terminal.Gui.Pos)
  - Terminal.Gui.Pos.op_Implicit(System.Int32)~Terminal.Gui.Pos
  - Terminal.Gui.Pos.op_Subtraction(Terminal.Gui.Pos,Terminal.Gui.Pos)
  - Terminal.Gui.Pos.Percent(System.Single)
  - Terminal.Gui.Pos.Right(Terminal.Gui.View)
  - Terminal.Gui.Pos.Top(Terminal.Gui.View)
  - Terminal.Gui.Pos.X(Terminal.Gui.View)
  - Terminal.Gui.Pos.Y(Terminal.Gui.View)
  langs:
  - csharp
  - vb
  name: Pos
  nameWithType: Pos
  fullName: Terminal.Gui.Pos
  type: Class
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Pos
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 32
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nDescribes the position of a <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> which can be an absolute value, a percentage, centered, or \nrelative to the ending dimension. Integer values are implicitly convertible to\nan absolute <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref>. These objects are created using the static methods Percent,\nAnchorEnd, and Center. The <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> objects can be combined with the addition and \nsubtraction operators.\n"
  remarks: "\n<p>\n  Use the <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> objects on the X or Y properties of a view to control the position.\n</p>\n<p>\n  These can be used to set the absolute position, when merely assigning an\n  integer value (via the implicit integer to <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> conversion), and they can be combined\n  to produce more useful layouts, like: Pos.Center - 3, which would shift the postion\n  of the <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> 3 characters to the left after centering for example.\n</p>\n<p>\n  It is possible to reference coordinates of another view by using the methods\n  Left(View), Right(View), Bottom(View), Top(View). The X(View) and Y(View) are\n  aliases to Left(View) and Top(View) respectively.\n</p>\n"
  example: []
  syntax:
    content: public class Pos
    content.vb: Public Class Pos
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Terminal.Gui.Pos.Percent(System.Single)
  commentId: M:Terminal.Gui.Pos.Percent(System.Single)
  id: Percent(System.Single)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: Percent(Single)
  nameWithType: Pos.Percent(Single)
  fullName: Terminal.Gui.Pos.Percent(System.Single)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Percent
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 74
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCreates a percentage <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> object\n"
  example:
  - "\nThis creates a <xref href=\"Terminal.Gui.TextField\" data-throw-if-not-resolved=\"false\"></xref>that is centered horizontally, is 50% of the way down, \nis 30% the height, and is 80% the width of the <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> it added to.\n<pre><code>var textView = new TextView () {\nX = Pos.Center (),\nY = Pos.Percent (50),\nWidth = Dim.Percent (80),\n	Height = Dim.Percent (30),\n};</code></pre>\n"
  syntax:
    content: public static Pos Percent(float n)
    parameters:
    - id: n
      type: System.Single
      description: A value between 0 and 100 representing the percentage.
    return:
      type: Terminal.Gui.Pos
      description: The percent <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> object.
    content.vb: Public Shared Function Percent(n As Single) As Pos
  overload: Terminal.Gui.Pos.Percent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.AnchorEnd(System.Int32)
  commentId: M:Terminal.Gui.Pos.AnchorEnd(System.Int32)
  id: AnchorEnd(System.Int32)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: AnchorEnd(Int32)
  nameWithType: Pos.AnchorEnd(Int32)
  fullName: Terminal.Gui.Pos.AnchorEnd(System.Int32)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: AnchorEnd
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 116
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCreates a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> object that is anchored to the end (right side or bottom) of the dimension, \nuseful to flush the layout from the right or bottom.\n"
  example:
  - "\nThis sample shows how align a <xref href=\"Terminal.Gui.Button\" data-throw-if-not-resolved=\"false\"></xref> to the bottom-right of a <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>.\n<pre><code>anchorButton.X = Pos.AnchorEnd () - (Pos.Right (anchorButton) - Pos.Left (anchorButton));\nanchorButton.Y = Pos.AnchorEnd () - 1;</code></pre>\n"
  syntax:
    content: public static Pos AnchorEnd(int margin = 0)
    parameters:
    - id: margin
      type: System.Int32
      description: Optional margin to place to the right or below.
    return:
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> object anchored to the end (the bottom or the right side).
    content.vb: Public Shared Function AnchorEnd(margin As Integer = 0) As Pos
  overload: Terminal.Gui.Pos.AnchorEnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.Center
  commentId: M:Terminal.Gui.Pos.Center
  id: Center
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: Center()
  nameWithType: Pos.Center()
  fullName: Terminal.Gui.Pos.Center()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Center
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 159
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nReturns a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> object that can be used to center the <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example:
  - "\nThis creates a <xref href=\"Terminal.Gui.TextField\" data-throw-if-not-resolved=\"false\"></xref>that is centered horizontally, is 50% of the way down, \nis 30% the height, and is 80% the width of the <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> it added to.\n<pre><code>var textView = new TextView () {\nX = Pos.Center (),\nY = Pos.Percent (50),\nWidth = Dim.Percent (80),\n	Height = Dim.Percent (30),\n};</code></pre>\n"
  syntax:
    content: public static Pos Center()
    return:
      type: Terminal.Gui.Pos
      description: The center Pos.
    content.vb: Public Shared Function Center As Pos
  overload: Terminal.Gui.Pos.Center*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.op_Implicit(System.Int32)~Terminal.Gui.Pos
  commentId: M:Terminal.Gui.Pos.op_Implicit(System.Int32)~Terminal.Gui.Pos
  id: op_Implicit(System.Int32)~Terminal.Gui.Pos
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: Implicit(Int32 to Pos)
  nameWithType: Pos.Implicit(Int32 to Pos)
  fullName: Terminal.Gui.Pos.Implicit(System.Int32 to Terminal.Gui.Pos)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: op_Implicit
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 186
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCreates an Absolute <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> from the specified integer value.\n"
  example: []
  syntax:
    content: public static implicit operator Pos(int n)
    parameters:
    - id: n
      type: System.Int32
      description: The value to convert to the <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> .
    return:
      type: Terminal.Gui.Pos
      description: The Absolute <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Widening Operator CType(n As Integer) As Pos
  overload: Terminal.Gui.Pos.op_Implicit*
  nameWithType.vb: Pos.Widening(Int32 to Pos)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Terminal.Gui.Pos.Widening(System.Int32 to Terminal.Gui.Pos)
  name.vb: Widening(Int32 to Pos)
- uid: Terminal.Gui.Pos.At(System.Int32)
  commentId: M:Terminal.Gui.Pos.At(System.Int32)
  id: At(System.Int32)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: At(Int32)
  nameWithType: Pos.At(Int32)
  fullName: Terminal.Gui.Pos.At(System.Int32)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: At
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 196
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCreates an Absolute <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> from the specified integer value.\n"
  example: []
  syntax:
    content: public static Pos At(int n)
    parameters:
    - id: n
      type: System.Int32
      description: The value to convert to the <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Terminal.Gui.Pos
      description: The Absolute <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function At(n As Integer) As Pos
  overload: Terminal.Gui.Pos.At*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.op_Addition(Terminal.Gui.Pos,Terminal.Gui.Pos)
  commentId: M:Terminal.Gui.Pos.op_Addition(Terminal.Gui.Pos,Terminal.Gui.Pos)
  id: op_Addition(Terminal.Gui.Pos,Terminal.Gui.Pos)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: Addition(Pos, Pos)
  nameWithType: Pos.Addition(Pos, Pos)
  fullName: Terminal.Gui.Pos.Addition(Terminal.Gui.Pos, Terminal.Gui.Pos)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: op_Addition
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 236
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nAdds a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref>, yielding a new <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Pos operator +(Pos left, Pos right)
    parameters:
    - id: left
      type: Terminal.Gui.Pos
      description: The first <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> to add.
    - id: right
      type: Terminal.Gui.Pos
      description: The second <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> to add.
    return:
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> that is the sum of the values of <code>left</code> and <code>right</code>.
    content.vb: Public Shared Operator +(left As Pos, right As Pos) As Pos
  overload: Terminal.Gui.Pos.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.op_Subtraction(Terminal.Gui.Pos,Terminal.Gui.Pos)
  commentId: M:Terminal.Gui.Pos.op_Subtraction(Terminal.Gui.Pos,Terminal.Gui.Pos)
  id: op_Subtraction(Terminal.Gui.Pos,Terminal.Gui.Pos)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: Subtraction(Pos, Pos)
  nameWithType: Pos.Subtraction(Pos, Pos)
  fullName: Terminal.Gui.Pos.Subtraction(Terminal.Gui.Pos, Terminal.Gui.Pos)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: op_Subtraction
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 254
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nSubtracts a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> from a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref>, yielding a new <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Pos operator -(Pos left, Pos right)
    parameters:
    - id: left
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> to subtract from (the minuend).
    - id: right
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> to subtract (the subtrahend).
    return:
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> that is the <code>left</code> minus <code>right</code>.
    content.vb: Public Shared Operator -(left As Pos, right As Pos) As Pos
  overload: Terminal.Gui.Pos.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.Left(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Pos.Left(Terminal.Gui.View)
  id: Left(Terminal.Gui.View)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: Left(View)
  nameWithType: Pos.Left(View)
  fullName: Terminal.Gui.Pos.Left(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Left
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 304
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nReturns a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> object tracks the Left (X) position of the specified <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Pos Left(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>  that will be tracked.
    return:
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> that depends on the other view.
    content.vb: Public Shared Function Left(view As View) As Pos
  overload: Terminal.Gui.Pos.Left*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.X(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Pos.X(Terminal.Gui.View)
  id: X(Terminal.Gui.View)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: X(View)
  nameWithType: Pos.X(View)
  fullName: Terminal.Gui.Pos.X(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: X
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 311
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nReturns a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> object tracks the Left (X) position of the specified <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Pos X(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>  that will be tracked.
    return:
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> that depends on the other view.
    content.vb: Public Shared Function X(view As View) As Pos
  overload: Terminal.Gui.Pos.X*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.Top(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Pos.Top(Terminal.Gui.View)
  id: Top(Terminal.Gui.View)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: Top(View)
  nameWithType: Pos.Top(View)
  fullName: Terminal.Gui.Pos.Top(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Top
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 318
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nReturns a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> object tracks the Top (Y) position of the specified <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Pos Top(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>  that will be tracked.
    return:
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> that depends on the other view.
    content.vb: Public Shared Function Top(view As View) As Pos
  overload: Terminal.Gui.Pos.Top*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.Y(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Pos.Y(Terminal.Gui.View)
  id: Y(Terminal.Gui.View)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: Y(View)
  nameWithType: Pos.Y(View)
  fullName: Terminal.Gui.Pos.Y(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Y
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 325
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nReturns a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> object tracks the Top (Y) position of the specified <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Pos Y(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>  that will be tracked.
    return:
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> that depends on the other view.
    content.vb: Public Shared Function Y(view As View) As Pos
  overload: Terminal.Gui.Pos.Y*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.Right(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Pos.Right(Terminal.Gui.View)
  id: Right(Terminal.Gui.View)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: Right(View)
  nameWithType: Pos.Right(View)
  fullName: Terminal.Gui.Pos.Right(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Right
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 332
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nReturns a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> object tracks the Right (X+Width) coordinate of the specified <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Pos Right(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>  that will be tracked.
    return:
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> that depends on the other view.
    content.vb: Public Shared Function Right(view As View) As Pos
  overload: Terminal.Gui.Pos.Right*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Pos.Bottom(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Pos.Bottom(Terminal.Gui.View)
  id: Bottom(Terminal.Gui.View)
  parent: Terminal.Gui.Pos
  langs:
  - csharp
  - vb
  name: Bottom(View)
  nameWithType: Pos.Bottom(View)
  fullName: Terminal.Gui.Pos.Bottom(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Bottom
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 339
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nReturns a <xref href=\"Terminal.Gui.Pos\" data-throw-if-not-resolved=\"false\"></xref> object tracks the Bottom (Y+Height) coordinate of the specified <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> \n"
  example: []
  syntax:
    content: public static Pos Bottom(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>  that will be tracked.
    return:
      type: Terminal.Gui.Pos
      description: The <xref href="Terminal.Gui.Pos" data-throw-if-not-resolved="false"></xref> that depends on the other view.
    content.vb: Public Shared Function Bottom(view As View) As Pos
  overload: Terminal.Gui.Pos.Bottom*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: Terminal.Gui.Pos
  commentId: T:Terminal.Gui.Pos
  parent: Terminal.Gui
  name: Pos
  nameWithType: Pos
  fullName: Terminal.Gui.Pos
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.TextField
  commentId: T:Terminal.Gui.TextField
  parent: Terminal.Gui
  name: TextField
  nameWithType: TextField
  fullName: Terminal.Gui.TextField
- uid: Terminal.Gui.Pos.Percent*
  commentId: Overload:Terminal.Gui.Pos.Percent
  name: Percent
  nameWithType: Pos.Percent
  fullName: Terminal.Gui.Pos.Percent
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Terminal.Gui.Button
  commentId: T:Terminal.Gui.Button
  parent: Terminal.Gui
  name: Button
  nameWithType: Button
  fullName: Terminal.Gui.Button
- uid: Terminal.Gui.Pos.AnchorEnd*
  commentId: Overload:Terminal.Gui.Pos.AnchorEnd
  name: AnchorEnd
  nameWithType: Pos.AnchorEnd
  fullName: Terminal.Gui.Pos.AnchorEnd
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Terminal.Gui.Pos.Center*
  commentId: Overload:Terminal.Gui.Pos.Center
  name: Center
  nameWithType: Pos.Center
  fullName: Terminal.Gui.Pos.Center
- uid: Terminal.Gui.Pos.op_Implicit*
  commentId: Overload:Terminal.Gui.Pos.op_Implicit
  name: Implicit
  nameWithType: Pos.Implicit
  fullName: Terminal.Gui.Pos.Implicit
  nameWithType.vb: Pos.Widening
  fullName.vb: Terminal.Gui.Pos.Widening
  name.vb: Widening
- uid: Terminal.Gui.Pos.At*
  commentId: Overload:Terminal.Gui.Pos.At
  name: At
  nameWithType: Pos.At
  fullName: Terminal.Gui.Pos.At
- uid: Terminal.Gui.Pos.op_Addition*
  commentId: Overload:Terminal.Gui.Pos.op_Addition
  name: Addition
  nameWithType: Pos.Addition
  fullName: Terminal.Gui.Pos.Addition
- uid: Terminal.Gui.Pos.op_Subtraction*
  commentId: Overload:Terminal.Gui.Pos.op_Subtraction
  name: Subtraction
  nameWithType: Pos.Subtraction
  fullName: Terminal.Gui.Pos.Subtraction
- uid: Terminal.Gui.Pos.Left*
  commentId: Overload:Terminal.Gui.Pos.Left
  name: Left
  nameWithType: Pos.Left
  fullName: Terminal.Gui.Pos.Left
- uid: Terminal.Gui.Pos.X*
  commentId: Overload:Terminal.Gui.Pos.X
  name: X
  nameWithType: Pos.X
  fullName: Terminal.Gui.Pos.X
- uid: Terminal.Gui.Pos.Top*
  commentId: Overload:Terminal.Gui.Pos.Top
  name: Top
  nameWithType: Pos.Top
  fullName: Terminal.Gui.Pos.Top
- uid: Terminal.Gui.Pos.Y*
  commentId: Overload:Terminal.Gui.Pos.Y
  name: Y
  nameWithType: Pos.Y
  fullName: Terminal.Gui.Pos.Y
- uid: Terminal.Gui.Pos.Right*
  commentId: Overload:Terminal.Gui.Pos.Right
  name: Right
  nameWithType: Pos.Right
  fullName: Terminal.Gui.Pos.Right
- uid: Terminal.Gui.Pos.Bottom*
  commentId: Overload:Terminal.Gui.Pos.Bottom
  name: Bottom
  nameWithType: Pos.Bottom
  fullName: Terminal.Gui.Pos.Bottom
shouldSkipMarkup: true
