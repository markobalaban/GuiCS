### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.MessageBox
  commentId: T:Terminal.Gui.MessageBox
  id: MessageBox
  parent: Terminal.Gui
  children:
  - Terminal.Gui.MessageBox.ErrorQuery(System.Int32,System.Int32,System.String,System.String,System.String[])
  - Terminal.Gui.MessageBox.Query(System.Int32,System.Int32,System.String,System.String,System.String[])
  langs:
  - csharp
  - vb
  name: MessageBox
  nameWithType: MessageBox
  fullName: Terminal.Gui.MessageBox
  type: Class
  source:
    remote:
      path: Terminal.Gui/Dialogs/MessageBox.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: MessageBox
    path: ../Terminal.Gui/Dialogs/MessageBox.cs
    startLine: 21
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nMessageBox displays a modal message to the user, with a title, a message and a series of options that the user can choose from.\n"
  example:
  - "\n<pre><code>var n = MessageBox.Query (50, 7, &quot;Quit Demo&quot;, &quot;Are you sure you want to quit this demo?&quot;, &quot;Yes&quot;, &quot;No&quot;);\nif (n == 0)\n   quit = true;\nelse\n   quit = false;</code></pre>\n"
  syntax:
    content: public static class MessageBox
    content.vb: Public Module MessageBox
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Terminal.Gui.MessageBox.Query(System.Int32,System.Int32,System.String,System.String,System.String[])
  commentId: M:Terminal.Gui.MessageBox.Query(System.Int32,System.Int32,System.String,System.String,System.String[])
  id: Query(System.Int32,System.Int32,System.String,System.String,System.String[])
  parent: Terminal.Gui.MessageBox
  langs:
  - csharp
  - vb
  name: Query(Int32, Int32, String, String, String[])
  nameWithType: MessageBox.Query(Int32, Int32, String, String, String[])
  fullName: Terminal.Gui.MessageBox.Query(System.Int32, System.Int32, System.String, System.String, System.String[])
  type: Method
  source:
    remote:
      path: Terminal.Gui/Dialogs/MessageBox.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Query
    path: ../Terminal.Gui/Dialogs/MessageBox.cs
    startLine: 31
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nPresents a normal <xref href=\"Terminal.Gui.MessageBox\" data-throw-if-not-resolved=\"false\"></xref> with the specified title and message and a list of buttons to show to the user.\n"
  example: []
  syntax:
    content: public static int Query(int width, int height, string title, string message, params string[] buttons)
    parameters:
    - id: width
      type: System.Int32
      description: Width for the window.
    - id: height
      type: System.Int32
      description: Height for the window.
    - id: title
      type: System.String
      description: Title for the query.
    - id: message
      type: System.String
      description: Message to display, might contain multiple lines..
    - id: buttons
      type: System.String[]
      description: Array of buttons to add.
    return:
      type: System.Int32
      description: The index of the selected button, or -1 if the user pressed ESC to close the dialog.
    content.vb: Public Shared Function Query(width As Integer, height As Integer, title As String, message As String, ParamArray buttons As String()) As Integer
  overload: Terminal.Gui.MessageBox.Query*
  nameWithType.vb: MessageBox.Query(Int32, Int32, String, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Terminal.Gui.MessageBox.Query(System.Int32, System.Int32, System.String, System.String, System.String())
  name.vb: Query(Int32, Int32, String, String, String())
- uid: Terminal.Gui.MessageBox.ErrorQuery(System.Int32,System.Int32,System.String,System.String,System.String[])
  commentId: M:Terminal.Gui.MessageBox.ErrorQuery(System.Int32,System.Int32,System.String,System.String,System.String[])
  id: ErrorQuery(System.Int32,System.Int32,System.String,System.String,System.String[])
  parent: Terminal.Gui.MessageBox
  langs:
  - csharp
  - vb
  name: ErrorQuery(Int32, Int32, String, String, String[])
  nameWithType: MessageBox.ErrorQuery(Int32, Int32, String, String, String[])
  fullName: Terminal.Gui.MessageBox.ErrorQuery(System.Int32, System.Int32, System.String, System.String, System.String[])
  type: Method
  source:
    remote:
      path: Terminal.Gui/Dialogs/MessageBox.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: ErrorQuery
    path: ../Terminal.Gui/Dialogs/MessageBox.cs
    startLine: 45
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nPresents an error <xref href=\"Terminal.Gui.MessageBox\" data-throw-if-not-resolved=\"false\"></xref> with the specified title and message and a list of buttons to show to the user.\n"
  example: []
  syntax:
    content: public static int ErrorQuery(int width, int height, string title, string message, params string[] buttons)
    parameters:
    - id: width
      type: System.Int32
      description: Width for the window.
    - id: height
      type: System.Int32
      description: Height for the window.
    - id: title
      type: System.String
      description: Title for the query.
    - id: message
      type: System.String
      description: Message to display, might contain multiple lines.
    - id: buttons
      type: System.String[]
      description: Array of buttons to add.
    return:
      type: System.Int32
      description: The index of the selected button, or -1 if the user pressed ESC to close the dialog.
    content.vb: Public Shared Function ErrorQuery(width As Integer, height As Integer, title As String, message As String, ParamArray buttons As String()) As Integer
  overload: Terminal.Gui.MessageBox.ErrorQuery*
  nameWithType.vb: MessageBox.ErrorQuery(Int32, Int32, String, String, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Terminal.Gui.MessageBox.ErrorQuery(System.Int32, System.Int32, System.String, System.String, System.String())
  name.vb: ErrorQuery(Int32, Int32, String, String, String())
references:
- uid: Terminal.Gui.MessageBox.Query(System.Int32,System.Int32,System.String,System.String,System.String[])
  commentId: M:Terminal.Gui.MessageBox.Query(System.Int32,System.Int32,System.String,System.String,System.String[])
  isExternal: true
- uid: Terminal.Gui.MessageBox.ErrorQuery(System.Int32,System.Int32,System.String,System.String,System.String[])
  commentId: M:Terminal.Gui.MessageBox.ErrorQuery(System.Int32,System.Int32,System.String,System.String,System.String[])
  isExternal: true
- uid: Terminal.Gui.MessageBox
  commentId: T:Terminal.Gui.MessageBox
  name: MessageBox
  nameWithType: MessageBox
  fullName: Terminal.Gui.MessageBox
- uid: Terminal.Gui.Button
  commentId: T:Terminal.Gui.Button
  parent: Terminal.Gui
  name: Button
  nameWithType: Button
  fullName: Terminal.Gui.Button
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.MessageBox.Query*
  commentId: Overload:Terminal.Gui.MessageBox.Query
  name: Query
  nameWithType: MessageBox.Query
  fullName: Terminal.Gui.MessageBox.Query
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Terminal.Gui.MessageBox.ErrorQuery*
  commentId: Overload:Terminal.Gui.MessageBox.ErrorQuery
  name: ErrorQuery
  nameWithType: MessageBox.ErrorQuery
  fullName: Terminal.Gui.MessageBox.ErrorQuery
shouldSkipMarkup: true
