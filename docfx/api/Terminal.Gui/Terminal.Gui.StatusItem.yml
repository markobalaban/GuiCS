### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.StatusItem
  commentId: T:Terminal.Gui.StatusItem
  id: StatusItem
  parent: Terminal.Gui
  children:
  - Terminal.Gui.StatusItem.#ctor(Terminal.Gui.Key,NStack.ustring,System.Action)
  - Terminal.Gui.StatusItem.Action
  - Terminal.Gui.StatusItem.Shortcut
  - Terminal.Gui.StatusItem.Title
  langs:
  - csharp
  - vb
  name: StatusItem
  nameWithType: StatusItem
  fullName: Terminal.Gui.StatusItem
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/StatusBar.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: StatusItem
    path: ../Terminal.Gui/Views/StatusBar.cs
    startLine: 21
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\n<xref href=\"Terminal.Gui.StatusItem\" data-throw-if-not-resolved=\"false\"></xref> objects are contained by <xref href=\"Terminal.Gui.StatusBar\" data-throw-if-not-resolved=\"false\"></xref> <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>s. \nEach <xref href=\"Terminal.Gui.StatusItem\" data-throw-if-not-resolved=\"false\"></xref> has a title, a shortcut (hotkey), and an <xref href=\"Terminal.Gui.StatusItem.Action\" data-throw-if-not-resolved=\"false\"></xref> that will be invoked when the \n<xref href=\"Terminal.Gui.StatusItem.Shortcut\" data-throw-if-not-resolved=\"false\"></xref> is pressed.\nThe <xref href=\"Terminal.Gui.StatusItem.Shortcut\" data-throw-if-not-resolved=\"false\"></xref> will be a global hotkey for the application in the current context of the screen.\nThe colour of the <xref href=\"Terminal.Gui.StatusItem.Title\" data-throw-if-not-resolved=\"false\"></xref> will be changed after each ~. \nA <xref href=\"Terminal.Gui.StatusItem.Title\" data-throw-if-not-resolved=\"false\"></xref> set to `~F1~ Help` will render as *F1* using <xref href=\"Terminal.Gui.ColorScheme.HotNormal\" data-throw-if-not-resolved=\"false\"></xref> and\n*Help* as <xref href=\"Terminal.Gui.ColorScheme.HotNormal\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class StatusItem
    content.vb: Public Class StatusItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Terminal.Gui.StatusItem.#ctor(Terminal.Gui.Key,NStack.ustring,System.Action)
  commentId: M:Terminal.Gui.StatusItem.#ctor(Terminal.Gui.Key,NStack.ustring,System.Action)
  id: '#ctor(Terminal.Gui.Key,NStack.ustring,System.Action)'
  parent: Terminal.Gui.StatusItem
  langs:
  - csharp
  - vb
  name: StatusItem(Key, ustring, Action)
  nameWithType: StatusItem.StatusItem(Key, ustring, Action)
  fullName: Terminal.Gui.StatusItem.StatusItem(Terminal.Gui.Key, NStack.ustring, System.Action)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/StatusBar.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/StatusBar.cs
    startLine: 28
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitializes a new <xref href=\"Terminal.Gui.StatusItem\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public StatusItem(Key shortcut, ustring title, Action action)
    parameters:
    - id: shortcut
      type: Terminal.Gui.Key
      description: Shortcut to activate the <xref href="Terminal.Gui.StatusItem" data-throw-if-not-resolved="false"></xref>.
    - id: title
      type: NStack.ustring
      description: Title for the <xref href="Terminal.Gui.StatusItem" data-throw-if-not-resolved="false"></xref>.
    - id: action
      type: System.Action
      description: Action to invoke when the <xref href="Terminal.Gui.StatusItem" data-throw-if-not-resolved="false"></xref> is activated.
    content.vb: Public Sub New(shortcut As Key, title As ustring, action As Action)
  overload: Terminal.Gui.StatusItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.StatusItem.Shortcut
  commentId: P:Terminal.Gui.StatusItem.Shortcut
  id: Shortcut
  parent: Terminal.Gui.StatusItem
  langs:
  - csharp
  - vb
  name: Shortcut
  nameWithType: StatusItem.Shortcut
  fullName: Terminal.Gui.StatusItem.Shortcut
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/StatusBar.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: Shortcut
    path: ../Terminal.Gui/Views/StatusBar.cs
    startLine: 38
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets the global shortcut to invoke the action on the menu.\n"
  example: []
  syntax:
    content: public Key Shortcut { get; }
    parameters: []
    return:
      type: Terminal.Gui.Key
    content.vb: Public ReadOnly Property Shortcut As Key
  overload: Terminal.Gui.StatusItem.Shortcut*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Terminal.Gui.StatusItem.Title
  commentId: P:Terminal.Gui.StatusItem.Title
  id: Title
  parent: Terminal.Gui.StatusItem
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: StatusItem.Title
  fullName: Terminal.Gui.StatusItem.Title
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/StatusBar.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: Title
    path: ../Terminal.Gui/Views/StatusBar.cs
    startLine: 49
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets or sets the title.\n"
  remarks: "\nThe colour of the <xref href=\"Terminal.Gui.StatusItem.Title\" data-throw-if-not-resolved=\"false\"></xref> will be changed after each ~. \nA <xref href=\"Terminal.Gui.StatusItem.Title\" data-throw-if-not-resolved=\"false\"></xref> set to `~F1~ Help` will render as *F1* using <xref href=\"Terminal.Gui.ColorScheme.HotNormal\" data-throw-if-not-resolved=\"false\"></xref> and\n*Help* as <xref href=\"Terminal.Gui.ColorScheme.HotNormal\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ustring Title { get; }
    parameters: []
    return:
      type: NStack.ustring
      description: The title.
    content.vb: Public ReadOnly Property Title As ustring
  overload: Terminal.Gui.StatusItem.Title*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Terminal.Gui.StatusItem.Action
  commentId: P:Terminal.Gui.StatusItem.Action
  id: Action
  parent: Terminal.Gui.StatusItem
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: StatusItem.Action
  fullName: Terminal.Gui.StatusItem.Action
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/StatusBar.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: Action
    path: ../Terminal.Gui/Views/StatusBar.cs
    startLine: 55
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets or sets the action to be invoked when the statusbar item is triggered\n"
  example: []
  syntax:
    content: public Action Action { get; }
    parameters: []
    return:
      type: System.Action
      description: Action to invoke.
    content.vb: Public ReadOnly Property Action As Action
  overload: Terminal.Gui.StatusItem.Action*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Terminal.Gui.StatusItem
  commentId: T:Terminal.Gui.StatusItem
  name: StatusItem
  nameWithType: StatusItem
  fullName: Terminal.Gui.StatusItem
- uid: Terminal.Gui.StatusBar
  commentId: T:Terminal.Gui.StatusBar
  parent: Terminal.Gui
  name: StatusBar
  nameWithType: StatusBar
  fullName: Terminal.Gui.StatusBar
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: Terminal.Gui.StatusItem.Action
  commentId: P:Terminal.Gui.StatusItem.Action
  isExternal: true
- uid: Terminal.Gui.StatusItem.Shortcut
  commentId: P:Terminal.Gui.StatusItem.Shortcut
  isExternal: true
- uid: Terminal.Gui.StatusItem.Title
  commentId: P:Terminal.Gui.StatusItem.Title
  isExternal: true
- uid: Terminal.Gui.ColorScheme.HotNormal
  commentId: P:Terminal.Gui.ColorScheme.HotNormal
  isExternal: true
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.StatusItem.#ctor*
  commentId: Overload:Terminal.Gui.StatusItem.#ctor
  name: StatusItem
  nameWithType: StatusItem.StatusItem
  fullName: Terminal.Gui.StatusItem.StatusItem
- uid: Terminal.Gui.Key
  commentId: T:Terminal.Gui.Key
  parent: Terminal.Gui
  name: Key
  nameWithType: Key
  fullName: Terminal.Gui.Key
- uid: NStack.ustring
  commentId: T:NStack.ustring
  parent: NStack
  isExternal: true
  name: ustring
  nameWithType: ustring
  fullName: NStack.ustring
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: NStack
  commentId: N:NStack
  isExternal: true
  name: NStack
  nameWithType: NStack
  fullName: NStack
- uid: Terminal.Gui.StatusItem.Shortcut*
  commentId: Overload:Terminal.Gui.StatusItem.Shortcut
  name: Shortcut
  nameWithType: StatusItem.Shortcut
  fullName: Terminal.Gui.StatusItem.Shortcut
- uid: Terminal.Gui.StatusItem.Title*
  commentId: Overload:Terminal.Gui.StatusItem.Title
  name: Title
  nameWithType: StatusItem.Title
  fullName: Terminal.Gui.StatusItem.Title
- uid: Terminal.Gui.StatusItem.Action*
  commentId: Overload:Terminal.Gui.StatusItem.Action
  name: Action
  nameWithType: StatusItem.Action
  fullName: Terminal.Gui.StatusItem.Action
shouldSkipMarkup: true
