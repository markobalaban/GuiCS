### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.ListView
  commentId: T:Terminal.Gui.ListView
  id: ListView
  parent: Terminal.Gui
  children:
  - Terminal.Gui.ListView.#ctor
  - Terminal.Gui.ListView.#ctor(System.Collections.IList)
  - Terminal.Gui.ListView.#ctor(Terminal.Gui.IListDataSource)
  - Terminal.Gui.ListView.#ctor(Terminal.Gui.Rect,System.Collections.IList)
  - Terminal.Gui.ListView.#ctor(Terminal.Gui.Rect,Terminal.Gui.IListDataSource)
  - Terminal.Gui.ListView.AllowsAll
  - Terminal.Gui.ListView.AllowsMarking
  - Terminal.Gui.ListView.AllowsMultipleSelection
  - Terminal.Gui.ListView.MarkUnmarkRow
  - Terminal.Gui.ListView.MouseEvent(Terminal.Gui.MouseEvent)
  - Terminal.Gui.ListView.MoveDown
  - Terminal.Gui.ListView.MovePageDown
  - Terminal.Gui.ListView.MovePageUp
  - Terminal.Gui.ListView.MoveUp
  - Terminal.Gui.ListView.OnOpenSelectedItem
  - Terminal.Gui.ListView.OnSelectedChanged
  - Terminal.Gui.ListView.OpenSelectedItem
  - Terminal.Gui.ListView.PositionCursor
  - Terminal.Gui.ListView.ProcessKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.ListView.Redraw(Terminal.Gui.Rect)
  - Terminal.Gui.ListView.SelectedChanged
  - Terminal.Gui.ListView.SelectedItem
  - Terminal.Gui.ListView.SetSource(System.Collections.IList)
  - Terminal.Gui.ListView.SetSourceAsync(System.Collections.IList)
  - Terminal.Gui.ListView.Source
  - Terminal.Gui.ListView.TopItem
  langs:
  - csharp
  - vb
  name: ListView
  nameWithType: ListView
  fullName: Terminal.Gui.ListView
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: ListView
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 104
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nListView <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> renders a scrollable list of data where each item can be activated to perform an action.\n"
  remarks: "\n<p>\n  The <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> displays lists of data and allows the user to scroll through the data.\n  Items in the can be activated firing an event (with the ENTER key or a mouse double-click). \n  If the <xref href=\"Terminal.Gui.ListView.AllowsMarking\" data-throw-if-not-resolved=\"false\"></xref> property is true, elements of the list can be marked by the user.\n</p>\n<p>\n  By default <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> uses <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> to render the items of any\n<xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> object (e.g. arrays, <xref href=\"System.Collections.Generic.List%601\" data-throw-if-not-resolved=\"false\"></xref>,\nand other collections). Alternatively, an object that implements the <xref href=\"Terminal.Gui.IListDataSource\" data-throw-if-not-resolved=\"false\"></xref>\ninterface can be provided giving full control of what is rendered.\n</p>\n<p>\n<xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> can display any object that implements the <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> interface.\n<xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> values are converted into <xref href=\"NStack.ustring\" data-throw-if-not-resolved=\"false\"></xref> values before rendering, and other values are\nconverted into <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> by calling <xref href=\"System.Object.ToString\" data-throw-if-not-resolved=\"false\"></xref> and then converting to <xref href=\"NStack.ustring\" data-throw-if-not-resolved=\"false\"></xref> .\n</p>\n<p>\n  To change the contents of the ListView, set the <xref href=\"Terminal.Gui.ListView.Source\" data-throw-if-not-resolved=\"false\"></xref> property (when \n  providing custom rendering via <xref href=\"Terminal.Gui.IListDataSource\" data-throw-if-not-resolved=\"false\"></xref>) or call <xref href=\"Terminal.Gui.ListView.SetSource(System.Collections.IList)\" data-throw-if-not-resolved=\"false\"></xref>\n  an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> is being used.\n</p>\n<p>\n  When <xref href=\"Terminal.Gui.ListView.AllowsMarking\" data-throw-if-not-resolved=\"false\"></xref> is set to true the rendering will prefix the rendered items with\n  [x] or [ ] and bind the SPACE key to toggle the selection. To implement a different\n  marking style set <xref href=\"Terminal.Gui.ListView.AllowsMarking\" data-throw-if-not-resolved=\"false\"></xref> to false and implement custom rendering.\n</p>\n"
  example: []
  syntax:
    content: 'public class ListView : View, IEnumerable'
    content.vb: >-
      Public Class ListView

          Inherits View

          Implements IEnumerable
  inheritance:
  - System.Object
  - Terminal.Gui.Responder
  - Terminal.Gui.View
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - Terminal.Gui.View.Enter
  - Terminal.Gui.View.Leave
  - Terminal.Gui.View.MouseEnter
  - Terminal.Gui.View.MouseLeave
  - Terminal.Gui.View.Driver
  - Terminal.Gui.View.Subviews
  - Terminal.Gui.View.Id
  - Terminal.Gui.View.IsCurrentTop
  - Terminal.Gui.View.WantMousePositionReports
  - Terminal.Gui.View.WantContinuousButtonPressed
  - Terminal.Gui.View.Frame
  - Terminal.Gui.View.GetEnumerator
  - Terminal.Gui.View.LayoutStyle
  - Terminal.Gui.View.Bounds
  - Terminal.Gui.View.X
  - Terminal.Gui.View.Y
  - Terminal.Gui.View.Width
  - Terminal.Gui.View.Height
  - Terminal.Gui.View.SuperView
  - Terminal.Gui.View.SetNeedsDisplay
  - Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  - Terminal.Gui.View.ChildNeedsDisplay
  - Terminal.Gui.View.Add(Terminal.Gui.View)
  - Terminal.Gui.View.Add(Terminal.Gui.View[])
  - Terminal.Gui.View.RemoveAll
  - Terminal.Gui.View.Remove(Terminal.Gui.View)
  - Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  - Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  - Terminal.Gui.View.Clear
  - Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  - Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  - Terminal.Gui.View.ClipToBounds
  - Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  - Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  - Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  - Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  - Terminal.Gui.View.Move(System.Int32,System.Int32)
  - Terminal.Gui.View.HasFocus
  - Terminal.Gui.View.OnEnter
  - Terminal.Gui.View.OnLeave
  - Terminal.Gui.View.Focused
  - Terminal.Gui.View.MostFocused
  - Terminal.Gui.View.ColorScheme
  - Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  - Terminal.Gui.View.ClearNeedsDisplay
  - Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  - Terminal.Gui.View.KeyPress
  - Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.KeyDown
  - Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.KeyUp
  - Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.EnsureFocus
  - Terminal.Gui.View.FocusFirst
  - Terminal.Gui.View.FocusLast
  - Terminal.Gui.View.FocusPrev
  - Terminal.Gui.View.FocusNext
  - Terminal.Gui.View.LayoutSubviews
  - Terminal.Gui.View.ToString
  - Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  - Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  - Terminal.Gui.Responder.CanFocus
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Terminal.Gui.ListView.Source
  commentId: P:Terminal.Gui.ListView.Source
  id: Source
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: ListView.Source
  fullName: Terminal.Gui.ListView.Source
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: Source
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 116
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets or sets the <xref href=\"Terminal.Gui.IListDataSource\" data-throw-if-not-resolved=\"false\"></xref> backing this <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref>, enabling custom rendering.\n"
  remarks: "\nUse <xref href=\"Terminal.Gui.ListView.SetSource(System.Collections.IList)\" data-throw-if-not-resolved=\"false\"></xref> to set a new <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> source.\n"
  example: []
  syntax:
    content: public IListDataSource Source { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.IListDataSource
      description: The source.
    content.vb: Public Property Source As IListDataSource
  overload: Terminal.Gui.ListView.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.SetSource(System.Collections.IList)
  commentId: M:Terminal.Gui.ListView.SetSource(System.Collections.IList)
  id: SetSource(System.Collections.IList)
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: SetSource(IList)
  nameWithType: ListView.SetSource(IList)
  fullName: Terminal.Gui.ListView.SetSource(System.Collections.IList)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: SetSource
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 133
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nSets the source of the <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> to an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nUse the <xref href=\"Terminal.Gui.ListView.Source\" data-throw-if-not-resolved=\"false\"></xref> property to set a new <xref href=\"Terminal.Gui.IListDataSource\" data-throw-if-not-resolved=\"false\"></xref> source and use custome rendering.\n"
  example: []
  syntax:
    content: public void SetSource(IList source)
    parameters:
    - id: source
      type: System.Collections.IList
    content.vb: Public Sub SetSource(source As IList)
  overload: Terminal.Gui.ListView.SetSource*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.SetSourceAsync(System.Collections.IList)
  commentId: M:Terminal.Gui.ListView.SetSourceAsync(System.Collections.IList)
  id: SetSourceAsync(System.Collections.IList)
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: SetSourceAsync(IList)
  nameWithType: ListView.SetSourceAsync(IList)
  fullName: Terminal.Gui.ListView.SetSourceAsync(System.Collections.IList)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: SetSourceAsync
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 149
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nSets the source to an <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> value asynchronously.\n"
  remarks: "\nUse the <xref href=\"Terminal.Gui.ListView.Source\" data-throw-if-not-resolved=\"false\"></xref> property to set a new <xref href=\"Terminal.Gui.IListDataSource\" data-throw-if-not-resolved=\"false\"></xref> source and use custome rendering.\n"
  example: []
  syntax:
    content: public Task SetSourceAsync(IList source)
    parameters:
    - id: source
      type: System.Collections.IList
    return:
      type: System.Threading.Tasks.Task
      description: An item implementing the IList interface.
    content.vb: Public Function SetSourceAsync(source As IList) As Task
  overload: Terminal.Gui.ListView.SetSourceAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.AllowsMarking
  commentId: P:Terminal.Gui.ListView.AllowsMarking
  id: AllowsMarking
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: AllowsMarking
  nameWithType: ListView.AllowsMarking
  fullName: Terminal.Gui.ListView.AllowsMarking
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: AllowsMarking
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 170
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets or sets whether this <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> allows items to be marked.\n"
  remarks: "\nIf set to true, <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> will render items marked items with &quot;[x]&quot;, and unmarked items with &quot;[ ]&quot;\nspaces. SPACE key will toggle marking.\n"
  example: []
  syntax:
    content: public bool AllowsMarking { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: >
        <code>true</code> if allows marking elements of the list; otherwise, <code>false</code>.
    content.vb: Public Property AllowsMarking As Boolean
  overload: Terminal.Gui.ListView.AllowsMarking*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.AllowsMultipleSelection
  commentId: P:Terminal.Gui.ListView.AllowsMultipleSelection
  id: AllowsMultipleSelection
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: AllowsMultipleSelection
  nameWithType: ListView.AllowsMultipleSelection
  fullName: Terminal.Gui.ListView.AllowsMultipleSelection
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: AllowsMultipleSelection
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 181
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nIf set to true allows more than one item to be selected. If false only allow one item selected.\n"
  example: []
  syntax:
    content: public bool AllowsMultipleSelection { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowsMultipleSelection As Boolean
  overload: Terminal.Gui.ListView.AllowsMultipleSelection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.TopItem
  commentId: P:Terminal.Gui.ListView.TopItem
  id: TopItem
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: TopItem
  nameWithType: ListView.TopItem
  fullName: Terminal.Gui.ListView.TopItem
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: TopItem
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 187
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets or sets the item that is displayed at the top of the <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int TopItem { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The top item.
    content.vb: Public Property TopItem As Integer
  overload: Terminal.Gui.ListView.TopItem*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.SelectedItem
  commentId: P:Terminal.Gui.ListView.SelectedItem
  id: SelectedItem
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: SelectedItem
  nameWithType: ListView.SelectedItem
  fullName: Terminal.Gui.ListView.SelectedItem
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: SelectedItem
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 204
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets or sets the index of the currently selected item.\n"
  example: []
  syntax:
    content: public int SelectedItem { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The selected item.
    content.vb: Public Property SelectedItem As Integer
  overload: Terminal.Gui.ListView.SelectedItem*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.#ctor(System.Collections.IList)
  commentId: M:Terminal.Gui.ListView.#ctor(System.Collections.IList)
  id: '#ctor(System.Collections.IList)'
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: ListView(IList)
  nameWithType: ListView.ListView(IList)
  fullName: Terminal.Gui.ListView.ListView(System.Collections.IList)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 230
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitializes a new instance of <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> that will display the contents of the object implementing the <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> interface, \nwith relative positioning.\n"
  example: []
  syntax:
    content: public ListView(IList source)
    parameters:
    - id: source
      type: System.Collections.IList
      description: An <xref href="System.Collections.IList" data-throw-if-not-resolved="false"></xref> data source, if the elements are strings or ustrings, the string is rendered, otherwise the ToString() method is invoked on the result.
    content.vb: Public Sub New(source As IList)
  overload: Terminal.Gui.ListView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.#ctor(Terminal.Gui.IListDataSource)
  commentId: M:Terminal.Gui.ListView.#ctor(Terminal.Gui.IListDataSource)
  id: '#ctor(Terminal.Gui.IListDataSource)'
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: ListView(IListDataSource)
  nameWithType: ListView.ListView(IListDataSource)
  fullName: Terminal.Gui.ListView.ListView(Terminal.Gui.IListDataSource)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 240
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitializes a new instance of <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> that will display the provided data source, using relative positioning.\n"
  example: []
  syntax:
    content: public ListView(IListDataSource source)
    parameters:
    - id: source
      type: Terminal.Gui.IListDataSource
      description: "<xref href=\"Terminal.Gui.IListDataSource\" data-throw-if-not-resolved=\"false\"></xref> object that provides a mechanism to render the data. \n    The number of elements on the collection should not change, if you must change, set \n    the &quot;Source&quot; property to reset the internal settings of the ListView."
    content.vb: Public Sub New(source As IListDataSource)
  overload: Terminal.Gui.ListView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.#ctor
  commentId: M:Terminal.Gui.ListView.#ctor
  id: '#ctor'
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: ListView()
  nameWithType: ListView.ListView()
  fullName: Terminal.Gui.ListView.ListView()
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 249
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitializes a new instance of <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref>. Set the <xref href=\"Terminal.Gui.ListView.Source\" data-throw-if-not-resolved=\"false\"></xref> property to display something.\n"
  example: []
  syntax:
    content: public ListView()
    content.vb: Public Sub New
  overload: Terminal.Gui.ListView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.#ctor(Terminal.Gui.Rect,System.Collections.IList)
  commentId: M:Terminal.Gui.ListView.#ctor(Terminal.Gui.Rect,System.Collections.IList)
  id: '#ctor(Terminal.Gui.Rect,System.Collections.IList)'
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: ListView(Rect, IList)
  nameWithType: ListView.ListView(Rect, IList)
  fullName: Terminal.Gui.ListView.ListView(Terminal.Gui.Rect, System.Collections.IList)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 258
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitializes a new instance of <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> that will display the contents of the object implementing the <xref href=\"System.Collections.IList\" data-throw-if-not-resolved=\"false\"></xref> interface with an absolute position.\n"
  example: []
  syntax:
    content: public ListView(Rect rect, IList source)
    parameters:
    - id: rect
      type: Terminal.Gui.Rect
      description: Frame for the listview.
    - id: source
      type: System.Collections.IList
      description: An IList data source, if the elements of the IList are strings or ustrings, the string is rendered, otherwise the ToString() method is invoked on the result.
    content.vb: Public Sub New(rect As Rect, source As IList)
  overload: Terminal.Gui.ListView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.#ctor(Terminal.Gui.Rect,Terminal.Gui.IListDataSource)
  commentId: M:Terminal.Gui.ListView.#ctor(Terminal.Gui.Rect,Terminal.Gui.IListDataSource)
  id: '#ctor(Terminal.Gui.Rect,Terminal.Gui.IListDataSource)'
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: ListView(Rect, IListDataSource)
  nameWithType: ListView.ListView(Rect, IListDataSource)
  fullName: Terminal.Gui.ListView.ListView(Terminal.Gui.Rect, Terminal.Gui.IListDataSource)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 267
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitializes a new instance of <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> with the provided data source and an absolute position\n"
  example: []
  syntax:
    content: public ListView(Rect rect, IListDataSource source)
    parameters:
    - id: rect
      type: Terminal.Gui.Rect
      description: Frame for the listview.
    - id: source
      type: Terminal.Gui.IListDataSource
      description: IListDataSource object that provides a mechanism to render the data. The number of elements on the collection should not change, if you must change, set the &quot;Source&quot; property to reset the internal settings of the ListView.
    content.vb: Public Sub New(rect As Rect, source As IListDataSource)
  overload: Terminal.Gui.ListView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.ListView.Redraw(Terminal.Gui.Rect)
  id: Redraw(Terminal.Gui.Rect)
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: Redraw(Rect)
  nameWithType: ListView.Redraw(Rect)
  fullName: Terminal.Gui.ListView.Redraw(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: Redraw
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 274
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override void Redraw(Rect region)
    parameters:
    - id: region
      type: Terminal.Gui.Rect
    content.vb: Public Overrides Sub Redraw(region As Rect)
  overridden: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  overload: Terminal.Gui.ListView.Redraw*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.ListView.SelectedChanged
  commentId: E:Terminal.Gui.ListView.SelectedChanged
  id: SelectedChanged
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: SelectedChanged
  nameWithType: ListView.SelectedChanged
  fullName: Terminal.Gui.ListView.SelectedChanged
  type: Event
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: SelectedChanged
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 309
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThis event is raised when the selected item in the <xref href=\"Terminal.Gui.ListView\" data-throw-if-not-resolved=\"false\"></xref> has changed.\n"
  example: []
  syntax:
    content: public event EventHandler<ListViewItemEventArgs> SelectedChanged
    return:
      type: System.EventHandler{Terminal.Gui.ListViewItemEventArgs}
    content.vb: Public Event SelectedChanged As EventHandler(Of ListViewItemEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.OpenSelectedItem
  commentId: E:Terminal.Gui.ListView.OpenSelectedItem
  id: OpenSelectedItem
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: OpenSelectedItem
  nameWithType: ListView.OpenSelectedItem
  fullName: Terminal.Gui.ListView.OpenSelectedItem
  type: Event
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: OpenSelectedItem
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 314
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThis event is raised when the user Double Clicks on an item or presses ENTER to open the selected item.\n"
  example: []
  syntax:
    content: public event EventHandler<ListViewItemEventArgs> OpenSelectedItem
    return:
      type: System.EventHandler{Terminal.Gui.ListViewItemEventArgs}
    content.vb: Public Event OpenSelectedItem As EventHandler(Of ListViewItemEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.ListView.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.ListView.ProcessKey(Terminal.Gui.KeyEvent)
  id: ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: ProcessKey(KeyEvent)
  nameWithType: ListView.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.ListView.ProcessKey(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: ProcessKey
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 317
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override bool ProcessKey(KeyEvent kb)
    parameters:
    - id: kb
      type: Terminal.Gui.KeyEvent
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ProcessKey(kb As KeyEvent) As Boolean
  overridden: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  overload: Terminal.Gui.ListView.ProcessKey*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.ListView.AllowsAll
  commentId: M:Terminal.Gui.ListView.AllowsAll
  id: AllowsAll
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: AllowsAll()
  nameWithType: ListView.AllowsAll()
  fullName: Terminal.Gui.ListView.AllowsAll()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: AllowsAll
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 356
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nPrevents marking if it&apos;s not allowed mark and if it&apos;s not allows multiple selection.\n"
  example: []
  syntax:
    content: public virtual bool AllowsAll()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function AllowsAll As Boolean
  overload: Terminal.Gui.ListView.AllowsAll*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Terminal.Gui.ListView.MarkUnmarkRow
  commentId: M:Terminal.Gui.ListView.MarkUnmarkRow
  id: MarkUnmarkRow
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: MarkUnmarkRow()
  nameWithType: ListView.MarkUnmarkRow()
  fullName: Terminal.Gui.ListView.MarkUnmarkRow()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: MarkUnmarkRow
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 375
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nMarks an unmarked row.\n"
  example: []
  syntax:
    content: public virtual bool MarkUnmarkRow()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function MarkUnmarkRow As Boolean
  overload: Terminal.Gui.ListView.MarkUnmarkRow*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Terminal.Gui.ListView.MovePageUp
  commentId: M:Terminal.Gui.ListView.MovePageUp
  id: MovePageUp
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: MovePageUp()
  nameWithType: ListView.MovePageUp()
  fullName: Terminal.Gui.ListView.MovePageUp()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: MovePageUp
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 390
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nMoves the selected item index to the next page.\n"
  example: []
  syntax:
    content: public virtual bool MovePageUp()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function MovePageUp As Boolean
  overload: Terminal.Gui.ListView.MovePageUp*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Terminal.Gui.ListView.MovePageDown
  commentId: M:Terminal.Gui.ListView.MovePageDown
  id: MovePageDown
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: MovePageDown()
  nameWithType: ListView.MovePageDown()
  fullName: Terminal.Gui.ListView.MovePageDown()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: MovePageDown
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 409
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nMoves the selected item index to the previous page.\n"
  example: []
  syntax:
    content: public virtual bool MovePageDown()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function MovePageDown As Boolean
  overload: Terminal.Gui.ListView.MovePageDown*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Terminal.Gui.ListView.MoveDown
  commentId: M:Terminal.Gui.ListView.MoveDown
  id: MoveDown
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: MoveDown()
  nameWithType: ListView.MoveDown()
  fullName: Terminal.Gui.ListView.MoveDown()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: MoveDown
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 431
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nMoves the selected item index to the next row.\n"
  example: []
  syntax:
    content: public virtual bool MoveDown()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function MoveDown As Boolean
  overload: Terminal.Gui.ListView.MoveDown*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Terminal.Gui.ListView.MoveUp
  commentId: M:Terminal.Gui.ListView.MoveUp
  id: MoveUp
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: MoveUp()
  nameWithType: ListView.MoveUp()
  fullName: Terminal.Gui.ListView.MoveUp()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: MoveUp
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 448
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nMoves the selected item index to the previous row.\n"
  example: []
  syntax:
    content: public virtual bool MoveUp()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function MoveUp As Boolean
  overload: Terminal.Gui.ListView.MoveUp*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Terminal.Gui.ListView.OnSelectedChanged
  commentId: M:Terminal.Gui.ListView.OnSelectedChanged
  id: OnSelectedChanged
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: OnSelectedChanged()
  nameWithType: ListView.OnSelectedChanged()
  fullName: Terminal.Gui.ListView.OnSelectedChanged()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: OnSelectedChanged
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 467
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInvokes the SelectedChanged event if it is defined.\n"
  example: []
  syntax:
    content: public virtual bool OnSelectedChanged()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function OnSelectedChanged As Boolean
  overload: Terminal.Gui.ListView.OnSelectedChanged*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Terminal.Gui.ListView.OnOpenSelectedItem
  commentId: M:Terminal.Gui.ListView.OnOpenSelectedItem
  id: OnOpenSelectedItem
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: OnOpenSelectedItem()
  nameWithType: ListView.OnOpenSelectedItem()
  fullName: Terminal.Gui.ListView.OnOpenSelectedItem()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: OnOpenSelectedItem
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 483
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInvokes the OnOpenSelectedItem event if it is defined.\n"
  example: []
  syntax:
    content: public virtual bool OnOpenSelectedItem()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function OnOpenSelectedItem As Boolean
  overload: Terminal.Gui.ListView.OnOpenSelectedItem*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Terminal.Gui.ListView.PositionCursor
  commentId: M:Terminal.Gui.ListView.PositionCursor
  id: PositionCursor
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: PositionCursor()
  nameWithType: ListView.PositionCursor()
  fullName: Terminal.Gui.ListView.PositionCursor()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: PositionCursor
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 492
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override void PositionCursor()
    content.vb: Public Overrides Sub PositionCursor
  overridden: Terminal.Gui.View.PositionCursor
  overload: Terminal.Gui.ListView.PositionCursor*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.ListView.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.ListView.MouseEvent(Terminal.Gui.MouseEvent)
  id: MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.ListView
  langs:
  - csharp
  - vb
  name: MouseEvent(MouseEvent)
  nameWithType: ListView.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.ListView.MouseEvent(Terminal.Gui.MouseEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/ListView.cs
      branch: refactor_core
      repo: tig:tig/gui.cs.git
    id: MouseEvent
    path: ../Terminal.Gui/Views/ListView.cs
    startLine: 501
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override bool MouseEvent(MouseEvent me)
    parameters:
    - id: me
      type: Terminal.Gui.MouseEvent
    return:
      type: System.Boolean
    content.vb: Public Overrides Function MouseEvent(me As MouseEvent) As Boolean
  overridden: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  overload: Terminal.Gui.ListView.MouseEvent*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: Terminal.Gui.ListView
  commentId: T:Terminal.Gui.ListView
  parent: Terminal.Gui
  name: ListView
  nameWithType: ListView
  fullName: Terminal.Gui.ListView
- uid: Terminal.Gui.ListView.AllowsMarking
  commentId: P:Terminal.Gui.ListView.AllowsMarking
  isExternal: true
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
- uid: Terminal.Gui.IListDataSource
  commentId: T:Terminal.Gui.IListDataSource
  parent: Terminal.Gui
  name: IListDataSource
  nameWithType: IListDataSource
  fullName: Terminal.Gui.IListDataSource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NStack.ustring
  commentId: T:NStack.ustring
  parent: NStack
  isExternal: true
  name: ustring
  nameWithType: ustring
  fullName: NStack.ustring
- uid: Terminal.Gui.ListView.Source
  commentId: P:Terminal.Gui.ListView.Source
  isExternal: true
- uid: Terminal.Gui.ListView.SetSource(System.Collections.IList)
  commentId: M:Terminal.Gui.ListView.SetSource(System.Collections.IList)
  isExternal: true
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Terminal.Gui.Responder
  commentId: T:Terminal.Gui.Responder
  parent: Terminal.Gui
  name: Responder
  nameWithType: Responder
  fullName: Terminal.Gui.Responder
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Terminal.Gui.View.Enter
  commentId: E:Terminal.Gui.View.Enter
  parent: Terminal.Gui.View
  name: Enter
  nameWithType: View.Enter
  fullName: Terminal.Gui.View.Enter
- uid: Terminal.Gui.View.Leave
  commentId: E:Terminal.Gui.View.Leave
  parent: Terminal.Gui.View
  name: Leave
  nameWithType: View.Leave
  fullName: Terminal.Gui.View.Leave
- uid: Terminal.Gui.View.MouseEnter
  commentId: E:Terminal.Gui.View.MouseEnter
  parent: Terminal.Gui.View
  name: MouseEnter
  nameWithType: View.MouseEnter
  fullName: Terminal.Gui.View.MouseEnter
- uid: Terminal.Gui.View.MouseLeave
  commentId: E:Terminal.Gui.View.MouseLeave
  parent: Terminal.Gui.View
  name: MouseLeave
  nameWithType: View.MouseLeave
  fullName: Terminal.Gui.View.MouseLeave
- uid: Terminal.Gui.View.Driver
  commentId: P:Terminal.Gui.View.Driver
  parent: Terminal.Gui.View
  name: Driver
  nameWithType: View.Driver
  fullName: Terminal.Gui.View.Driver
- uid: Terminal.Gui.View.Subviews
  commentId: P:Terminal.Gui.View.Subviews
  parent: Terminal.Gui.View
  name: Subviews
  nameWithType: View.Subviews
  fullName: Terminal.Gui.View.Subviews
- uid: Terminal.Gui.View.Id
  commentId: P:Terminal.Gui.View.Id
  parent: Terminal.Gui.View
  name: Id
  nameWithType: View.Id
  fullName: Terminal.Gui.View.Id
- uid: Terminal.Gui.View.IsCurrentTop
  commentId: P:Terminal.Gui.View.IsCurrentTop
  parent: Terminal.Gui.View
  name: IsCurrentTop
  nameWithType: View.IsCurrentTop
  fullName: Terminal.Gui.View.IsCurrentTop
- uid: Terminal.Gui.View.WantMousePositionReports
  commentId: P:Terminal.Gui.View.WantMousePositionReports
  parent: Terminal.Gui.View
  name: WantMousePositionReports
  nameWithType: View.WantMousePositionReports
  fullName: Terminal.Gui.View.WantMousePositionReports
- uid: Terminal.Gui.View.WantContinuousButtonPressed
  commentId: P:Terminal.Gui.View.WantContinuousButtonPressed
  parent: Terminal.Gui.View
  name: WantContinuousButtonPressed
  nameWithType: View.WantContinuousButtonPressed
  fullName: Terminal.Gui.View.WantContinuousButtonPressed
- uid: Terminal.Gui.View.Frame
  commentId: P:Terminal.Gui.View.Frame
  parent: Terminal.Gui.View
  name: Frame
  nameWithType: View.Frame
  fullName: Terminal.Gui.View.Frame
- uid: Terminal.Gui.View.GetEnumerator
  commentId: M:Terminal.Gui.View.GetEnumerator
  parent: Terminal.Gui.View
  name: GetEnumerator()
  nameWithType: View.GetEnumerator()
  fullName: Terminal.Gui.View.GetEnumerator()
  spec.csharp:
  - uid: Terminal.Gui.View.GetEnumerator
    name: GetEnumerator
    nameWithType: View.GetEnumerator
    fullName: Terminal.Gui.View.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.GetEnumerator
    name: GetEnumerator
    nameWithType: View.GetEnumerator
    fullName: Terminal.Gui.View.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.LayoutStyle
  commentId: P:Terminal.Gui.View.LayoutStyle
  parent: Terminal.Gui.View
  name: LayoutStyle
  nameWithType: View.LayoutStyle
  fullName: Terminal.Gui.View.LayoutStyle
- uid: Terminal.Gui.View.Bounds
  commentId: P:Terminal.Gui.View.Bounds
  parent: Terminal.Gui.View
  name: Bounds
  nameWithType: View.Bounds
  fullName: Terminal.Gui.View.Bounds
- uid: Terminal.Gui.View.X
  commentId: P:Terminal.Gui.View.X
  parent: Terminal.Gui.View
  name: X
  nameWithType: View.X
  fullName: Terminal.Gui.View.X
- uid: Terminal.Gui.View.Y
  commentId: P:Terminal.Gui.View.Y
  parent: Terminal.Gui.View
  name: Y
  nameWithType: View.Y
  fullName: Terminal.Gui.View.Y
- uid: Terminal.Gui.View.Width
  commentId: P:Terminal.Gui.View.Width
  parent: Terminal.Gui.View
  name: Width
  nameWithType: View.Width
  fullName: Terminal.Gui.View.Width
- uid: Terminal.Gui.View.Height
  commentId: P:Terminal.Gui.View.Height
  parent: Terminal.Gui.View
  name: Height
  nameWithType: View.Height
  fullName: Terminal.Gui.View.Height
- uid: Terminal.Gui.View.SuperView
  commentId: P:Terminal.Gui.View.SuperView
  parent: Terminal.Gui.View
  name: SuperView
  nameWithType: View.SuperView
  fullName: Terminal.Gui.View.SuperView
- uid: Terminal.Gui.View.SetNeedsDisplay
  commentId: M:Terminal.Gui.View.SetNeedsDisplay
  parent: Terminal.Gui.View
  name: SetNeedsDisplay()
  nameWithType: View.SetNeedsDisplay()
  fullName: Terminal.Gui.View.SetNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: SetNeedsDisplay(Rect)
  nameWithType: View.SetNeedsDisplay(Rect)
  fullName: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ChildNeedsDisplay
  commentId: M:Terminal.Gui.View.ChildNeedsDisplay
  parent: Terminal.Gui.View
  name: ChildNeedsDisplay()
  nameWithType: View.ChildNeedsDisplay()
  fullName: Terminal.Gui.View.ChildNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.ChildNeedsDisplay
    name: ChildNeedsDisplay
    nameWithType: View.ChildNeedsDisplay
    fullName: Terminal.Gui.View.ChildNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ChildNeedsDisplay
    name: ChildNeedsDisplay
    nameWithType: View.ChildNeedsDisplay
    fullName: Terminal.Gui.View.ChildNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Add(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: Add(View)
  nameWithType: View.Add(View)
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View[])
  parent: Terminal.Gui.View
  name: Add(View[])
  nameWithType: View.Add(View[])
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View[])
  nameWithType.vb: View.Add(View())
  fullName.vb: Terminal.Gui.View.Add(Terminal.Gui.View())
  name.vb: Add(View())
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.RemoveAll
  commentId: M:Terminal.Gui.View.RemoveAll
  parent: Terminal.Gui.View
  name: RemoveAll()
  nameWithType: View.RemoveAll()
  fullName: Terminal.Gui.View.RemoveAll()
  spec.csharp:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    nameWithType: View.RemoveAll
    fullName: Terminal.Gui.View.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    nameWithType: View.RemoveAll
    fullName: Terminal.Gui.View.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Remove(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: Remove(View)
  nameWithType: View.Remove(View)
  fullName: Terminal.Gui.View.Remove(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    nameWithType: View.Remove
    fullName: Terminal.Gui.View.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    nameWithType: View.Remove
    fullName: Terminal.Gui.View.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: BringSubviewToFront(View)
  nameWithType: View.BringSubviewToFront(View)
  fullName: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    nameWithType: View.BringSubviewToFront
    fullName: Terminal.Gui.View.BringSubviewToFront
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    nameWithType: View.BringSubviewToFront
    fullName: Terminal.Gui.View.BringSubviewToFront
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SendSubviewToBack(View)
  nameWithType: View.SendSubviewToBack(View)
  fullName: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    nameWithType: View.SendSubviewToBack
    fullName: Terminal.Gui.View.SendSubviewToBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    nameWithType: View.SendSubviewToBack
    fullName: Terminal.Gui.View.SendSubviewToBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SendSubviewBackwards(View)
  nameWithType: View.SendSubviewBackwards(View)
  fullName: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
    name: SendSubviewBackwards
    nameWithType: View.SendSubviewBackwards
    fullName: Terminal.Gui.View.SendSubviewBackwards
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
    name: SendSubviewBackwards
    nameWithType: View.SendSubviewBackwards
    fullName: Terminal.Gui.View.SendSubviewBackwards
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: BringSubviewForward(View)
  nameWithType: View.BringSubviewForward(View)
  fullName: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
    name: BringSubviewForward
    nameWithType: View.BringSubviewForward
    fullName: Terminal.Gui.View.BringSubviewForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
    name: BringSubviewForward
    nameWithType: View.BringSubviewForward
    fullName: Terminal.Gui.View.BringSubviewForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Clear
  commentId: M:Terminal.Gui.View.Clear
  parent: Terminal.Gui.View
  name: Clear()
  nameWithType: View.Clear()
  fullName: Terminal.Gui.View.Clear()
  spec.csharp:
  - uid: Terminal.Gui.View.Clear
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Clear
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: Clear(Rect)
  nameWithType: View.Clear(Rect)
  fullName: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  name: ScreenToView(Int32, Int32)
  nameWithType: View.ScreenToView(Int32, Int32)
  fullName: Terminal.Gui.View.ScreenToView(System.Int32, System.Int32)
  spec.csharp:
  - uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
    name: ScreenToView
    nameWithType: View.ScreenToView
    fullName: Terminal.Gui.View.ScreenToView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
    name: ScreenToView
    nameWithType: View.ScreenToView
    fullName: Terminal.Gui.View.ScreenToView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ClipToBounds
  commentId: M:Terminal.Gui.View.ClipToBounds
  parent: Terminal.Gui.View
  name: ClipToBounds()
  nameWithType: View.ClipToBounds()
  fullName: Terminal.Gui.View.ClipToBounds()
  spec.csharp:
  - uid: Terminal.Gui.View.ClipToBounds
    name: ClipToBounds
    nameWithType: View.ClipToBounds
    fullName: Terminal.Gui.View.ClipToBounds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ClipToBounds
    name: ClipToBounds
    nameWithType: View.ClipToBounds
    fullName: Terminal.Gui.View.ClipToBounds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: SetClip(Rect)
  nameWithType: View.SetClip(Rect)
  fullName: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
    name: SetClip
    nameWithType: View.SetClip
    fullName: Terminal.Gui.View.SetClip
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
    name: SetClip
    nameWithType: View.SetClip
    fullName: Terminal.Gui.View.SetClip
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  commentId: M:Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawFrame(Rect, Int32, Boolean)
  nameWithType: View.DrawFrame(Rect, Int32, Boolean)
  fullName: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect, System.Int32, System.Boolean)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
    name: DrawFrame
    nameWithType: View.DrawFrame
    fullName: Terminal.Gui.View.DrawFrame
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
    name: DrawFrame
    nameWithType: View.DrawFrame
    fullName: Terminal.Gui.View.DrawFrame
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  commentId: M:Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawHotString(ustring, Attribute, Attribute)
  nameWithType: View.DrawHotString(ustring, Attribute, Attribute)
  fullName: Terminal.Gui.View.DrawHotString(NStack.ustring, Terminal.Gui.Attribute, Terminal.Gui.Attribute)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  commentId: M:Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawHotString(ustring, Boolean, ColorScheme)
  nameWithType: View.DrawHotString(ustring, Boolean, ColorScheme)
  fullName: Terminal.Gui.View.DrawHotString(NStack.ustring, System.Boolean, Terminal.Gui.ColorScheme)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: Terminal.Gui.ColorScheme
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: Terminal.Gui.ColorScheme
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.Move(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  name: Move(Int32, Int32)
  nameWithType: View.Move(Int32, Int32)
  fullName: Terminal.Gui.View.Move(System.Int32, System.Int32)
  spec.csharp:
  - uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: View.Move
    fullName: Terminal.Gui.View.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: View.Move
    fullName: Terminal.Gui.View.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.HasFocus
  commentId: P:Terminal.Gui.View.HasFocus
  parent: Terminal.Gui.View
  name: HasFocus
  nameWithType: View.HasFocus
  fullName: Terminal.Gui.View.HasFocus
- uid: Terminal.Gui.View.OnEnter
  commentId: M:Terminal.Gui.View.OnEnter
  parent: Terminal.Gui.View
  name: OnEnter()
  nameWithType: View.OnEnter()
  fullName: Terminal.Gui.View.OnEnter()
  spec.csharp:
  - uid: Terminal.Gui.View.OnEnter
    name: OnEnter
    nameWithType: View.OnEnter
    fullName: Terminal.Gui.View.OnEnter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnEnter
    name: OnEnter
    nameWithType: View.OnEnter
    fullName: Terminal.Gui.View.OnEnter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnLeave
  commentId: M:Terminal.Gui.View.OnLeave
  parent: Terminal.Gui.View
  name: OnLeave()
  nameWithType: View.OnLeave()
  fullName: Terminal.Gui.View.OnLeave()
  spec.csharp:
  - uid: Terminal.Gui.View.OnLeave
    name: OnLeave
    nameWithType: View.OnLeave
    fullName: Terminal.Gui.View.OnLeave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnLeave
    name: OnLeave
    nameWithType: View.OnLeave
    fullName: Terminal.Gui.View.OnLeave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Focused
  commentId: P:Terminal.Gui.View.Focused
  parent: Terminal.Gui.View
  name: Focused
  nameWithType: View.Focused
  fullName: Terminal.Gui.View.Focused
- uid: Terminal.Gui.View.MostFocused
  commentId: P:Terminal.Gui.View.MostFocused
  parent: Terminal.Gui.View
  name: MostFocused
  nameWithType: View.MostFocused
  fullName: Terminal.Gui.View.MostFocused
- uid: Terminal.Gui.View.ColorScheme
  commentId: P:Terminal.Gui.View.ColorScheme
  parent: Terminal.Gui.View
  name: ColorScheme
  nameWithType: View.ColorScheme
  fullName: Terminal.Gui.View.ColorScheme
- uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  commentId: M:Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  parent: Terminal.Gui.View
  isExternal: true
  name: AddRune(Int32, Int32, Rune)
  nameWithType: View.AddRune(Int32, Int32, Rune)
  fullName: Terminal.Gui.View.AddRune(System.Int32, System.Int32, System.Rune)
  spec.csharp:
  - uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
    name: AddRune
    nameWithType: View.AddRune
    fullName: Terminal.Gui.View.AddRune
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Rune
    name: Rune
    nameWithType: Rune
    fullName: System.Rune
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
    name: AddRune
    nameWithType: View.AddRune
    fullName: Terminal.Gui.View.AddRune
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Rune
    name: Rune
    nameWithType: Rune
    fullName: System.Rune
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ClearNeedsDisplay
  commentId: M:Terminal.Gui.View.ClearNeedsDisplay
  parent: Terminal.Gui.View
  name: ClearNeedsDisplay()
  nameWithType: View.ClearNeedsDisplay()
  fullName: Terminal.Gui.View.ClearNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.ClearNeedsDisplay
    name: ClearNeedsDisplay
    nameWithType: View.ClearNeedsDisplay
    fullName: Terminal.Gui.View.ClearNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ClearNeedsDisplay
    name: ClearNeedsDisplay
    nameWithType: View.ClearNeedsDisplay
    fullName: Terminal.Gui.View.ClearNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SetFocus(View)
  nameWithType: View.SetFocus(View)
  fullName: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
    name: SetFocus
    nameWithType: View.SetFocus
    fullName: Terminal.Gui.View.SetFocus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
    name: SetFocus
    nameWithType: View.SetFocus
    fullName: Terminal.Gui.View.SetFocus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyPress
  commentId: E:Terminal.Gui.View.KeyPress
  parent: Terminal.Gui.View
  name: KeyPress
  nameWithType: View.KeyPress
  fullName: Terminal.Gui.View.KeyPress
- uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessHotKey(KeyEvent)
  nameWithType: View.ProcessHotKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    nameWithType: View.ProcessHotKey
    fullName: Terminal.Gui.View.ProcessHotKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    nameWithType: View.ProcessHotKey
    fullName: Terminal.Gui.View.ProcessHotKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessColdKey(KeyEvent)
  nameWithType: View.ProcessColdKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    nameWithType: View.ProcessColdKey
    fullName: Terminal.Gui.View.ProcessColdKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    nameWithType: View.ProcessColdKey
    fullName: Terminal.Gui.View.ProcessColdKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyDown
  commentId: E:Terminal.Gui.View.KeyDown
  parent: Terminal.Gui.View
  name: KeyDown
  nameWithType: View.KeyDown
  fullName: Terminal.Gui.View.KeyDown
- uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: OnKeyDown(KeyEvent)
  nameWithType: View.OnKeyDown(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    nameWithType: View.OnKeyDown
    fullName: Terminal.Gui.View.OnKeyDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    nameWithType: View.OnKeyDown
    fullName: Terminal.Gui.View.OnKeyDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyUp
  commentId: E:Terminal.Gui.View.KeyUp
  parent: Terminal.Gui.View
  name: KeyUp
  nameWithType: View.KeyUp
  fullName: Terminal.Gui.View.KeyUp
- uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: OnKeyUp(KeyEvent)
  nameWithType: View.OnKeyUp(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    nameWithType: View.OnKeyUp
    fullName: Terminal.Gui.View.OnKeyUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    nameWithType: View.OnKeyUp
    fullName: Terminal.Gui.View.OnKeyUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.EnsureFocus
  commentId: M:Terminal.Gui.View.EnsureFocus
  parent: Terminal.Gui.View
  name: EnsureFocus()
  nameWithType: View.EnsureFocus()
  fullName: Terminal.Gui.View.EnsureFocus()
  spec.csharp:
  - uid: Terminal.Gui.View.EnsureFocus
    name: EnsureFocus
    nameWithType: View.EnsureFocus
    fullName: Terminal.Gui.View.EnsureFocus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.EnsureFocus
    name: EnsureFocus
    nameWithType: View.EnsureFocus
    fullName: Terminal.Gui.View.EnsureFocus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusFirst
  commentId: M:Terminal.Gui.View.FocusFirst
  parent: Terminal.Gui.View
  name: FocusFirst()
  nameWithType: View.FocusFirst()
  fullName: Terminal.Gui.View.FocusFirst()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusFirst
    name: FocusFirst
    nameWithType: View.FocusFirst
    fullName: Terminal.Gui.View.FocusFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusFirst
    name: FocusFirst
    nameWithType: View.FocusFirst
    fullName: Terminal.Gui.View.FocusFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusLast
  commentId: M:Terminal.Gui.View.FocusLast
  parent: Terminal.Gui.View
  name: FocusLast()
  nameWithType: View.FocusLast()
  fullName: Terminal.Gui.View.FocusLast()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusLast
    name: FocusLast
    nameWithType: View.FocusLast
    fullName: Terminal.Gui.View.FocusLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusLast
    name: FocusLast
    nameWithType: View.FocusLast
    fullName: Terminal.Gui.View.FocusLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusPrev
  commentId: M:Terminal.Gui.View.FocusPrev
  parent: Terminal.Gui.View
  name: FocusPrev()
  nameWithType: View.FocusPrev()
  fullName: Terminal.Gui.View.FocusPrev()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusPrev
    name: FocusPrev
    nameWithType: View.FocusPrev
    fullName: Terminal.Gui.View.FocusPrev
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusPrev
    name: FocusPrev
    nameWithType: View.FocusPrev
    fullName: Terminal.Gui.View.FocusPrev
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusNext
  commentId: M:Terminal.Gui.View.FocusNext
  parent: Terminal.Gui.View
  name: FocusNext()
  nameWithType: View.FocusNext()
  fullName: Terminal.Gui.View.FocusNext()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusNext
    name: FocusNext
    nameWithType: View.FocusNext
    fullName: Terminal.Gui.View.FocusNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusNext
    name: FocusNext
    nameWithType: View.FocusNext
    fullName: Terminal.Gui.View.FocusNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.LayoutSubviews
  commentId: M:Terminal.Gui.View.LayoutSubviews
  parent: Terminal.Gui.View
  name: LayoutSubviews()
  nameWithType: View.LayoutSubviews()
  fullName: Terminal.Gui.View.LayoutSubviews()
  spec.csharp:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    nameWithType: View.LayoutSubviews
    fullName: Terminal.Gui.View.LayoutSubviews
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    nameWithType: View.LayoutSubviews
    fullName: Terminal.Gui.View.LayoutSubviews
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ToString
  commentId: M:Terminal.Gui.View.ToString
  parent: Terminal.Gui.View
  name: ToString()
  nameWithType: View.ToString()
  fullName: Terminal.Gui.View.ToString()
  spec.csharp:
  - uid: Terminal.Gui.View.ToString
    name: ToString
    nameWithType: View.ToString
    fullName: Terminal.Gui.View.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ToString
    name: ToString
    nameWithType: View.ToString
    fullName: Terminal.Gui.View.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  name: OnMouseEnter(MouseEvent)
  nameWithType: View.OnMouseEnter(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    nameWithType: View.OnMouseEnter
    fullName: Terminal.Gui.View.OnMouseEnter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    nameWithType: View.OnMouseEnter
    fullName: Terminal.Gui.View.OnMouseEnter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  name: OnMouseLeave(MouseEvent)
  nameWithType: View.OnMouseLeave(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    nameWithType: View.OnMouseLeave
    fullName: Terminal.Gui.View.OnMouseLeave
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    nameWithType: View.OnMouseLeave
    fullName: Terminal.Gui.View.OnMouseLeave
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.Responder.CanFocus
  commentId: P:Terminal.Gui.Responder.CanFocus
  parent: Terminal.Gui.Responder
  name: CanFocus
  nameWithType: Responder.CanFocus
  fullName: Terminal.Gui.Responder.CanFocus
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NStack
  commentId: N:NStack
  isExternal: true
  name: NStack
  nameWithType: NStack
  fullName: NStack
- uid: Terminal.Gui.ListView.Source*
  commentId: Overload:Terminal.Gui.ListView.Source
  name: Source
  nameWithType: ListView.Source
  fullName: Terminal.Gui.ListView.Source
- uid: Terminal.Gui.ListView.SetSource*
  commentId: Overload:Terminal.Gui.ListView.SetSource
  name: SetSource
  nameWithType: ListView.SetSource
  fullName: Terminal.Gui.ListView.SetSource
- uid: Terminal.Gui.ListView.SetSourceAsync*
  commentId: Overload:Terminal.Gui.ListView.SetSourceAsync
  name: SetSourceAsync
  nameWithType: ListView.SetSourceAsync
  fullName: Terminal.Gui.ListView.SetSourceAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Terminal.Gui.ListView.AllowsMarking*
  commentId: Overload:Terminal.Gui.ListView.AllowsMarking
  name: AllowsMarking
  nameWithType: ListView.AllowsMarking
  fullName: Terminal.Gui.ListView.AllowsMarking
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Terminal.Gui.ListView.AllowsMultipleSelection*
  commentId: Overload:Terminal.Gui.ListView.AllowsMultipleSelection
  name: AllowsMultipleSelection
  nameWithType: ListView.AllowsMultipleSelection
  fullName: Terminal.Gui.ListView.AllowsMultipleSelection
- uid: Terminal.Gui.ListView.TopItem*
  commentId: Overload:Terminal.Gui.ListView.TopItem
  name: TopItem
  nameWithType: ListView.TopItem
  fullName: Terminal.Gui.ListView.TopItem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Terminal.Gui.ListView.SelectedItem*
  commentId: Overload:Terminal.Gui.ListView.SelectedItem
  name: SelectedItem
  nameWithType: ListView.SelectedItem
  fullName: Terminal.Gui.ListView.SelectedItem
- uid: Terminal.Gui.ListView.#ctor*
  commentId: Overload:Terminal.Gui.ListView.#ctor
  name: ListView
  nameWithType: ListView.ListView
  fullName: Terminal.Gui.ListView.ListView
- uid: Terminal.Gui.Rect
  commentId: T:Terminal.Gui.Rect
  parent: Terminal.Gui
  name: Rect
  nameWithType: Rect
  fullName: Terminal.Gui.Rect
- uid: Terminal.Gui.ListView.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.ListView.Redraw(Terminal.Gui.Rect)
  isExternal: true
- uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: Redraw(Rect)
  nameWithType: View.Redraw(Rect)
  fullName: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: View.Redraw
    fullName: Terminal.Gui.View.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: View.Redraw
    fullName: Terminal.Gui.View.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.ListView.Redraw*
  commentId: Overload:Terminal.Gui.ListView.Redraw
  name: Redraw
  nameWithType: ListView.Redraw
  fullName: Terminal.Gui.ListView.Redraw
- uid: System.EventHandler{Terminal.Gui.ListViewItemEventArgs}
  commentId: T:System.EventHandler{Terminal.Gui.ListViewItemEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ListViewItemEventArgs>
  nameWithType: EventHandler<ListViewItemEventArgs>
  fullName: System.EventHandler<Terminal.Gui.ListViewItemEventArgs>
  nameWithType.vb: EventHandler(Of ListViewItemEventArgs)
  fullName.vb: System.EventHandler(Of Terminal.Gui.ListViewItemEventArgs)
  name.vb: EventHandler(Of ListViewItemEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Terminal.Gui.ListViewItemEventArgs
    name: ListViewItemEventArgs
    nameWithType: ListViewItemEventArgs
    fullName: Terminal.Gui.ListViewItemEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Terminal.Gui.ListViewItemEventArgs
    name: ListViewItemEventArgs
    nameWithType: ListViewItemEventArgs
    fullName: Terminal.Gui.ListViewItemEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.ListView.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.ListView.ProcessKey(Terminal.Gui.KeyEvent)
  isExternal: true
- uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessKey(KeyEvent)
  nameWithType: View.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    nameWithType: View.ProcessKey
    fullName: Terminal.Gui.View.ProcessKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    nameWithType: View.ProcessKey
    fullName: Terminal.Gui.View.ProcessKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.ListView.ProcessKey*
  commentId: Overload:Terminal.Gui.ListView.ProcessKey
  name: ProcessKey
  nameWithType: ListView.ProcessKey
  fullName: Terminal.Gui.ListView.ProcessKey
- uid: Terminal.Gui.KeyEvent
  commentId: T:Terminal.Gui.KeyEvent
  parent: Terminal.Gui
  name: KeyEvent
  nameWithType: KeyEvent
  fullName: Terminal.Gui.KeyEvent
- uid: Terminal.Gui.ListView.AllowsAll*
  commentId: Overload:Terminal.Gui.ListView.AllowsAll
  name: AllowsAll
  nameWithType: ListView.AllowsAll
  fullName: Terminal.Gui.ListView.AllowsAll
- uid: Terminal.Gui.ListView.MarkUnmarkRow*
  commentId: Overload:Terminal.Gui.ListView.MarkUnmarkRow
  name: MarkUnmarkRow
  nameWithType: ListView.MarkUnmarkRow
  fullName: Terminal.Gui.ListView.MarkUnmarkRow
- uid: Terminal.Gui.ListView.MovePageUp*
  commentId: Overload:Terminal.Gui.ListView.MovePageUp
  name: MovePageUp
  nameWithType: ListView.MovePageUp
  fullName: Terminal.Gui.ListView.MovePageUp
- uid: Terminal.Gui.ListView.MovePageDown*
  commentId: Overload:Terminal.Gui.ListView.MovePageDown
  name: MovePageDown
  nameWithType: ListView.MovePageDown
  fullName: Terminal.Gui.ListView.MovePageDown
- uid: Terminal.Gui.ListView.MoveDown*
  commentId: Overload:Terminal.Gui.ListView.MoveDown
  name: MoveDown
  nameWithType: ListView.MoveDown
  fullName: Terminal.Gui.ListView.MoveDown
- uid: Terminal.Gui.ListView.MoveUp*
  commentId: Overload:Terminal.Gui.ListView.MoveUp
  name: MoveUp
  nameWithType: ListView.MoveUp
  fullName: Terminal.Gui.ListView.MoveUp
- uid: Terminal.Gui.ListView.OnSelectedChanged*
  commentId: Overload:Terminal.Gui.ListView.OnSelectedChanged
  name: OnSelectedChanged
  nameWithType: ListView.OnSelectedChanged
  fullName: Terminal.Gui.ListView.OnSelectedChanged
- uid: Terminal.Gui.ListView.OnOpenSelectedItem*
  commentId: Overload:Terminal.Gui.ListView.OnOpenSelectedItem
  name: OnOpenSelectedItem
  nameWithType: ListView.OnOpenSelectedItem
  fullName: Terminal.Gui.ListView.OnOpenSelectedItem
- uid: Terminal.Gui.ListView.PositionCursor
  commentId: M:Terminal.Gui.ListView.PositionCursor
  isExternal: true
- uid: Terminal.Gui.View.PositionCursor
  commentId: M:Terminal.Gui.View.PositionCursor
  parent: Terminal.Gui.View
  name: PositionCursor()
  nameWithType: View.PositionCursor()
  fullName: Terminal.Gui.View.PositionCursor()
  spec.csharp:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    nameWithType: View.PositionCursor
    fullName: Terminal.Gui.View.PositionCursor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    nameWithType: View.PositionCursor
    fullName: Terminal.Gui.View.PositionCursor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.ListView.PositionCursor*
  commentId: Overload:Terminal.Gui.ListView.PositionCursor
  name: PositionCursor
  nameWithType: ListView.PositionCursor
  fullName: Terminal.Gui.ListView.PositionCursor
- uid: Terminal.Gui.ListView.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.ListView.MouseEvent(Terminal.Gui.MouseEvent)
  isExternal: true
- uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.Responder
  name: MouseEvent(MouseEvent)
  nameWithType: Responder.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    nameWithType: Responder.MouseEvent
    fullName: Terminal.Gui.Responder.MouseEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    nameWithType: Responder.MouseEvent
    fullName: Terminal.Gui.Responder.MouseEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.ListView.MouseEvent*
  commentId: Overload:Terminal.Gui.ListView.MouseEvent
  name: MouseEvent
  nameWithType: ListView.MouseEvent
  fullName: Terminal.Gui.ListView.MouseEvent
- uid: Terminal.Gui.MouseEvent
  commentId: T:Terminal.Gui.MouseEvent
  parent: Terminal.Gui
  name: MouseEvent
  nameWithType: MouseEvent
  fullName: Terminal.Gui.MouseEvent
shouldSkipMarkup: true
