### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.TextField
  commentId: T:Terminal.Gui.TextField
  id: TextField
  parent: Terminal.Gui
  children:
  - Terminal.Gui.TextField.#ctor(NStack.ustring)
  - Terminal.Gui.TextField.#ctor(System.Int32,System.Int32,System.Int32,NStack.ustring)
  - Terminal.Gui.TextField.#ctor(System.String)
  - Terminal.Gui.TextField.CanFocus
  - Terminal.Gui.TextField.Changed
  - Terminal.Gui.TextField.ClearAllSelection
  - Terminal.Gui.TextField.Copy
  - Terminal.Gui.TextField.CursorPosition
  - Terminal.Gui.TextField.Cut
  - Terminal.Gui.TextField.Frame
  - Terminal.Gui.TextField.MouseEvent(Terminal.Gui.MouseEvent)
  - Terminal.Gui.TextField.OnLeave
  - Terminal.Gui.TextField.Paste
  - Terminal.Gui.TextField.PositionCursor
  - Terminal.Gui.TextField.ProcessKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.TextField.ReadOnly
  - Terminal.Gui.TextField.Redraw(Terminal.Gui.Rect)
  - Terminal.Gui.TextField.Secret
  - Terminal.Gui.TextField.SelectedLength
  - Terminal.Gui.TextField.SelectedStart
  - Terminal.Gui.TextField.SelectedText
  - Terminal.Gui.TextField.Text
  - Terminal.Gui.TextField.Used
  langs:
  - csharp
  - vb
  name: TextField
  nameWithType: TextField
  fullName: Terminal.Gui.TextField
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: TextField
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 19
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nSingle-line text entry <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>\n"
  remarks: "\nThe <xref href=\"Terminal.Gui.TextField\" data-throw-if-not-resolved=\"false\"></xref> <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> provides editing functionality and mouse support.\n"
  example: []
  syntax:
    content: 'public class TextField : View, IEnumerable'
    content.vb: >-
      Public Class TextField

          Inherits View

          Implements IEnumerable
  inheritance:
  - System.Object
  - Terminal.Gui.Responder
  - Terminal.Gui.View
  derivedClasses:
  - Terminal.Gui.DateField
  - Terminal.Gui.TimeField
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - Terminal.Gui.View.Enter
  - Terminal.Gui.View.Leave
  - Terminal.Gui.View.MouseEnter
  - Terminal.Gui.View.MouseLeave
  - Terminal.Gui.View.Driver
  - Terminal.Gui.View.Subviews
  - Terminal.Gui.View.Id
  - Terminal.Gui.View.IsCurrentTop
  - Terminal.Gui.View.WantMousePositionReports
  - Terminal.Gui.View.WantContinuousButtonPressed
  - Terminal.Gui.View.GetEnumerator
  - Terminal.Gui.View.LayoutStyle
  - Terminal.Gui.View.Bounds
  - Terminal.Gui.View.X
  - Terminal.Gui.View.Y
  - Terminal.Gui.View.Width
  - Terminal.Gui.View.Height
  - Terminal.Gui.View.SuperView
  - Terminal.Gui.View.SetNeedsDisplay
  - Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  - Terminal.Gui.View.ChildNeedsDisplay
  - Terminal.Gui.View.Add(Terminal.Gui.View)
  - Terminal.Gui.View.Add(Terminal.Gui.View[])
  - Terminal.Gui.View.RemoveAll
  - Terminal.Gui.View.Remove(Terminal.Gui.View)
  - Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  - Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  - Terminal.Gui.View.Clear
  - Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  - Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  - Terminal.Gui.View.ClipToBounds
  - Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  - Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  - Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  - Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  - Terminal.Gui.View.Move(System.Int32,System.Int32)
  - Terminal.Gui.View.HasFocus
  - Terminal.Gui.View.OnEnter
  - Terminal.Gui.View.Focused
  - Terminal.Gui.View.MostFocused
  - Terminal.Gui.View.ColorScheme
  - Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  - Terminal.Gui.View.ClearNeedsDisplay
  - Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  - Terminal.Gui.View.KeyPress
  - Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.KeyDown
  - Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.KeyUp
  - Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.EnsureFocus
  - Terminal.Gui.View.FocusFirst
  - Terminal.Gui.View.FocusLast
  - Terminal.Gui.View.FocusPrev
  - Terminal.Gui.View.FocusNext
  - Terminal.Gui.View.LayoutSubviews
  - Terminal.Gui.View.ToString
  - Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  - Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Terminal.Gui.TextField.Used
  commentId: P:Terminal.Gui.TextField.Used
  id: Used
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: Used
  nameWithType: TextField.Used
  fullName: Terminal.Gui.TextField.Used
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Used
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 27
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nTracks whether the text field should be considered &quot;used&quot;, that is, that the user has moved in the entry, so new input should be appended at the cursor position, rather than clearing the entry\n"
  example: []
  syntax:
    content: public bool Used { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Used As Boolean
  overload: Terminal.Gui.TextField.Used*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.ReadOnly
  commentId: P:Terminal.Gui.TextField.ReadOnly
  id: ReadOnly
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: TextField.ReadOnly
  fullName: Terminal.Gui.TextField.ReadOnly
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ReadOnly
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 32
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nIf set to true its not allow any changes in the text.\n"
  example: []
  syntax:
    content: public bool ReadOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ReadOnly As Boolean
  overload: Terminal.Gui.TextField.ReadOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.Changed
  commentId: E:Terminal.Gui.TextField.Changed
  id: Changed
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: Changed
  nameWithType: TextField.Changed
  fullName: Terminal.Gui.TextField.Changed
  type: Event
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Changed
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 41
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nChanged event, raised when the text has clicked.\n"
  remarks: "\nClient code can hook up to this event, it is\nraised when the text in the entry changes.\n"
  example: []
  syntax:
    content: public event EventHandler<ustring> Changed
    return:
      type: System.EventHandler{NStack.ustring}
    content.vb: Public Event Changed As EventHandler(Of ustring)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.#ctor(System.String)
  commentId: M:Terminal.Gui.TextField.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: TextField(String)
  nameWithType: TextField.TextField(String)
  fullName: Terminal.Gui.TextField.TextField(System.String)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 47
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nPublic constructor that creates a text field, with layout controlled with X, Y, Width and Height.\n"
  example: []
  syntax:
    content: public TextField(string text)
    parameters:
    - id: text
      type: System.String
      description: Initial text contents.
    content.vb: Public Sub New(text As String)
  overload: Terminal.Gui.TextField.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.#ctor(NStack.ustring)
  commentId: M:Terminal.Gui.TextField.#ctor(NStack.ustring)
  id: '#ctor(NStack.ustring)'
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: TextField(ustring)
  nameWithType: TextField.TextField(ustring)
  fullName: Terminal.Gui.TextField.TextField(NStack.ustring)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 56
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nPublic constructor that creates a text field, with layout controlled with X, Y, Width and Height.\n"
  example: []
  syntax:
    content: public TextField(ustring text)
    parameters:
    - id: text
      type: NStack.ustring
      description: Initial text contents.
    content.vb: Public Sub New(text As ustring)
  overload: Terminal.Gui.TextField.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.#ctor(System.Int32,System.Int32,System.Int32,NStack.ustring)
  commentId: M:Terminal.Gui.TextField.#ctor(System.Int32,System.Int32,System.Int32,NStack.ustring)
  id: '#ctor(System.Int32,System.Int32,System.Int32,NStack.ustring)'
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: TextField(Int32, Int32, Int32, ustring)
  nameWithType: TextField.TextField(Int32, Int32, Int32, ustring)
  fullName: Terminal.Gui.TextField.TextField(System.Int32, System.Int32, System.Int32, NStack.ustring)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 68
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nPublic constructor that creates a text field at an absolute position and size.\n"
  example: []
  syntax:
    content: public TextField(int x, int y, int w, ustring text)
    parameters:
    - id: x
      type: System.Int32
      description: The x coordinate.
    - id: y
      type: System.Int32
      description: The y coordinate.
    - id: w
      type: System.Int32
      description: The width.
    - id: text
      type: NStack.ustring
      description: Initial text contents.
    content.vb: Public Sub New(x As Integer, y As Integer, w As Integer, text As ustring)
  overload: Terminal.Gui.TextField.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.OnLeave
  commentId: M:Terminal.Gui.TextField.OnLeave
  id: OnLeave
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: OnLeave()
  nameWithType: TextField.OnLeave()
  fullName: Terminal.Gui.TextField.OnLeave()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: OnLeave
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 87
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override bool OnLeave()
    return:
      type: System.Boolean
    content.vb: Public Overrides Function OnLeave As Boolean
  overridden: Terminal.Gui.View.OnLeave
  overload: Terminal.Gui.TextField.OnLeave*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextField.Frame
  commentId: P:Terminal.Gui.TextField.Frame
  id: Frame
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: Frame
  nameWithType: TextField.Frame
  fullName: Terminal.Gui.TextField.Frame
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Frame
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 98
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override Rect Frame { get; set; }
    parameters: []
    return:
      type: Terminal.Gui.Rect
    content.vb: Public Overrides Property Frame As Rect
  overridden: Terminal.Gui.View.Frame
  overload: Terminal.Gui.TextField.Frame*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextField.Text
  commentId: P:Terminal.Gui.TextField.Text
  id: Text
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: TextField.Text
  fullName: Terminal.Gui.TextField.Text
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Text
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 117
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nSets or gets the text held by the view.\n"
  remarks: "\n"
  example: []
  syntax:
    content: public ustring Text { get; set; }
    parameters: []
    return:
      type: NStack.ustring
    content.vb: Public Property Text As ustring
  overload: Terminal.Gui.TextField.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.Secret
  commentId: P:Terminal.Gui.TextField.Secret
  id: Secret
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: Secret
  nameWithType: TextField.Secret
  fullName: Terminal.Gui.TextField.Secret
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Secret
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 154
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nSets the secret property.\n"
  remarks: "\nThis makes the text entry suitable for entering passwords.\n"
  example: []
  syntax:
    content: public bool Secret { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Secret As Boolean
  overload: Terminal.Gui.TextField.Secret*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.CursorPosition
  commentId: P:Terminal.Gui.TextField.CursorPosition
  id: CursorPosition
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: CursorPosition
  nameWithType: TextField.CursorPosition
  fullName: Terminal.Gui.TextField.CursorPosition
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: CursorPosition
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 159
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nSets or gets the current cursor position.\n"
  example: []
  syntax:
    content: public int CursorPosition { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CursorPosition As Integer
  overload: Terminal.Gui.TextField.CursorPosition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.PositionCursor
  commentId: M:Terminal.Gui.TextField.PositionCursor
  id: PositionCursor
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: PositionCursor()
  nameWithType: TextField.PositionCursor()
  fullName: Terminal.Gui.TextField.PositionCursor()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: PositionCursor
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 171
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nSets the cursor position.\n"
  example: []
  syntax:
    content: public override void PositionCursor()
    content.vb: Public Overrides Sub PositionCursor
  overridden: Terminal.Gui.View.PositionCursor
  overload: Terminal.Gui.TextField.PositionCursor*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextField.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.TextField.Redraw(Terminal.Gui.Rect)
  id: Redraw(Terminal.Gui.Rect)
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: Redraw(Rect)
  nameWithType: TextField.Redraw(Rect)
  fullName: Terminal.Gui.TextField.Redraw(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Redraw
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 184
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override void Redraw(Rect region)
    parameters:
    - id: region
      type: Terminal.Gui.Rect
    content.vb: Public Overrides Sub Redraw(region As Rect)
  overridden: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  overload: Terminal.Gui.TextField.Redraw*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextField.CanFocus
  commentId: P:Terminal.Gui.TextField.CanFocus
  id: CanFocus
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: CanFocus
  nameWithType: TextField.CanFocus
  fullName: Terminal.Gui.TextField.CanFocus
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: CanFocus
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 256
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override bool CanFocus { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides Property CanFocus As Boolean
  overridden: Terminal.Gui.Responder.CanFocus
  overload: Terminal.Gui.TextField.CanFocus*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextField.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.TextField.ProcessKey(Terminal.Gui.KeyEvent)
  id: ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: ProcessKey(KeyEvent)
  nameWithType: TextField.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.TextField.ProcessKey(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ProcessKey
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 285
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nProcesses key presses for the <xref href=\"Terminal.Gui.TextField\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nThe <xref href=\"Terminal.Gui.TextField\" data-throw-if-not-resolved=\"false\"></xref> control responds to the following keys:\n<table><thead><tr><th>Keys</th><th>Function</th></tr></thead><tbody><tr><td><xref href=\"Terminal.Gui.Key.Delete\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"Terminal.Gui.Key.Backspace\" data-throw-if-not-resolved=\"false\"></xref></td><td>Deletes the character before cursor.</td></tr></tbody></table>\n"
  example: []
  syntax:
    content: public override bool ProcessKey(KeyEvent kb)
    parameters:
    - id: kb
      type: Terminal.Gui.KeyEvent
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function ProcessKey(kb As KeyEvent) As Boolean
  overridden: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  overload: Terminal.Gui.TextField.ProcessKey*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextField.SelectedStart
  commentId: P:Terminal.Gui.TextField.SelectedStart
  id: SelectedStart
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: SelectedStart
  nameWithType: TextField.SelectedStart
  fullName: Terminal.Gui.TextField.SelectedStart
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: SelectedStart
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 614
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nStart position of the selected text.\n"
  example: []
  syntax:
    content: public int SelectedStart { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SelectedStart As Integer
  overload: Terminal.Gui.TextField.SelectedStart*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.SelectedLength
  commentId: P:Terminal.Gui.TextField.SelectedLength
  id: SelectedLength
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: SelectedLength
  nameWithType: TextField.SelectedLength
  fullName: Terminal.Gui.TextField.SelectedLength
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: SelectedLength
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 619
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nLength of the selected text.\n"
  example: []
  syntax:
    content: public int SelectedLength { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SelectedLength As Integer
  overload: Terminal.Gui.TextField.SelectedLength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.SelectedText
  commentId: P:Terminal.Gui.TextField.SelectedText
  id: SelectedText
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: SelectedText
  nameWithType: TextField.SelectedText
  fullName: Terminal.Gui.TextField.SelectedText
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: SelectedText
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 624
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nThe selected text.\n"
  example: []
  syntax:
    content: public ustring SelectedText { get; set; }
    parameters: []
    return:
      type: NStack.ustring
    content.vb: Public Property SelectedText As ustring
  overload: Terminal.Gui.TextField.SelectedText*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.TextField.MouseEvent(Terminal.Gui.MouseEvent)
  id: MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: MouseEvent(MouseEvent)
  nameWithType: TextField.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.TextField.MouseEvent(Terminal.Gui.MouseEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: MouseEvent
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 630
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override bool MouseEvent(MouseEvent ev)
    parameters:
    - id: ev
      type: Terminal.Gui.MouseEvent
    return:
      type: System.Boolean
    content.vb: Public Overrides Function MouseEvent(ev As MouseEvent) As Boolean
  overridden: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  overload: Terminal.Gui.TextField.MouseEvent*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextField.ClearAllSelection
  commentId: M:Terminal.Gui.TextField.ClearAllSelection
  id: ClearAllSelection
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: ClearAllSelection()
  nameWithType: TextField.ClearAllSelection()
  fullName: Terminal.Gui.TextField.ClearAllSelection()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: ClearAllSelection
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 714
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nClear the selected text.\n"
  example: []
  syntax:
    content: public void ClearAllSelection()
    content.vb: Public Sub ClearAllSelection
  overload: Terminal.Gui.TextField.ClearAllSelection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextField.Copy
  commentId: M:Terminal.Gui.TextField.Copy
  id: Copy
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: TextField.Copy()
  fullName: Terminal.Gui.TextField.Copy()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Copy
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 738
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCopy the selected text to the clipboard.\n"
  example: []
  syntax:
    content: public virtual void Copy()
    content.vb: Public Overridable Sub Copy
  overload: Terminal.Gui.TextField.Copy*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Terminal.Gui.TextField.Cut
  commentId: M:Terminal.Gui.TextField.Cut
  id: Cut
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: Cut()
  nameWithType: TextField.Cut()
  fullName: Terminal.Gui.TextField.Cut()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Cut
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 751
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCut the selected text to the clipboard.\n"
  example: []
  syntax:
    content: public virtual void Cut()
    content.vb: Public Overridable Sub Cut
  overload: Terminal.Gui.TextField.Cut*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: Terminal.Gui.TextField.Paste
  commentId: M:Terminal.Gui.TextField.Paste
  id: Paste
  parent: Terminal.Gui.TextField
  langs:
  - csharp
  - vb
  name: Paste()
  nameWithType: TextField.Paste()
  fullName: Terminal.Gui.TextField.Paste()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextField.cs
      branch: docs_tweaks
      repo: tig:tig/gui.cs.git
    id: Paste
    path: ../Terminal.Gui/Views/TextField.cs
    startLine: 774
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nPaste the selected text from the clipboard.\n"
  example: []
  syntax:
    content: public virtual void Paste()
    content.vb: Public Overridable Sub Paste
  overload: Terminal.Gui.TextField.Paste*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: Terminal.Gui.TextField
  commentId: T:Terminal.Gui.TextField
  parent: Terminal.Gui
  name: TextField
  nameWithType: TextField
  fullName: Terminal.Gui.TextField
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Terminal.Gui.Responder
  commentId: T:Terminal.Gui.Responder
  parent: Terminal.Gui
  name: Responder
  nameWithType: Responder
  fullName: Terminal.Gui.Responder
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Terminal.Gui.View.Enter
  commentId: E:Terminal.Gui.View.Enter
  parent: Terminal.Gui.View
  name: Enter
  nameWithType: View.Enter
  fullName: Terminal.Gui.View.Enter
- uid: Terminal.Gui.View.Leave
  commentId: E:Terminal.Gui.View.Leave
  parent: Terminal.Gui.View
  name: Leave
  nameWithType: View.Leave
  fullName: Terminal.Gui.View.Leave
- uid: Terminal.Gui.View.MouseEnter
  commentId: E:Terminal.Gui.View.MouseEnter
  parent: Terminal.Gui.View
  name: MouseEnter
  nameWithType: View.MouseEnter
  fullName: Terminal.Gui.View.MouseEnter
- uid: Terminal.Gui.View.MouseLeave
  commentId: E:Terminal.Gui.View.MouseLeave
  parent: Terminal.Gui.View
  name: MouseLeave
  nameWithType: View.MouseLeave
  fullName: Terminal.Gui.View.MouseLeave
- uid: Terminal.Gui.View.Driver
  commentId: P:Terminal.Gui.View.Driver
  parent: Terminal.Gui.View
  name: Driver
  nameWithType: View.Driver
  fullName: Terminal.Gui.View.Driver
- uid: Terminal.Gui.View.Subviews
  commentId: P:Terminal.Gui.View.Subviews
  parent: Terminal.Gui.View
  name: Subviews
  nameWithType: View.Subviews
  fullName: Terminal.Gui.View.Subviews
- uid: Terminal.Gui.View.Id
  commentId: P:Terminal.Gui.View.Id
  parent: Terminal.Gui.View
  name: Id
  nameWithType: View.Id
  fullName: Terminal.Gui.View.Id
- uid: Terminal.Gui.View.IsCurrentTop
  commentId: P:Terminal.Gui.View.IsCurrentTop
  parent: Terminal.Gui.View
  name: IsCurrentTop
  nameWithType: View.IsCurrentTop
  fullName: Terminal.Gui.View.IsCurrentTop
- uid: Terminal.Gui.View.WantMousePositionReports
  commentId: P:Terminal.Gui.View.WantMousePositionReports
  parent: Terminal.Gui.View
  name: WantMousePositionReports
  nameWithType: View.WantMousePositionReports
  fullName: Terminal.Gui.View.WantMousePositionReports
- uid: Terminal.Gui.View.WantContinuousButtonPressed
  commentId: P:Terminal.Gui.View.WantContinuousButtonPressed
  parent: Terminal.Gui.View
  name: WantContinuousButtonPressed
  nameWithType: View.WantContinuousButtonPressed
  fullName: Terminal.Gui.View.WantContinuousButtonPressed
- uid: Terminal.Gui.View.GetEnumerator
  commentId: M:Terminal.Gui.View.GetEnumerator
  parent: Terminal.Gui.View
  name: GetEnumerator()
  nameWithType: View.GetEnumerator()
  fullName: Terminal.Gui.View.GetEnumerator()
  spec.csharp:
  - uid: Terminal.Gui.View.GetEnumerator
    name: GetEnumerator
    nameWithType: View.GetEnumerator
    fullName: Terminal.Gui.View.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.GetEnumerator
    name: GetEnumerator
    nameWithType: View.GetEnumerator
    fullName: Terminal.Gui.View.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.LayoutStyle
  commentId: P:Terminal.Gui.View.LayoutStyle
  parent: Terminal.Gui.View
  name: LayoutStyle
  nameWithType: View.LayoutStyle
  fullName: Terminal.Gui.View.LayoutStyle
- uid: Terminal.Gui.View.Bounds
  commentId: P:Terminal.Gui.View.Bounds
  parent: Terminal.Gui.View
  name: Bounds
  nameWithType: View.Bounds
  fullName: Terminal.Gui.View.Bounds
- uid: Terminal.Gui.View.X
  commentId: P:Terminal.Gui.View.X
  parent: Terminal.Gui.View
  name: X
  nameWithType: View.X
  fullName: Terminal.Gui.View.X
- uid: Terminal.Gui.View.Y
  commentId: P:Terminal.Gui.View.Y
  parent: Terminal.Gui.View
  name: Y
  nameWithType: View.Y
  fullName: Terminal.Gui.View.Y
- uid: Terminal.Gui.View.Width
  commentId: P:Terminal.Gui.View.Width
  parent: Terminal.Gui.View
  name: Width
  nameWithType: View.Width
  fullName: Terminal.Gui.View.Width
- uid: Terminal.Gui.View.Height
  commentId: P:Terminal.Gui.View.Height
  parent: Terminal.Gui.View
  name: Height
  nameWithType: View.Height
  fullName: Terminal.Gui.View.Height
- uid: Terminal.Gui.View.SuperView
  commentId: P:Terminal.Gui.View.SuperView
  parent: Terminal.Gui.View
  name: SuperView
  nameWithType: View.SuperView
  fullName: Terminal.Gui.View.SuperView
- uid: Terminal.Gui.View.SetNeedsDisplay
  commentId: M:Terminal.Gui.View.SetNeedsDisplay
  parent: Terminal.Gui.View
  name: SetNeedsDisplay()
  nameWithType: View.SetNeedsDisplay()
  fullName: Terminal.Gui.View.SetNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: SetNeedsDisplay(Rect)
  nameWithType: View.SetNeedsDisplay(Rect)
  fullName: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ChildNeedsDisplay
  commentId: M:Terminal.Gui.View.ChildNeedsDisplay
  parent: Terminal.Gui.View
  name: ChildNeedsDisplay()
  nameWithType: View.ChildNeedsDisplay()
  fullName: Terminal.Gui.View.ChildNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.ChildNeedsDisplay
    name: ChildNeedsDisplay
    nameWithType: View.ChildNeedsDisplay
    fullName: Terminal.Gui.View.ChildNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ChildNeedsDisplay
    name: ChildNeedsDisplay
    nameWithType: View.ChildNeedsDisplay
    fullName: Terminal.Gui.View.ChildNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Add(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: Add(View)
  nameWithType: View.Add(View)
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View[])
  parent: Terminal.Gui.View
  name: Add(View[])
  nameWithType: View.Add(View[])
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View[])
  nameWithType.vb: View.Add(View())
  fullName.vb: Terminal.Gui.View.Add(Terminal.Gui.View())
  name.vb: Add(View())
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.RemoveAll
  commentId: M:Terminal.Gui.View.RemoveAll
  parent: Terminal.Gui.View
  name: RemoveAll()
  nameWithType: View.RemoveAll()
  fullName: Terminal.Gui.View.RemoveAll()
  spec.csharp:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    nameWithType: View.RemoveAll
    fullName: Terminal.Gui.View.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    nameWithType: View.RemoveAll
    fullName: Terminal.Gui.View.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Remove(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: Remove(View)
  nameWithType: View.Remove(View)
  fullName: Terminal.Gui.View.Remove(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    nameWithType: View.Remove
    fullName: Terminal.Gui.View.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    nameWithType: View.Remove
    fullName: Terminal.Gui.View.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: BringSubviewToFront(View)
  nameWithType: View.BringSubviewToFront(View)
  fullName: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    nameWithType: View.BringSubviewToFront
    fullName: Terminal.Gui.View.BringSubviewToFront
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    nameWithType: View.BringSubviewToFront
    fullName: Terminal.Gui.View.BringSubviewToFront
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SendSubviewToBack(View)
  nameWithType: View.SendSubviewToBack(View)
  fullName: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    nameWithType: View.SendSubviewToBack
    fullName: Terminal.Gui.View.SendSubviewToBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    nameWithType: View.SendSubviewToBack
    fullName: Terminal.Gui.View.SendSubviewToBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SendSubviewBackwards(View)
  nameWithType: View.SendSubviewBackwards(View)
  fullName: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
    name: SendSubviewBackwards
    nameWithType: View.SendSubviewBackwards
    fullName: Terminal.Gui.View.SendSubviewBackwards
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
    name: SendSubviewBackwards
    nameWithType: View.SendSubviewBackwards
    fullName: Terminal.Gui.View.SendSubviewBackwards
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: BringSubviewForward(View)
  nameWithType: View.BringSubviewForward(View)
  fullName: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
    name: BringSubviewForward
    nameWithType: View.BringSubviewForward
    fullName: Terminal.Gui.View.BringSubviewForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
    name: BringSubviewForward
    nameWithType: View.BringSubviewForward
    fullName: Terminal.Gui.View.BringSubviewForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Clear
  commentId: M:Terminal.Gui.View.Clear
  parent: Terminal.Gui.View
  name: Clear()
  nameWithType: View.Clear()
  fullName: Terminal.Gui.View.Clear()
  spec.csharp:
  - uid: Terminal.Gui.View.Clear
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Clear
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: Clear(Rect)
  nameWithType: View.Clear(Rect)
  fullName: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  name: ScreenToView(Int32, Int32)
  nameWithType: View.ScreenToView(Int32, Int32)
  fullName: Terminal.Gui.View.ScreenToView(System.Int32, System.Int32)
  spec.csharp:
  - uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
    name: ScreenToView
    nameWithType: View.ScreenToView
    fullName: Terminal.Gui.View.ScreenToView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
    name: ScreenToView
    nameWithType: View.ScreenToView
    fullName: Terminal.Gui.View.ScreenToView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ClipToBounds
  commentId: M:Terminal.Gui.View.ClipToBounds
  parent: Terminal.Gui.View
  name: ClipToBounds()
  nameWithType: View.ClipToBounds()
  fullName: Terminal.Gui.View.ClipToBounds()
  spec.csharp:
  - uid: Terminal.Gui.View.ClipToBounds
    name: ClipToBounds
    nameWithType: View.ClipToBounds
    fullName: Terminal.Gui.View.ClipToBounds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ClipToBounds
    name: ClipToBounds
    nameWithType: View.ClipToBounds
    fullName: Terminal.Gui.View.ClipToBounds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: SetClip(Rect)
  nameWithType: View.SetClip(Rect)
  fullName: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
    name: SetClip
    nameWithType: View.SetClip
    fullName: Terminal.Gui.View.SetClip
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
    name: SetClip
    nameWithType: View.SetClip
    fullName: Terminal.Gui.View.SetClip
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  commentId: M:Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawFrame(Rect, Int32, Boolean)
  nameWithType: View.DrawFrame(Rect, Int32, Boolean)
  fullName: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect, System.Int32, System.Boolean)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
    name: DrawFrame
    nameWithType: View.DrawFrame
    fullName: Terminal.Gui.View.DrawFrame
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
    name: DrawFrame
    nameWithType: View.DrawFrame
    fullName: Terminal.Gui.View.DrawFrame
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  commentId: M:Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawHotString(ustring, Attribute, Attribute)
  nameWithType: View.DrawHotString(ustring, Attribute, Attribute)
  fullName: Terminal.Gui.View.DrawHotString(NStack.ustring, Terminal.Gui.Attribute, Terminal.Gui.Attribute)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  commentId: M:Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawHotString(ustring, Boolean, ColorScheme)
  nameWithType: View.DrawHotString(ustring, Boolean, ColorScheme)
  fullName: Terminal.Gui.View.DrawHotString(NStack.ustring, System.Boolean, Terminal.Gui.ColorScheme)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: Terminal.Gui.ColorScheme
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: Terminal.Gui.ColorScheme
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.Move(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  name: Move(Int32, Int32)
  nameWithType: View.Move(Int32, Int32)
  fullName: Terminal.Gui.View.Move(System.Int32, System.Int32)
  spec.csharp:
  - uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: View.Move
    fullName: Terminal.Gui.View.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: View.Move
    fullName: Terminal.Gui.View.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.HasFocus
  commentId: P:Terminal.Gui.View.HasFocus
  parent: Terminal.Gui.View
  name: HasFocus
  nameWithType: View.HasFocus
  fullName: Terminal.Gui.View.HasFocus
- uid: Terminal.Gui.View.OnEnter
  commentId: M:Terminal.Gui.View.OnEnter
  parent: Terminal.Gui.View
  name: OnEnter()
  nameWithType: View.OnEnter()
  fullName: Terminal.Gui.View.OnEnter()
  spec.csharp:
  - uid: Terminal.Gui.View.OnEnter
    name: OnEnter
    nameWithType: View.OnEnter
    fullName: Terminal.Gui.View.OnEnter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnEnter
    name: OnEnter
    nameWithType: View.OnEnter
    fullName: Terminal.Gui.View.OnEnter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Focused
  commentId: P:Terminal.Gui.View.Focused
  parent: Terminal.Gui.View
  name: Focused
  nameWithType: View.Focused
  fullName: Terminal.Gui.View.Focused
- uid: Terminal.Gui.View.MostFocused
  commentId: P:Terminal.Gui.View.MostFocused
  parent: Terminal.Gui.View
  name: MostFocused
  nameWithType: View.MostFocused
  fullName: Terminal.Gui.View.MostFocused
- uid: Terminal.Gui.View.ColorScheme
  commentId: P:Terminal.Gui.View.ColorScheme
  parent: Terminal.Gui.View
  name: ColorScheme
  nameWithType: View.ColorScheme
  fullName: Terminal.Gui.View.ColorScheme
- uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  commentId: M:Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  parent: Terminal.Gui.View
  isExternal: true
  name: AddRune(Int32, Int32, Rune)
  nameWithType: View.AddRune(Int32, Int32, Rune)
  fullName: Terminal.Gui.View.AddRune(System.Int32, System.Int32, System.Rune)
  spec.csharp:
  - uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
    name: AddRune
    nameWithType: View.AddRune
    fullName: Terminal.Gui.View.AddRune
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Rune
    name: Rune
    nameWithType: Rune
    fullName: System.Rune
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
    name: AddRune
    nameWithType: View.AddRune
    fullName: Terminal.Gui.View.AddRune
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Rune
    name: Rune
    nameWithType: Rune
    fullName: System.Rune
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ClearNeedsDisplay
  commentId: M:Terminal.Gui.View.ClearNeedsDisplay
  parent: Terminal.Gui.View
  name: ClearNeedsDisplay()
  nameWithType: View.ClearNeedsDisplay()
  fullName: Terminal.Gui.View.ClearNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.ClearNeedsDisplay
    name: ClearNeedsDisplay
    nameWithType: View.ClearNeedsDisplay
    fullName: Terminal.Gui.View.ClearNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ClearNeedsDisplay
    name: ClearNeedsDisplay
    nameWithType: View.ClearNeedsDisplay
    fullName: Terminal.Gui.View.ClearNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SetFocus(View)
  nameWithType: View.SetFocus(View)
  fullName: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
    name: SetFocus
    nameWithType: View.SetFocus
    fullName: Terminal.Gui.View.SetFocus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
    name: SetFocus
    nameWithType: View.SetFocus
    fullName: Terminal.Gui.View.SetFocus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyPress
  commentId: E:Terminal.Gui.View.KeyPress
  parent: Terminal.Gui.View
  name: KeyPress
  nameWithType: View.KeyPress
  fullName: Terminal.Gui.View.KeyPress
- uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessHotKey(KeyEvent)
  nameWithType: View.ProcessHotKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    nameWithType: View.ProcessHotKey
    fullName: Terminal.Gui.View.ProcessHotKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    nameWithType: View.ProcessHotKey
    fullName: Terminal.Gui.View.ProcessHotKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessColdKey(KeyEvent)
  nameWithType: View.ProcessColdKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    nameWithType: View.ProcessColdKey
    fullName: Terminal.Gui.View.ProcessColdKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    nameWithType: View.ProcessColdKey
    fullName: Terminal.Gui.View.ProcessColdKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyDown
  commentId: E:Terminal.Gui.View.KeyDown
  parent: Terminal.Gui.View
  name: KeyDown
  nameWithType: View.KeyDown
  fullName: Terminal.Gui.View.KeyDown
- uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: OnKeyDown(KeyEvent)
  nameWithType: View.OnKeyDown(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    nameWithType: View.OnKeyDown
    fullName: Terminal.Gui.View.OnKeyDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    nameWithType: View.OnKeyDown
    fullName: Terminal.Gui.View.OnKeyDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyUp
  commentId: E:Terminal.Gui.View.KeyUp
  parent: Terminal.Gui.View
  name: KeyUp
  nameWithType: View.KeyUp
  fullName: Terminal.Gui.View.KeyUp
- uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: OnKeyUp(KeyEvent)
  nameWithType: View.OnKeyUp(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    nameWithType: View.OnKeyUp
    fullName: Terminal.Gui.View.OnKeyUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    nameWithType: View.OnKeyUp
    fullName: Terminal.Gui.View.OnKeyUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.EnsureFocus
  commentId: M:Terminal.Gui.View.EnsureFocus
  parent: Terminal.Gui.View
  name: EnsureFocus()
  nameWithType: View.EnsureFocus()
  fullName: Terminal.Gui.View.EnsureFocus()
  spec.csharp:
  - uid: Terminal.Gui.View.EnsureFocus
    name: EnsureFocus
    nameWithType: View.EnsureFocus
    fullName: Terminal.Gui.View.EnsureFocus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.EnsureFocus
    name: EnsureFocus
    nameWithType: View.EnsureFocus
    fullName: Terminal.Gui.View.EnsureFocus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusFirst
  commentId: M:Terminal.Gui.View.FocusFirst
  parent: Terminal.Gui.View
  name: FocusFirst()
  nameWithType: View.FocusFirst()
  fullName: Terminal.Gui.View.FocusFirst()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusFirst
    name: FocusFirst
    nameWithType: View.FocusFirst
    fullName: Terminal.Gui.View.FocusFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusFirst
    name: FocusFirst
    nameWithType: View.FocusFirst
    fullName: Terminal.Gui.View.FocusFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusLast
  commentId: M:Terminal.Gui.View.FocusLast
  parent: Terminal.Gui.View
  name: FocusLast()
  nameWithType: View.FocusLast()
  fullName: Terminal.Gui.View.FocusLast()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusLast
    name: FocusLast
    nameWithType: View.FocusLast
    fullName: Terminal.Gui.View.FocusLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusLast
    name: FocusLast
    nameWithType: View.FocusLast
    fullName: Terminal.Gui.View.FocusLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusPrev
  commentId: M:Terminal.Gui.View.FocusPrev
  parent: Terminal.Gui.View
  name: FocusPrev()
  nameWithType: View.FocusPrev()
  fullName: Terminal.Gui.View.FocusPrev()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusPrev
    name: FocusPrev
    nameWithType: View.FocusPrev
    fullName: Terminal.Gui.View.FocusPrev
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusPrev
    name: FocusPrev
    nameWithType: View.FocusPrev
    fullName: Terminal.Gui.View.FocusPrev
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusNext
  commentId: M:Terminal.Gui.View.FocusNext
  parent: Terminal.Gui.View
  name: FocusNext()
  nameWithType: View.FocusNext()
  fullName: Terminal.Gui.View.FocusNext()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusNext
    name: FocusNext
    nameWithType: View.FocusNext
    fullName: Terminal.Gui.View.FocusNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusNext
    name: FocusNext
    nameWithType: View.FocusNext
    fullName: Terminal.Gui.View.FocusNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.LayoutSubviews
  commentId: M:Terminal.Gui.View.LayoutSubviews
  parent: Terminal.Gui.View
  name: LayoutSubviews()
  nameWithType: View.LayoutSubviews()
  fullName: Terminal.Gui.View.LayoutSubviews()
  spec.csharp:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    nameWithType: View.LayoutSubviews
    fullName: Terminal.Gui.View.LayoutSubviews
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    nameWithType: View.LayoutSubviews
    fullName: Terminal.Gui.View.LayoutSubviews
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ToString
  commentId: M:Terminal.Gui.View.ToString
  parent: Terminal.Gui.View
  name: ToString()
  nameWithType: View.ToString()
  fullName: Terminal.Gui.View.ToString()
  spec.csharp:
  - uid: Terminal.Gui.View.ToString
    name: ToString
    nameWithType: View.ToString
    fullName: Terminal.Gui.View.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ToString
    name: ToString
    nameWithType: View.ToString
    fullName: Terminal.Gui.View.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  name: OnMouseEnter(MouseEvent)
  nameWithType: View.OnMouseEnter(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    nameWithType: View.OnMouseEnter
    fullName: Terminal.Gui.View.OnMouseEnter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    nameWithType: View.OnMouseEnter
    fullName: Terminal.Gui.View.OnMouseEnter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  name: OnMouseLeave(MouseEvent)
  nameWithType: View.OnMouseLeave(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    nameWithType: View.OnMouseLeave
    fullName: Terminal.Gui.View.OnMouseLeave
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    nameWithType: View.OnMouseLeave
    fullName: Terminal.Gui.View.OnMouseLeave
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Terminal.Gui.TextField.Used*
  commentId: Overload:Terminal.Gui.TextField.Used
  name: Used
  nameWithType: TextField.Used
  fullName: Terminal.Gui.TextField.Used
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Terminal.Gui.TextField.ReadOnly*
  commentId: Overload:Terminal.Gui.TextField.ReadOnly
  name: ReadOnly
  nameWithType: TextField.ReadOnly
  fullName: Terminal.Gui.TextField.ReadOnly
- uid: System.EventHandler{NStack.ustring}
  commentId: T:System.EventHandler{NStack.ustring}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<ustring>
  nameWithType: EventHandler<ustring>
  fullName: System.EventHandler<NStack.ustring>
  nameWithType.vb: EventHandler(Of ustring)
  fullName.vb: System.EventHandler(Of NStack.ustring)
  name.vb: EventHandler(Of ustring)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.TextField.#ctor*
  commentId: Overload:Terminal.Gui.TextField.#ctor
  name: TextField
  nameWithType: TextField.TextField
  fullName: Terminal.Gui.TextField.TextField
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NStack.ustring
  commentId: T:NStack.ustring
  parent: NStack
  isExternal: true
  name: ustring
  nameWithType: ustring
  fullName: NStack.ustring
- uid: NStack
  commentId: N:NStack
  isExternal: true
  name: NStack
  nameWithType: NStack
  fullName: NStack
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Terminal.Gui.TextField.OnLeave
  commentId: M:Terminal.Gui.TextField.OnLeave
  parent: Terminal.Gui.TextField
  name: OnLeave()
  nameWithType: TextField.OnLeave()
  fullName: Terminal.Gui.TextField.OnLeave()
  spec.csharp:
  - uid: Terminal.Gui.TextField.OnLeave
    name: OnLeave
    nameWithType: TextField.OnLeave
    fullName: Terminal.Gui.TextField.OnLeave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.TextField.OnLeave
    name: OnLeave
    nameWithType: TextField.OnLeave
    fullName: Terminal.Gui.TextField.OnLeave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnLeave
  commentId: M:Terminal.Gui.View.OnLeave
  parent: Terminal.Gui.View
  name: OnLeave()
  nameWithType: View.OnLeave()
  fullName: Terminal.Gui.View.OnLeave()
  spec.csharp:
  - uid: Terminal.Gui.View.OnLeave
    name: OnLeave
    nameWithType: View.OnLeave
    fullName: Terminal.Gui.View.OnLeave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnLeave
    name: OnLeave
    nameWithType: View.OnLeave
    fullName: Terminal.Gui.View.OnLeave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.TextField.OnLeave*
  commentId: Overload:Terminal.Gui.TextField.OnLeave
  name: OnLeave
  nameWithType: TextField.OnLeave
  fullName: Terminal.Gui.TextField.OnLeave
- uid: Terminal.Gui.TextField.Frame
  commentId: P:Terminal.Gui.TextField.Frame
  parent: Terminal.Gui.TextField
  name: Frame
  nameWithType: TextField.Frame
  fullName: Terminal.Gui.TextField.Frame
- uid: Terminal.Gui.View.Frame
  commentId: P:Terminal.Gui.View.Frame
  parent: Terminal.Gui.View
  name: Frame
  nameWithType: View.Frame
  fullName: Terminal.Gui.View.Frame
- uid: Terminal.Gui.TextField.Frame*
  commentId: Overload:Terminal.Gui.TextField.Frame
  name: Frame
  nameWithType: TextField.Frame
  fullName: Terminal.Gui.TextField.Frame
- uid: Terminal.Gui.Rect
  commentId: T:Terminal.Gui.Rect
  parent: Terminal.Gui
  name: Rect
  nameWithType: Rect
  fullName: Terminal.Gui.Rect
- uid: Terminal.Gui.TextField.Text*
  commentId: Overload:Terminal.Gui.TextField.Text
  name: Text
  nameWithType: TextField.Text
  fullName: Terminal.Gui.TextField.Text
- uid: Terminal.Gui.TextField.Secret*
  commentId: Overload:Terminal.Gui.TextField.Secret
  name: Secret
  nameWithType: TextField.Secret
  fullName: Terminal.Gui.TextField.Secret
- uid: Terminal.Gui.TextField.CursorPosition*
  commentId: Overload:Terminal.Gui.TextField.CursorPosition
  name: CursorPosition
  nameWithType: TextField.CursorPosition
  fullName: Terminal.Gui.TextField.CursorPosition
- uid: Terminal.Gui.View.PositionCursor
  commentId: M:Terminal.Gui.View.PositionCursor
  parent: Terminal.Gui.View
  name: PositionCursor()
  nameWithType: View.PositionCursor()
  fullName: Terminal.Gui.View.PositionCursor()
  spec.csharp:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    nameWithType: View.PositionCursor
    fullName: Terminal.Gui.View.PositionCursor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    nameWithType: View.PositionCursor
    fullName: Terminal.Gui.View.PositionCursor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.TextField.PositionCursor*
  commentId: Overload:Terminal.Gui.TextField.PositionCursor
  name: PositionCursor
  nameWithType: TextField.PositionCursor
  fullName: Terminal.Gui.TextField.PositionCursor
- uid: Terminal.Gui.TextField.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.TextField.Redraw(Terminal.Gui.Rect)
  parent: Terminal.Gui.TextField
  name: Redraw(Rect)
  nameWithType: TextField.Redraw(Rect)
  fullName: Terminal.Gui.TextField.Redraw(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.TextField.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: TextField.Redraw
    fullName: Terminal.Gui.TextField.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.TextField.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: TextField.Redraw
    fullName: Terminal.Gui.TextField.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: Redraw(Rect)
  nameWithType: View.Redraw(Rect)
  fullName: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: View.Redraw
    fullName: Terminal.Gui.View.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: View.Redraw
    fullName: Terminal.Gui.View.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.TextField.Redraw*
  commentId: Overload:Terminal.Gui.TextField.Redraw
  name: Redraw
  nameWithType: TextField.Redraw
  fullName: Terminal.Gui.TextField.Redraw
- uid: Terminal.Gui.TextField.CanFocus
  commentId: P:Terminal.Gui.TextField.CanFocus
  parent: Terminal.Gui.TextField
  name: CanFocus
  nameWithType: TextField.CanFocus
  fullName: Terminal.Gui.TextField.CanFocus
- uid: Terminal.Gui.Responder.CanFocus
  commentId: P:Terminal.Gui.Responder.CanFocus
  parent: Terminal.Gui.Responder
  name: CanFocus
  nameWithType: Responder.CanFocus
  fullName: Terminal.Gui.Responder.CanFocus
- uid: Terminal.Gui.TextField.CanFocus*
  commentId: Overload:Terminal.Gui.TextField.CanFocus
  name: CanFocus
  nameWithType: TextField.CanFocus
  fullName: Terminal.Gui.TextField.CanFocus
- uid: Terminal.Gui.Key.Delete
  commentId: F:Terminal.Gui.Key.Delete
  isExternal: true
- uid: Terminal.Gui.Key.Backspace
  commentId: F:Terminal.Gui.Key.Backspace
  isExternal: true
- uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessKey(KeyEvent)
  nameWithType: View.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    nameWithType: View.ProcessKey
    fullName: Terminal.Gui.View.ProcessKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    nameWithType: View.ProcessKey
    fullName: Terminal.Gui.View.ProcessKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.TextField.ProcessKey*
  commentId: Overload:Terminal.Gui.TextField.ProcessKey
  name: ProcessKey
  nameWithType: TextField.ProcessKey
  fullName: Terminal.Gui.TextField.ProcessKey
- uid: Terminal.Gui.KeyEvent
  commentId: T:Terminal.Gui.KeyEvent
  parent: Terminal.Gui
  name: KeyEvent
  nameWithType: KeyEvent
  fullName: Terminal.Gui.KeyEvent
- uid: Terminal.Gui.TextField.SelectedStart*
  commentId: Overload:Terminal.Gui.TextField.SelectedStart
  name: SelectedStart
  nameWithType: TextField.SelectedStart
  fullName: Terminal.Gui.TextField.SelectedStart
- uid: Terminal.Gui.TextField.SelectedLength*
  commentId: Overload:Terminal.Gui.TextField.SelectedLength
  name: SelectedLength
  nameWithType: TextField.SelectedLength
  fullName: Terminal.Gui.TextField.SelectedLength
- uid: Terminal.Gui.TextField.SelectedText*
  commentId: Overload:Terminal.Gui.TextField.SelectedText
  name: SelectedText
  nameWithType: TextField.SelectedText
  fullName: Terminal.Gui.TextField.SelectedText
- uid: Terminal.Gui.TextField.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.TextField.MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.TextField
  name: MouseEvent(MouseEvent)
  nameWithType: TextField.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.TextField.MouseEvent(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.TextField.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    nameWithType: TextField.MouseEvent
    fullName: Terminal.Gui.TextField.MouseEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.TextField.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    nameWithType: TextField.MouseEvent
    fullName: Terminal.Gui.TextField.MouseEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.Responder
  name: MouseEvent(MouseEvent)
  nameWithType: Responder.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    nameWithType: Responder.MouseEvent
    fullName: Terminal.Gui.Responder.MouseEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    nameWithType: Responder.MouseEvent
    fullName: Terminal.Gui.Responder.MouseEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.TextField.MouseEvent*
  commentId: Overload:Terminal.Gui.TextField.MouseEvent
  name: MouseEvent
  nameWithType: TextField.MouseEvent
  fullName: Terminal.Gui.TextField.MouseEvent
- uid: Terminal.Gui.MouseEvent
  commentId: T:Terminal.Gui.MouseEvent
  parent: Terminal.Gui
  name: MouseEvent
  nameWithType: MouseEvent
  fullName: Terminal.Gui.MouseEvent
- uid: Terminal.Gui.TextField.ClearAllSelection*
  commentId: Overload:Terminal.Gui.TextField.ClearAllSelection
  name: ClearAllSelection
  nameWithType: TextField.ClearAllSelection
  fullName: Terminal.Gui.TextField.ClearAllSelection
- uid: Terminal.Gui.TextField.Copy*
  commentId: Overload:Terminal.Gui.TextField.Copy
  name: Copy
  nameWithType: TextField.Copy
  fullName: Terminal.Gui.TextField.Copy
- uid: Terminal.Gui.TextField.Cut*
  commentId: Overload:Terminal.Gui.TextField.Cut
  name: Cut
  nameWithType: TextField.Cut
  fullName: Terminal.Gui.TextField.Cut
- uid: Terminal.Gui.TextField.Paste*
  commentId: Overload:Terminal.Gui.TextField.Paste
  name: Paste
  nameWithType: TextField.Paste
  fullName: Terminal.Gui.TextField.Paste
shouldSkipMarkup: true
