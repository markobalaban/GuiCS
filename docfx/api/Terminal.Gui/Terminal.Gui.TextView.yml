### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.TextView
  commentId: T:Terminal.Gui.TextView
  id: TextView
  parent: Terminal.Gui
  children:
  - Terminal.Gui.TextView.#ctor
  - Terminal.Gui.TextView.#ctor(Terminal.Gui.Rect)
  - Terminal.Gui.TextView.CanFocus
  - Terminal.Gui.TextView.CloseFile
  - Terminal.Gui.TextView.CurrentColumn
  - Terminal.Gui.TextView.CurrentRow
  - Terminal.Gui.TextView.LoadFile(System.String)
  - Terminal.Gui.TextView.LoadStream(System.IO.Stream)
  - Terminal.Gui.TextView.MouseEvent(Terminal.Gui.MouseEvent)
  - Terminal.Gui.TextView.PositionCursor
  - Terminal.Gui.TextView.ProcessKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.TextView.ReadOnly
  - Terminal.Gui.TextView.Redraw(Terminal.Gui.Rect)
  - Terminal.Gui.TextView.ScrollTo(System.Int32)
  - Terminal.Gui.TextView.Text
  - Terminal.Gui.TextView.TextChanged
  langs:
  - csharp
  - vb
  name: TextView
  nameWithType: TextView
  fullName: Terminal.Gui.TextView
  type: Class
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: TextView
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 274
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nMulti-line text editing <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>\n"
  remarks: "\n<p>\n<xref href=\"Terminal.Gui.TextView\" data-throw-if-not-resolved=\"false\"></xref> provides a multi-line text editor. Users interact\nwith it with the standard Emacs commands for movement or the arrow\nkeys. \n</p> \n<table><thead><tr><th>Shortcut</th><th>Action performed</th></tr></thead><tbody><tr><td>Left cursor, Control-b</td><td>\n       Moves the editing point left.\n</td></tr><tr><td>Right cursor, Control-f</td><td>\n  Moves the editing point right.\n</td></tr><tr><td>Alt-b</td><td>\n  Moves one word back.\n</td></tr><tr><td>Alt-f</td><td>\n  Moves one word forward.\n</td></tr><tr><td>Up cursor, Control-p</td><td>\n  Moves the editing point one line up.\n</td></tr><tr><td>Down cursor, Control-n</td><td>\n  Moves the editing point one line down\n</td></tr><tr><td>Home key, Control-a</td><td>\n  Moves the cursor to the beginning of the line.\n</td></tr><tr><td>End key, Control-e</td><td>\n  Moves the cursor to the end of the line.\n</td></tr><tr><td>Delete, Control-d</td><td>\n  Deletes the character in front of the cursor.\n</td></tr><tr><td>Backspace</td><td>\n  Deletes the character behind the cursor.\n</td></tr><tr><td>Control-k</td><td>\n  Deletes the text until the end of the line and replaces the kill buffer\n  with the deleted text.   You can paste this text in a different place by\n  using Control-y.\n</td></tr><tr><td>Control-y</td><td>\n   Pastes the content of the kill ring into the current position.\n</td></tr><tr><td>Alt-d</td><td>\n   Deletes the word above the cursor and adds it to the kill ring.  You \n   can paste the contents of the kill ring with Control-y.\n</td></tr><tr><td>Control-q</td><td>\n  Quotes the next input character, to prevent the normal processing of\n  key handling to take place.\n</td></tr></tbody></table>\n"
  example: []
  syntax:
    content: 'public class TextView : View, IEnumerable'
    content.vb: >-
      Public Class TextView

          Inherits View

          Implements IEnumerable
  inheritance:
  - System.Object
  - Terminal.Gui.Responder
  - Terminal.Gui.View
  implements:
  - System.Collections.IEnumerable
  inheritedMembers:
  - Terminal.Gui.View.Enter
  - Terminal.Gui.View.Leave
  - Terminal.Gui.View.MouseEnter
  - Terminal.Gui.View.MouseLeave
  - Terminal.Gui.View.Driver
  - Terminal.Gui.View.Subviews
  - Terminal.Gui.View.Id
  - Terminal.Gui.View.WantMousePositionReports
  - Terminal.Gui.View.WantContinuousButtonPressed
  - Terminal.Gui.View.Frame
  - Terminal.Gui.View.GetEnumerator
  - Terminal.Gui.View.LayoutStyle
  - Terminal.Gui.View.Bounds
  - Terminal.Gui.View.X
  - Terminal.Gui.View.Y
  - Terminal.Gui.View.Width
  - Terminal.Gui.View.Height
  - Terminal.Gui.View.SuperView
  - Terminal.Gui.View.SetNeedsDisplay
  - Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  - Terminal.Gui.View.ChildNeedsDisplay
  - Terminal.Gui.View.Add(Terminal.Gui.View)
  - Terminal.Gui.View.Add(Terminal.Gui.View[])
  - Terminal.Gui.View.RemoveAll
  - Terminal.Gui.View.Remove(Terminal.Gui.View)
  - Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  - Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  - Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  - Terminal.Gui.View.Clear
  - Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  - Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  - Terminal.Gui.View.ClipToBounds
  - Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  - Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  - Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  - Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  - Terminal.Gui.View.Move(System.Int32,System.Int32)
  - Terminal.Gui.View.HasFocus
  - Terminal.Gui.View.OnEnter
  - Terminal.Gui.View.OnLeave
  - Terminal.Gui.View.Focused
  - Terminal.Gui.View.MostFocused
  - Terminal.Gui.View.ColorScheme
  - Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  - Terminal.Gui.View.ClearNeedsDisplay
  - Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  - Terminal.Gui.View.KeyPress
  - Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.KeyDown
  - Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.KeyUp
  - Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  - Terminal.Gui.View.EnsureFocus
  - Terminal.Gui.View.FocusFirst
  - Terminal.Gui.View.FocusLast
  - Terminal.Gui.View.FocusPrev
  - Terminal.Gui.View.FocusNext
  - Terminal.Gui.View.LayoutSubviews
  - Terminal.Gui.View.ToString
  - Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  - Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Terminal.Gui.TextView.TextChanged
  commentId: E:Terminal.Gui.TextView.TextChanged
  id: TextChanged
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: TextChanged
  nameWithType: TextView.TextChanged
  fullName: Terminal.Gui.TextView.TextChanged
  type: Event
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: TextChanged
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 287
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nRaised when the <xref href=\"Terminal.Gui.TextView.Text\" data-throw-if-not-resolved=\"false\"></xref> of the <xref href=\"Terminal.Gui.TextView\" data-throw-if-not-resolved=\"false\"></xref> changes.\n"
  example: []
  syntax:
    content: public event EventHandler TextChanged
    return:
      type: System.EventHandler
    content.vb: Public Event TextChanged As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextView.#ctor(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.TextView.#ctor(Terminal.Gui.Rect)
  id: '#ctor(Terminal.Gui.Rect)'
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: TextView(Rect)
  nameWithType: TextView.TextView(Rect)
  fullName: Terminal.Gui.TextView.TextView(Terminal.Gui.Rect)
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 304
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitalizes a <xref href=\"Terminal.Gui.TextView\" data-throw-if-not-resolved=\"false\"></xref> on the specified area, with absolute position and size.\n"
  remarks: "\n"
  example: []
  syntax:
    content: public TextView(Rect frame)
    parameters:
    - id: frame
      type: Terminal.Gui.Rect
    content.vb: Public Sub New(frame As Rect)
  overload: Terminal.Gui.TextView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextView.#ctor
  commentId: M:Terminal.Gui.TextView.#ctor
  id: '#ctor'
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: TextView()
  nameWithType: TextView.TextView()
  fullName: Terminal.Gui.TextView.TextView()
  type: Constructor
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: .ctor
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 313
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitalizes a <xref href=\"Terminal.Gui.TextView\" data-throw-if-not-resolved=\"false\"></xref> on the specified area, \nwith dimensions controlled with the X, Y, Width and Height properties.\n"
  example: []
  syntax:
    content: public TextView()
    content.vb: Public Sub New
  overload: Terminal.Gui.TextView.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextView.Text
  commentId: P:Terminal.Gui.TextView.Text
  id: Text
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: TextView.Text
  fullName: Terminal.Gui.TextView.Text
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Text
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 328
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nSets or gets the text in the <xref href=\"Terminal.Gui.TextView\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\n"
  example: []
  syntax:
    content: public ustring Text { get; set; }
    parameters: []
    return:
      type: NStack.ustring
    content.vb: Public Property Text As ustring
  overload: Terminal.Gui.TextView.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextView.LoadFile(System.String)
  commentId: M:Terminal.Gui.TextView.LoadFile(System.String)
  id: LoadFile(System.String)
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: LoadFile(String)
  nameWithType: TextView.LoadFile(String)
  fullName: Terminal.Gui.TextView.LoadFile(System.String)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: LoadFile
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 346
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nLoads the contents of the file into the  <xref href=\"Terminal.Gui.TextView\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool LoadFile(string path)
    parameters:
    - id: path
      type: System.String
      description: Path to the file to load.
    return:
      type: System.Boolean
      description: <code>true</code>, if file was loaded, <code>false</code> otherwise.
    content.vb: Public Function LoadFile(path As String) As Boolean
  overload: Terminal.Gui.TextView.LoadFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextView.LoadStream(System.IO.Stream)
  commentId: M:Terminal.Gui.TextView.LoadStream(System.IO.Stream)
  id: LoadStream(System.IO.Stream)
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: LoadStream(Stream)
  nameWithType: TextView.LoadStream(Stream)
  fullName: Terminal.Gui.TextView.LoadStream(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: LoadStream
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 361
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nLoads the contents of the stream into the  <xref href=\"Terminal.Gui.TextView\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public void LoadStream(Stream stream)
    parameters:
    - id: stream
      type: System.IO.Stream
      description: Stream to load the contents from.
    content.vb: Public Sub LoadStream(stream As Stream)
  overload: Terminal.Gui.TextView.LoadStream*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextView.CloseFile
  commentId: M:Terminal.Gui.TextView.CloseFile
  id: CloseFile
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: CloseFile()
  nameWithType: TextView.CloseFile()
  fullName: Terminal.Gui.TextView.CloseFile()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: CloseFile
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 374
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCloses the contents of the stream into the  <xref href=\"Terminal.Gui.TextView\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool CloseFile()
    return:
      type: System.Boolean
      description: <code>true</code>, if stream was closed, <code>false</code> otherwise.
    content.vb: Public Function CloseFile As Boolean
  overload: Terminal.Gui.TextView.CloseFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextView.CurrentRow
  commentId: P:Terminal.Gui.TextView.CurrentRow
  id: CurrentRow
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: CurrentRow
  nameWithType: TextView.CurrentRow
  fullName: Terminal.Gui.TextView.CurrentRow
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: CurrentRow
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 385
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets the current cursor row.\n"
  example: []
  syntax:
    content: public int CurrentRow { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentRow As Integer
  overload: Terminal.Gui.TextView.CurrentRow*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Terminal.Gui.TextView.CurrentColumn
  commentId: P:Terminal.Gui.TextView.CurrentColumn
  id: CurrentColumn
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: CurrentColumn
  nameWithType: TextView.CurrentColumn
  fullName: Terminal.Gui.TextView.CurrentColumn
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: CurrentColumn
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 391
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets the cursor column.\n"
  example: []
  syntax:
    content: public int CurrentColumn { get; }
    parameters: []
    return:
      type: System.Int32
      description: The cursor column.
    content.vb: Public ReadOnly Property CurrentColumn As Integer
  overload: Terminal.Gui.TextView.CurrentColumn*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Terminal.Gui.TextView.PositionCursor
  commentId: M:Terminal.Gui.TextView.PositionCursor
  id: PositionCursor
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: PositionCursor()
  nameWithType: TextView.PositionCursor()
  fullName: Terminal.Gui.TextView.PositionCursor()
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: PositionCursor
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 396
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nPositions the cursor on the current row and column\n"
  example: []
  syntax:
    content: public override void PositionCursor()
    content.vb: Public Overrides Sub PositionCursor
  overridden: Terminal.Gui.View.PositionCursor
  overload: Terminal.Gui.TextView.PositionCursor*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextView.ReadOnly
  commentId: P:Terminal.Gui.TextView.ReadOnly
  id: ReadOnly
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: TextView.ReadOnly
  fullName: Terminal.Gui.TextView.ReadOnly
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: ReadOnly
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 435
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nGets or sets whether the  <xref href=\"Terminal.Gui.TextView\" data-throw-if-not-resolved=\"false\"></xref> is in read-only mode or not\n"
  example: []
  syntax:
    content: public bool ReadOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: Boolean value(Default false)
    content.vb: Public Property ReadOnly As Boolean
  overload: Terminal.Gui.TextView.ReadOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextView.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.TextView.Redraw(Terminal.Gui.Rect)
  id: Redraw(Terminal.Gui.Rect)
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: Redraw(Rect)
  nameWithType: TextView.Redraw(Rect)
  fullName: Terminal.Gui.TextView.Redraw(Terminal.Gui.Rect)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Redraw
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 527
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override void Redraw(Rect region)
    parameters:
    - id: region
      type: Terminal.Gui.Rect
    content.vb: Public Overrides Sub Redraw(region As Rect)
  overridden: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  overload: Terminal.Gui.TextView.Redraw*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextView.CanFocus
  commentId: P:Terminal.Gui.TextView.CanFocus
  id: CanFocus
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: CanFocus
  nameWithType: TextView.CanFocus
  fullName: Terminal.Gui.TextView.CanFocus
  type: Property
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: CanFocus
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 567
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override bool CanFocus { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides Property CanFocus As Boolean
  overridden: Terminal.Gui.Responder.CanFocus
  overload: Terminal.Gui.TextView.CanFocus*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextView.ScrollTo(System.Int32)
  commentId: M:Terminal.Gui.TextView.ScrollTo(System.Int32)
  id: ScrollTo(System.Int32)
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: ScrollTo(Int32)
  nameWithType: TextView.ScrollTo(Int32)
  fullName: Terminal.Gui.TextView.ScrollTo(System.Int32)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: ScrollTo
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 704
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nWill scroll the <xref href=\"Terminal.Gui.TextView\" data-throw-if-not-resolved=\"false\"></xref> to display the specified row at the top\n"
  example: []
  syntax:
    content: public void ScrollTo(int row)
    parameters:
    - id: row
      type: System.Int32
      description: Row that should be displayed at the top, if the value is negative it will be reset to zero
    content.vb: Public Sub ScrollTo(row As Integer)
  overload: Terminal.Gui.TextView.ScrollTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Terminal.Gui.TextView.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.TextView.ProcessKey(Terminal.Gui.KeyEvent)
  id: ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: ProcessKey(KeyEvent)
  nameWithType: TextView.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.TextView.ProcessKey(Terminal.Gui.KeyEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: ProcessKey
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 715
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override bool ProcessKey(KeyEvent kb)
    parameters:
    - id: kb
      type: Terminal.Gui.KeyEvent
    return:
      type: System.Boolean
    content.vb: Public Overrides Function ProcessKey(kb As KeyEvent) As Boolean
  overridden: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  overload: Terminal.Gui.TextView.ProcessKey*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Terminal.Gui.TextView.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.TextView.MouseEvent(Terminal.Gui.MouseEvent)
  id: MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.TextView
  langs:
  - csharp
  - vb
  name: MouseEvent(MouseEvent)
  nameWithType: TextView.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.TextView.MouseEvent(Terminal.Gui.MouseEvent)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Views/TextView.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: MouseEvent
    path: ../Terminal.Gui/Views/TextView.cs
    startLine: 1173
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  example: []
  syntax:
    content: public override bool MouseEvent(MouseEvent ev)
    parameters:
    - id: ev
      type: Terminal.Gui.MouseEvent
    return:
      type: System.Boolean
    content.vb: Public Overrides Function MouseEvent(ev As MouseEvent) As Boolean
  overridden: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  overload: Terminal.Gui.TextView.MouseEvent*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: Terminal.Gui.TextView
  commentId: T:Terminal.Gui.TextView
  name: TextView
  nameWithType: TextView
  fullName: Terminal.Gui.TextView
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Terminal.Gui.Responder
  commentId: T:Terminal.Gui.Responder
  parent: Terminal.Gui
  name: Responder
  nameWithType: Responder
  fullName: Terminal.Gui.Responder
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Terminal.Gui.View.Enter
  commentId: E:Terminal.Gui.View.Enter
  parent: Terminal.Gui.View
  name: Enter
  nameWithType: View.Enter
  fullName: Terminal.Gui.View.Enter
- uid: Terminal.Gui.View.Leave
  commentId: E:Terminal.Gui.View.Leave
  parent: Terminal.Gui.View
  name: Leave
  nameWithType: View.Leave
  fullName: Terminal.Gui.View.Leave
- uid: Terminal.Gui.View.MouseEnter
  commentId: E:Terminal.Gui.View.MouseEnter
  parent: Terminal.Gui.View
  name: MouseEnter
  nameWithType: View.MouseEnter
  fullName: Terminal.Gui.View.MouseEnter
- uid: Terminal.Gui.View.MouseLeave
  commentId: E:Terminal.Gui.View.MouseLeave
  parent: Terminal.Gui.View
  name: MouseLeave
  nameWithType: View.MouseLeave
  fullName: Terminal.Gui.View.MouseLeave
- uid: Terminal.Gui.View.Driver
  commentId: P:Terminal.Gui.View.Driver
  parent: Terminal.Gui.View
  name: Driver
  nameWithType: View.Driver
  fullName: Terminal.Gui.View.Driver
- uid: Terminal.Gui.View.Subviews
  commentId: P:Terminal.Gui.View.Subviews
  parent: Terminal.Gui.View
  name: Subviews
  nameWithType: View.Subviews
  fullName: Terminal.Gui.View.Subviews
- uid: Terminal.Gui.View.Id
  commentId: P:Terminal.Gui.View.Id
  parent: Terminal.Gui.View
  name: Id
  nameWithType: View.Id
  fullName: Terminal.Gui.View.Id
- uid: Terminal.Gui.View.WantMousePositionReports
  commentId: P:Terminal.Gui.View.WantMousePositionReports
  parent: Terminal.Gui.View
  name: WantMousePositionReports
  nameWithType: View.WantMousePositionReports
  fullName: Terminal.Gui.View.WantMousePositionReports
- uid: Terminal.Gui.View.WantContinuousButtonPressed
  commentId: P:Terminal.Gui.View.WantContinuousButtonPressed
  parent: Terminal.Gui.View
  name: WantContinuousButtonPressed
  nameWithType: View.WantContinuousButtonPressed
  fullName: Terminal.Gui.View.WantContinuousButtonPressed
- uid: Terminal.Gui.View.Frame
  commentId: P:Terminal.Gui.View.Frame
  parent: Terminal.Gui.View
  name: Frame
  nameWithType: View.Frame
  fullName: Terminal.Gui.View.Frame
- uid: Terminal.Gui.View.GetEnumerator
  commentId: M:Terminal.Gui.View.GetEnumerator
  parent: Terminal.Gui.View
  name: GetEnumerator()
  nameWithType: View.GetEnumerator()
  fullName: Terminal.Gui.View.GetEnumerator()
  spec.csharp:
  - uid: Terminal.Gui.View.GetEnumerator
    name: GetEnumerator
    nameWithType: View.GetEnumerator
    fullName: Terminal.Gui.View.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.GetEnumerator
    name: GetEnumerator
    nameWithType: View.GetEnumerator
    fullName: Terminal.Gui.View.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.LayoutStyle
  commentId: P:Terminal.Gui.View.LayoutStyle
  parent: Terminal.Gui.View
  name: LayoutStyle
  nameWithType: View.LayoutStyle
  fullName: Terminal.Gui.View.LayoutStyle
- uid: Terminal.Gui.View.Bounds
  commentId: P:Terminal.Gui.View.Bounds
  parent: Terminal.Gui.View
  name: Bounds
  nameWithType: View.Bounds
  fullName: Terminal.Gui.View.Bounds
- uid: Terminal.Gui.View.X
  commentId: P:Terminal.Gui.View.X
  parent: Terminal.Gui.View
  name: X
  nameWithType: View.X
  fullName: Terminal.Gui.View.X
- uid: Terminal.Gui.View.Y
  commentId: P:Terminal.Gui.View.Y
  parent: Terminal.Gui.View
  name: Y
  nameWithType: View.Y
  fullName: Terminal.Gui.View.Y
- uid: Terminal.Gui.View.Width
  commentId: P:Terminal.Gui.View.Width
  parent: Terminal.Gui.View
  name: Width
  nameWithType: View.Width
  fullName: Terminal.Gui.View.Width
- uid: Terminal.Gui.View.Height
  commentId: P:Terminal.Gui.View.Height
  parent: Terminal.Gui.View
  name: Height
  nameWithType: View.Height
  fullName: Terminal.Gui.View.Height
- uid: Terminal.Gui.View.SuperView
  commentId: P:Terminal.Gui.View.SuperView
  parent: Terminal.Gui.View
  name: SuperView
  nameWithType: View.SuperView
  fullName: Terminal.Gui.View.SuperView
- uid: Terminal.Gui.View.SetNeedsDisplay
  commentId: M:Terminal.Gui.View.SetNeedsDisplay
  parent: Terminal.Gui.View
  name: SetNeedsDisplay()
  nameWithType: View.SetNeedsDisplay()
  fullName: Terminal.Gui.View.SetNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: SetNeedsDisplay(Rect)
  nameWithType: View.SetNeedsDisplay(Rect)
  fullName: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetNeedsDisplay(Terminal.Gui.Rect)
    name: SetNeedsDisplay
    nameWithType: View.SetNeedsDisplay
    fullName: Terminal.Gui.View.SetNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ChildNeedsDisplay
  commentId: M:Terminal.Gui.View.ChildNeedsDisplay
  parent: Terminal.Gui.View
  name: ChildNeedsDisplay()
  nameWithType: View.ChildNeedsDisplay()
  fullName: Terminal.Gui.View.ChildNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.ChildNeedsDisplay
    name: ChildNeedsDisplay
    nameWithType: View.ChildNeedsDisplay
    fullName: Terminal.Gui.View.ChildNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ChildNeedsDisplay
    name: ChildNeedsDisplay
    nameWithType: View.ChildNeedsDisplay
    fullName: Terminal.Gui.View.ChildNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Add(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: Add(View)
  nameWithType: View.Add(View)
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View)
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
  commentId: M:Terminal.Gui.View.Add(Terminal.Gui.View[])
  parent: Terminal.Gui.View
  name: Add(View[])
  nameWithType: View.Add(View[])
  fullName: Terminal.Gui.View.Add(Terminal.Gui.View[])
  nameWithType.vb: View.Add(View())
  fullName.vb: Terminal.Gui.View.Add(Terminal.Gui.View())
  name.vb: Add(View())
  spec.csharp:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Add(Terminal.Gui.View[])
    name: Add
    nameWithType: View.Add
    fullName: Terminal.Gui.View.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.RemoveAll
  commentId: M:Terminal.Gui.View.RemoveAll
  parent: Terminal.Gui.View
  name: RemoveAll()
  nameWithType: View.RemoveAll()
  fullName: Terminal.Gui.View.RemoveAll()
  spec.csharp:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    nameWithType: View.RemoveAll
    fullName: Terminal.Gui.View.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.RemoveAll
    name: RemoveAll
    nameWithType: View.RemoveAll
    fullName: Terminal.Gui.View.RemoveAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.Remove(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: Remove(View)
  nameWithType: View.Remove(View)
  fullName: Terminal.Gui.View.Remove(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    nameWithType: View.Remove
    fullName: Terminal.Gui.View.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Remove(Terminal.Gui.View)
    name: Remove
    nameWithType: View.Remove
    fullName: Terminal.Gui.View.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: BringSubviewToFront(View)
  nameWithType: View.BringSubviewToFront(View)
  fullName: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    nameWithType: View.BringSubviewToFront
    fullName: Terminal.Gui.View.BringSubviewToFront
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewToFront(Terminal.Gui.View)
    name: BringSubviewToFront
    nameWithType: View.BringSubviewToFront
    fullName: Terminal.Gui.View.BringSubviewToFront
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SendSubviewToBack(View)
  nameWithType: View.SendSubviewToBack(View)
  fullName: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    nameWithType: View.SendSubviewToBack
    fullName: Terminal.Gui.View.SendSubviewToBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewToBack(Terminal.Gui.View)
    name: SendSubviewToBack
    nameWithType: View.SendSubviewToBack
    fullName: Terminal.Gui.View.SendSubviewToBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SendSubviewBackwards(View)
  nameWithType: View.SendSubviewBackwards(View)
  fullName: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
    name: SendSubviewBackwards
    nameWithType: View.SendSubviewBackwards
    fullName: Terminal.Gui.View.SendSubviewBackwards
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SendSubviewBackwards(Terminal.Gui.View)
    name: SendSubviewBackwards
    nameWithType: View.SendSubviewBackwards
    fullName: Terminal.Gui.View.SendSubviewBackwards
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: BringSubviewForward(View)
  nameWithType: View.BringSubviewForward(View)
  fullName: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
    name: BringSubviewForward
    nameWithType: View.BringSubviewForward
    fullName: Terminal.Gui.View.BringSubviewForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.BringSubviewForward(Terminal.Gui.View)
    name: BringSubviewForward
    nameWithType: View.BringSubviewForward
    fullName: Terminal.Gui.View.BringSubviewForward
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Clear
  commentId: M:Terminal.Gui.View.Clear
  parent: Terminal.Gui.View
  name: Clear()
  nameWithType: View.Clear()
  fullName: Terminal.Gui.View.Clear()
  spec.csharp:
  - uid: Terminal.Gui.View.Clear
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Clear
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: Clear(Rect)
  nameWithType: View.Clear(Rect)
  fullName: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Clear(Terminal.Gui.Rect)
    name: Clear
    nameWithType: View.Clear
    fullName: Terminal.Gui.View.Clear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  name: ScreenToView(Int32, Int32)
  nameWithType: View.ScreenToView(Int32, Int32)
  fullName: Terminal.Gui.View.ScreenToView(System.Int32, System.Int32)
  spec.csharp:
  - uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
    name: ScreenToView
    nameWithType: View.ScreenToView
    fullName: Terminal.Gui.View.ScreenToView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ScreenToView(System.Int32,System.Int32)
    name: ScreenToView
    nameWithType: View.ScreenToView
    fullName: Terminal.Gui.View.ScreenToView
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ClipToBounds
  commentId: M:Terminal.Gui.View.ClipToBounds
  parent: Terminal.Gui.View
  name: ClipToBounds()
  nameWithType: View.ClipToBounds()
  fullName: Terminal.Gui.View.ClipToBounds()
  spec.csharp:
  - uid: Terminal.Gui.View.ClipToBounds
    name: ClipToBounds
    nameWithType: View.ClipToBounds
    fullName: Terminal.Gui.View.ClipToBounds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ClipToBounds
    name: ClipToBounds
    nameWithType: View.ClipToBounds
    fullName: Terminal.Gui.View.ClipToBounds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: SetClip(Rect)
  nameWithType: View.SetClip(Rect)
  fullName: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
    name: SetClip
    nameWithType: View.SetClip
    fullName: Terminal.Gui.View.SetClip
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetClip(Terminal.Gui.Rect)
    name: SetClip
    nameWithType: View.SetClip
    fullName: Terminal.Gui.View.SetClip
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  commentId: M:Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawFrame(Rect, Int32, Boolean)
  nameWithType: View.DrawFrame(Rect, Int32, Boolean)
  fullName: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect, System.Int32, System.Boolean)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
    name: DrawFrame
    nameWithType: View.DrawFrame
    fullName: Terminal.Gui.View.DrawFrame
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawFrame(Terminal.Gui.Rect,System.Int32,System.Boolean)
    name: DrawFrame
    nameWithType: View.DrawFrame
    fullName: Terminal.Gui.View.DrawFrame
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  commentId: M:Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawHotString(ustring, Attribute, Attribute)
  nameWithType: View.DrawHotString(ustring, Attribute, Attribute)
  fullName: Terminal.Gui.View.DrawHotString(NStack.ustring, Terminal.Gui.Attribute, Terminal.Gui.Attribute)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,Terminal.Gui.Attribute,Terminal.Gui.Attribute)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Terminal.Gui.Attribute
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  commentId: M:Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
  parent: Terminal.Gui.View
  isExternal: true
  name: DrawHotString(ustring, Boolean, ColorScheme)
  nameWithType: View.DrawHotString(ustring, Boolean, ColorScheme)
  fullName: Terminal.Gui.View.DrawHotString(NStack.ustring, System.Boolean, Terminal.Gui.ColorScheme)
  spec.csharp:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: Terminal.Gui.ColorScheme
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.DrawHotString(NStack.ustring,System.Boolean,Terminal.Gui.ColorScheme)
    name: DrawHotString
    nameWithType: View.DrawHotString
    fullName: Terminal.Gui.View.DrawHotString
  - name: (
    nameWithType: (
    fullName: (
  - uid: NStack.ustring
    name: ustring
    nameWithType: ustring
    fullName: NStack.ustring
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Terminal.Gui.ColorScheme
    name: ColorScheme
    nameWithType: ColorScheme
    fullName: Terminal.Gui.ColorScheme
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
  commentId: M:Terminal.Gui.View.Move(System.Int32,System.Int32)
  parent: Terminal.Gui.View
  isExternal: true
  name: Move(Int32, Int32)
  nameWithType: View.Move(Int32, Int32)
  fullName: Terminal.Gui.View.Move(System.Int32, System.Int32)
  spec.csharp:
  - uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: View.Move
    fullName: Terminal.Gui.View.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Move(System.Int32,System.Int32)
    name: Move
    nameWithType: View.Move
    fullName: Terminal.Gui.View.Move
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.HasFocus
  commentId: P:Terminal.Gui.View.HasFocus
  parent: Terminal.Gui.View
  name: HasFocus
  nameWithType: View.HasFocus
  fullName: Terminal.Gui.View.HasFocus
- uid: Terminal.Gui.View.OnEnter
  commentId: M:Terminal.Gui.View.OnEnter
  parent: Terminal.Gui.View
  name: OnEnter()
  nameWithType: View.OnEnter()
  fullName: Terminal.Gui.View.OnEnter()
  spec.csharp:
  - uid: Terminal.Gui.View.OnEnter
    name: OnEnter
    nameWithType: View.OnEnter
    fullName: Terminal.Gui.View.OnEnter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnEnter
    name: OnEnter
    nameWithType: View.OnEnter
    fullName: Terminal.Gui.View.OnEnter
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnLeave
  commentId: M:Terminal.Gui.View.OnLeave
  parent: Terminal.Gui.View
  name: OnLeave()
  nameWithType: View.OnLeave()
  fullName: Terminal.Gui.View.OnLeave()
  spec.csharp:
  - uid: Terminal.Gui.View.OnLeave
    name: OnLeave
    nameWithType: View.OnLeave
    fullName: Terminal.Gui.View.OnLeave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnLeave
    name: OnLeave
    nameWithType: View.OnLeave
    fullName: Terminal.Gui.View.OnLeave
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.Focused
  commentId: P:Terminal.Gui.View.Focused
  parent: Terminal.Gui.View
  name: Focused
  nameWithType: View.Focused
  fullName: Terminal.Gui.View.Focused
- uid: Terminal.Gui.View.MostFocused
  commentId: P:Terminal.Gui.View.MostFocused
  parent: Terminal.Gui.View
  name: MostFocused
  nameWithType: View.MostFocused
  fullName: Terminal.Gui.View.MostFocused
- uid: Terminal.Gui.View.ColorScheme
  commentId: P:Terminal.Gui.View.ColorScheme
  parent: Terminal.Gui.View
  name: ColorScheme
  nameWithType: View.ColorScheme
  fullName: Terminal.Gui.View.ColorScheme
- uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  commentId: M:Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
  parent: Terminal.Gui.View
  isExternal: true
  name: AddRune(Int32, Int32, Rune)
  nameWithType: View.AddRune(Int32, Int32, Rune)
  fullName: Terminal.Gui.View.AddRune(System.Int32, System.Int32, System.Rune)
  spec.csharp:
  - uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
    name: AddRune
    nameWithType: View.AddRune
    fullName: Terminal.Gui.View.AddRune
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Rune
    name: Rune
    nameWithType: Rune
    fullName: System.Rune
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.AddRune(System.Int32,System.Int32,System.Rune)
    name: AddRune
    nameWithType: View.AddRune
    fullName: Terminal.Gui.View.AddRune
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Rune
    name: Rune
    nameWithType: Rune
    fullName: System.Rune
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ClearNeedsDisplay
  commentId: M:Terminal.Gui.View.ClearNeedsDisplay
  parent: Terminal.Gui.View
  name: ClearNeedsDisplay()
  nameWithType: View.ClearNeedsDisplay()
  fullName: Terminal.Gui.View.ClearNeedsDisplay()
  spec.csharp:
  - uid: Terminal.Gui.View.ClearNeedsDisplay
    name: ClearNeedsDisplay
    nameWithType: View.ClearNeedsDisplay
    fullName: Terminal.Gui.View.ClearNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ClearNeedsDisplay
    name: ClearNeedsDisplay
    nameWithType: View.ClearNeedsDisplay
    fullName: Terminal.Gui.View.ClearNeedsDisplay
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  commentId: M:Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  parent: Terminal.Gui.View
  name: SetFocus(View)
  nameWithType: View.SetFocus(View)
  fullName: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
  spec.csharp:
  - uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
    name: SetFocus
    nameWithType: View.SetFocus
    fullName: Terminal.Gui.View.SetFocus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.SetFocus(Terminal.Gui.View)
    name: SetFocus
    nameWithType: View.SetFocus
    fullName: Terminal.Gui.View.SetFocus
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.View
    name: View
    nameWithType: View
    fullName: Terminal.Gui.View
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyPress
  commentId: E:Terminal.Gui.View.KeyPress
  parent: Terminal.Gui.View
  name: KeyPress
  nameWithType: View.KeyPress
  fullName: Terminal.Gui.View.KeyPress
- uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessHotKey(KeyEvent)
  nameWithType: View.ProcessHotKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    nameWithType: View.ProcessHotKey
    fullName: Terminal.Gui.View.ProcessHotKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessHotKey(Terminal.Gui.KeyEvent)
    name: ProcessHotKey
    nameWithType: View.ProcessHotKey
    fullName: Terminal.Gui.View.ProcessHotKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessColdKey(KeyEvent)
  nameWithType: View.ProcessColdKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    nameWithType: View.ProcessColdKey
    fullName: Terminal.Gui.View.ProcessColdKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessColdKey(Terminal.Gui.KeyEvent)
    name: ProcessColdKey
    nameWithType: View.ProcessColdKey
    fullName: Terminal.Gui.View.ProcessColdKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyDown
  commentId: E:Terminal.Gui.View.KeyDown
  parent: Terminal.Gui.View
  name: KeyDown
  nameWithType: View.KeyDown
  fullName: Terminal.Gui.View.KeyDown
- uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: OnKeyDown(KeyEvent)
  nameWithType: View.OnKeyDown(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    nameWithType: View.OnKeyDown
    fullName: Terminal.Gui.View.OnKeyDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnKeyDown(Terminal.Gui.KeyEvent)
    name: OnKeyDown
    nameWithType: View.OnKeyDown
    fullName: Terminal.Gui.View.OnKeyDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.KeyUp
  commentId: E:Terminal.Gui.View.KeyUp
  parent: Terminal.Gui.View
  name: KeyUp
  nameWithType: View.KeyUp
  fullName: Terminal.Gui.View.KeyUp
- uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: OnKeyUp(KeyEvent)
  nameWithType: View.OnKeyUp(KeyEvent)
  fullName: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    nameWithType: View.OnKeyUp
    fullName: Terminal.Gui.View.OnKeyUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnKeyUp(Terminal.Gui.KeyEvent)
    name: OnKeyUp
    nameWithType: View.OnKeyUp
    fullName: Terminal.Gui.View.OnKeyUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.EnsureFocus
  commentId: M:Terminal.Gui.View.EnsureFocus
  parent: Terminal.Gui.View
  name: EnsureFocus()
  nameWithType: View.EnsureFocus()
  fullName: Terminal.Gui.View.EnsureFocus()
  spec.csharp:
  - uid: Terminal.Gui.View.EnsureFocus
    name: EnsureFocus
    nameWithType: View.EnsureFocus
    fullName: Terminal.Gui.View.EnsureFocus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.EnsureFocus
    name: EnsureFocus
    nameWithType: View.EnsureFocus
    fullName: Terminal.Gui.View.EnsureFocus
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusFirst
  commentId: M:Terminal.Gui.View.FocusFirst
  parent: Terminal.Gui.View
  name: FocusFirst()
  nameWithType: View.FocusFirst()
  fullName: Terminal.Gui.View.FocusFirst()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusFirst
    name: FocusFirst
    nameWithType: View.FocusFirst
    fullName: Terminal.Gui.View.FocusFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusFirst
    name: FocusFirst
    nameWithType: View.FocusFirst
    fullName: Terminal.Gui.View.FocusFirst
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusLast
  commentId: M:Terminal.Gui.View.FocusLast
  parent: Terminal.Gui.View
  name: FocusLast()
  nameWithType: View.FocusLast()
  fullName: Terminal.Gui.View.FocusLast()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusLast
    name: FocusLast
    nameWithType: View.FocusLast
    fullName: Terminal.Gui.View.FocusLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusLast
    name: FocusLast
    nameWithType: View.FocusLast
    fullName: Terminal.Gui.View.FocusLast
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusPrev
  commentId: M:Terminal.Gui.View.FocusPrev
  parent: Terminal.Gui.View
  name: FocusPrev()
  nameWithType: View.FocusPrev()
  fullName: Terminal.Gui.View.FocusPrev()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusPrev
    name: FocusPrev
    nameWithType: View.FocusPrev
    fullName: Terminal.Gui.View.FocusPrev
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusPrev
    name: FocusPrev
    nameWithType: View.FocusPrev
    fullName: Terminal.Gui.View.FocusPrev
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.FocusNext
  commentId: M:Terminal.Gui.View.FocusNext
  parent: Terminal.Gui.View
  name: FocusNext()
  nameWithType: View.FocusNext()
  fullName: Terminal.Gui.View.FocusNext()
  spec.csharp:
  - uid: Terminal.Gui.View.FocusNext
    name: FocusNext
    nameWithType: View.FocusNext
    fullName: Terminal.Gui.View.FocusNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.FocusNext
    name: FocusNext
    nameWithType: View.FocusNext
    fullName: Terminal.Gui.View.FocusNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.LayoutSubviews
  commentId: M:Terminal.Gui.View.LayoutSubviews
  parent: Terminal.Gui.View
  name: LayoutSubviews()
  nameWithType: View.LayoutSubviews()
  fullName: Terminal.Gui.View.LayoutSubviews()
  spec.csharp:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    nameWithType: View.LayoutSubviews
    fullName: Terminal.Gui.View.LayoutSubviews
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.LayoutSubviews
    name: LayoutSubviews
    nameWithType: View.LayoutSubviews
    fullName: Terminal.Gui.View.LayoutSubviews
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.ToString
  commentId: M:Terminal.Gui.View.ToString
  parent: Terminal.Gui.View
  name: ToString()
  nameWithType: View.ToString()
  fullName: Terminal.Gui.View.ToString()
  spec.csharp:
  - uid: Terminal.Gui.View.ToString
    name: ToString
    nameWithType: View.ToString
    fullName: Terminal.Gui.View.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ToString
    name: ToString
    nameWithType: View.ToString
    fullName: Terminal.Gui.View.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  name: OnMouseEnter(MouseEvent)
  nameWithType: View.OnMouseEnter(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    nameWithType: View.OnMouseEnter
    fullName: Terminal.Gui.View.OnMouseEnter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseEnter(Terminal.Gui.MouseEvent)
    name: OnMouseEnter
    nameWithType: View.OnMouseEnter
    fullName: Terminal.Gui.View.OnMouseEnter
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.View
  name: OnMouseLeave(MouseEvent)
  nameWithType: View.OnMouseLeave(MouseEvent)
  fullName: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    nameWithType: View.OnMouseLeave
    fullName: Terminal.Gui.View.OnMouseLeave
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.OnMouseLeave(Terminal.Gui.MouseEvent)
    name: OnMouseLeave
    nameWithType: View.OnMouseLeave
    fullName: Terminal.Gui.View.OnMouseLeave
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Terminal.Gui.TextView.Text
  commentId: P:Terminal.Gui.TextView.Text
  isExternal: true
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Terminal.Gui.TextView.#ctor*
  commentId: Overload:Terminal.Gui.TextView.#ctor
  name: TextView
  nameWithType: TextView.TextView
  fullName: Terminal.Gui.TextView.TextView
- uid: Terminal.Gui.Rect
  commentId: T:Terminal.Gui.Rect
  parent: Terminal.Gui
  name: Rect
  nameWithType: Rect
  fullName: Terminal.Gui.Rect
- uid: Terminal.Gui.TextView.Text*
  commentId: Overload:Terminal.Gui.TextView.Text
  name: Text
  nameWithType: TextView.Text
  fullName: Terminal.Gui.TextView.Text
- uid: NStack.ustring
  commentId: T:NStack.ustring
  parent: NStack
  isExternal: true
  name: ustring
  nameWithType: ustring
  fullName: NStack.ustring
- uid: NStack
  commentId: N:NStack
  isExternal: true
  name: NStack
  nameWithType: NStack
  fullName: NStack
- uid: Terminal.Gui.TextView.LoadFile*
  commentId: Overload:Terminal.Gui.TextView.LoadFile
  name: LoadFile
  nameWithType: TextView.LoadFile
  fullName: Terminal.Gui.TextView.LoadFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Terminal.Gui.TextView.LoadStream*
  commentId: Overload:Terminal.Gui.TextView.LoadStream
  name: LoadStream
  nameWithType: TextView.LoadStream
  fullName: Terminal.Gui.TextView.LoadStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Terminal.Gui.TextView.CloseFile*
  commentId: Overload:Terminal.Gui.TextView.CloseFile
  name: CloseFile
  nameWithType: TextView.CloseFile
  fullName: Terminal.Gui.TextView.CloseFile
- uid: Terminal.Gui.TextView.CurrentRow*
  commentId: Overload:Terminal.Gui.TextView.CurrentRow
  name: CurrentRow
  nameWithType: TextView.CurrentRow
  fullName: Terminal.Gui.TextView.CurrentRow
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Terminal.Gui.TextView.CurrentColumn*
  commentId: Overload:Terminal.Gui.TextView.CurrentColumn
  name: CurrentColumn
  nameWithType: TextView.CurrentColumn
  fullName: Terminal.Gui.TextView.CurrentColumn
- uid: Terminal.Gui.View.PositionCursor
  commentId: M:Terminal.Gui.View.PositionCursor
  parent: Terminal.Gui.View
  name: PositionCursor()
  nameWithType: View.PositionCursor()
  fullName: Terminal.Gui.View.PositionCursor()
  spec.csharp:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    nameWithType: View.PositionCursor
    fullName: Terminal.Gui.View.PositionCursor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.PositionCursor
    name: PositionCursor
    nameWithType: View.PositionCursor
    fullName: Terminal.Gui.View.PositionCursor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.TextView.PositionCursor*
  commentId: Overload:Terminal.Gui.TextView.PositionCursor
  name: PositionCursor
  nameWithType: TextView.PositionCursor
  fullName: Terminal.Gui.TextView.PositionCursor
- uid: Terminal.Gui.TextView.ReadOnly*
  commentId: Overload:Terminal.Gui.TextView.ReadOnly
  name: ReadOnly
  nameWithType: TextView.ReadOnly
  fullName: Terminal.Gui.TextView.ReadOnly
- uid: Terminal.Gui.TextView.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.TextView.Redraw(Terminal.Gui.Rect)
  isExternal: true
- uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  commentId: M:Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  parent: Terminal.Gui.View
  name: Redraw(Rect)
  nameWithType: View.Redraw(Rect)
  fullName: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
  spec.csharp:
  - uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: View.Redraw
    fullName: Terminal.Gui.View.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.Redraw(Terminal.Gui.Rect)
    name: Redraw
    nameWithType: View.Redraw
    fullName: Terminal.Gui.View.Redraw
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.Rect
    name: Rect
    nameWithType: Rect
    fullName: Terminal.Gui.Rect
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.TextView.Redraw*
  commentId: Overload:Terminal.Gui.TextView.Redraw
  name: Redraw
  nameWithType: TextView.Redraw
  fullName: Terminal.Gui.TextView.Redraw
- uid: Terminal.Gui.TextView.CanFocus
  commentId: P:Terminal.Gui.TextView.CanFocus
  isExternal: true
- uid: Terminal.Gui.Responder.CanFocus
  commentId: P:Terminal.Gui.Responder.CanFocus
  parent: Terminal.Gui.Responder
  name: CanFocus
  nameWithType: Responder.CanFocus
  fullName: Terminal.Gui.Responder.CanFocus
- uid: Terminal.Gui.TextView.CanFocus*
  commentId: Overload:Terminal.Gui.TextView.CanFocus
  name: CanFocus
  nameWithType: TextView.CanFocus
  fullName: Terminal.Gui.TextView.CanFocus
- uid: Terminal.Gui.TextView.ScrollTo*
  commentId: Overload:Terminal.Gui.TextView.ScrollTo
  name: ScrollTo
  nameWithType: TextView.ScrollTo
  fullName: Terminal.Gui.TextView.ScrollTo
- uid: Terminal.Gui.TextView.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.TextView.ProcessKey(Terminal.Gui.KeyEvent)
  isExternal: true
- uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  commentId: M:Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  parent: Terminal.Gui.View
  name: ProcessKey(KeyEvent)
  nameWithType: View.ProcessKey(KeyEvent)
  fullName: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
  spec.csharp:
  - uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    nameWithType: View.ProcessKey
    fullName: Terminal.Gui.View.ProcessKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.View.ProcessKey(Terminal.Gui.KeyEvent)
    name: ProcessKey
    nameWithType: View.ProcessKey
    fullName: Terminal.Gui.View.ProcessKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.KeyEvent
    name: KeyEvent
    nameWithType: KeyEvent
    fullName: Terminal.Gui.KeyEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.TextView.ProcessKey*
  commentId: Overload:Terminal.Gui.TextView.ProcessKey
  name: ProcessKey
  nameWithType: TextView.ProcessKey
  fullName: Terminal.Gui.TextView.ProcessKey
- uid: Terminal.Gui.KeyEvent
  commentId: T:Terminal.Gui.KeyEvent
  parent: Terminal.Gui
  name: KeyEvent
  nameWithType: KeyEvent
  fullName: Terminal.Gui.KeyEvent
- uid: Terminal.Gui.TextView.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.TextView.MouseEvent(Terminal.Gui.MouseEvent)
  isExternal: true
- uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  commentId: M:Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  parent: Terminal.Gui.Responder
  name: MouseEvent(MouseEvent)
  nameWithType: Responder.MouseEvent(MouseEvent)
  fullName: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
  spec.csharp:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    nameWithType: Responder.MouseEvent
    fullName: Terminal.Gui.Responder.MouseEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Terminal.Gui.Responder.MouseEvent(Terminal.Gui.MouseEvent)
    name: MouseEvent
    nameWithType: Responder.MouseEvent
    fullName: Terminal.Gui.Responder.MouseEvent
  - name: (
    nameWithType: (
    fullName: (
  - uid: Terminal.Gui.MouseEvent
    name: MouseEvent
    nameWithType: MouseEvent
    fullName: Terminal.Gui.MouseEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: Terminal.Gui.TextView.MouseEvent*
  commentId: Overload:Terminal.Gui.TextView.MouseEvent
  name: MouseEvent
  nameWithType: TextView.MouseEvent
  fullName: Terminal.Gui.TextView.MouseEvent
- uid: Terminal.Gui.MouseEvent
  commentId: T:Terminal.Gui.MouseEvent
  parent: Terminal.Gui
  name: MouseEvent
  nameWithType: MouseEvent
  fullName: Terminal.Gui.MouseEvent
shouldSkipMarkup: true
