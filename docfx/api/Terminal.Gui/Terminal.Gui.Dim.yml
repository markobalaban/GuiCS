### YamlMime:ManagedReference
items:
- uid: Terminal.Gui.Dim
  commentId: T:Terminal.Gui.Dim
  id: Dim
  parent: Terminal.Gui
  children:
  - Terminal.Gui.Dim.Fill(System.Int32)
  - Terminal.Gui.Dim.Height(Terminal.Gui.View)
  - Terminal.Gui.Dim.op_Addition(Terminal.Gui.Dim,Terminal.Gui.Dim)
  - Terminal.Gui.Dim.op_Implicit(System.Int32)~Terminal.Gui.Dim
  - Terminal.Gui.Dim.op_Subtraction(Terminal.Gui.Dim,Terminal.Gui.Dim)
  - Terminal.Gui.Dim.Percent(System.Single)
  - Terminal.Gui.Dim.Sized(System.Int32)
  - Terminal.Gui.Dim.Width(Terminal.Gui.View)
  langs:
  - csharp
  - vb
  name: Dim
  nameWithType: Dim
  fullName: Terminal.Gui.Dim
  type: Class
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Dim
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 356
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nDim properties of a <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> to control the position.\n"
  remarks: "\n<p>\n  Use the Dim objects on the Width or Height properties of a <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> to control the position.\n</p>\n<p>\n  These can be used to set the absolute position, when merely assigning an\n  integer value (via the implicit integer to Pos conversion), and they can be combined\n  to produce more useful layouts, like: Pos.Center - 3, which would shift the postion\n  of the <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> 3 characters to the left after centering for example.\n</p>\n"
  example: []
  syntax:
    content: public class Dim
    content.vb: Public Class Dim
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Terminal.Gui.Dim.Percent(System.Single)
  commentId: M:Terminal.Gui.Dim.Percent(System.Single)
  id: Percent(System.Single)
  parent: Terminal.Gui.Dim
  langs:
  - csharp
  - vb
  name: Percent(Single)
  nameWithType: Dim.Percent(Single)
  fullName: Terminal.Gui.Dim.Percent(System.Single)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Percent
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 403
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCreates a percentage <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref> object\n"
  example:
  - "\nThis initializes a <xref href=\"Terminal.Gui.TextField\" data-throw-if-not-resolved=\"false\"></xref>that is centered horizontally, is 50% of the way down, \nis 30% the height, and is 80% the width of the <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref> it added to.\n<pre><code>var textView = new TextView () {\nX = Pos.Center (),\nY = Pos.Percent (50),\nWidth = Dim.Percent (80),\n	Height = Dim.Percent (30),\n};</code></pre>\n"
  syntax:
    content: public static Dim Percent(float n)
    parameters:
    - id: n
      type: System.Single
      description: A value between 0 and 100 representing the percentage.
    return:
      type: Terminal.Gui.Dim
      description: The percent <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> object.
    content.vb: 'Public Shared Function Percent(n As Single) As '
  overload: Terminal.Gui.Dim.Percent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Dim.Fill(System.Int32)
  commentId: M:Terminal.Gui.Dim.Fill(System.Int32)
  id: Fill(System.Int32)
  parent: Terminal.Gui.Dim
  langs:
  - csharp
  - vb
  name: Fill(Int32)
  nameWithType: Dim.Fill(Int32)
  fullName: Terminal.Gui.Dim.Fill(System.Int32)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Fill
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 457
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nInitializes a new instance of the <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref> class that fills the dimension, but leaves the specified number of colums for a margin.\n"
  example: []
  syntax:
    content: public static Dim Fill(int margin = 0)
    parameters:
    - id: margin
      type: System.Int32
      description: Margin to use.
    return:
      type: Terminal.Gui.Dim
      description: The Fill dimension.
    content.vb: 'Public Shared Function Fill(margin As Integer = 0) As '
  overload: Terminal.Gui.Dim.Fill*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Dim.op_Implicit(System.Int32)~Terminal.Gui.Dim
  commentId: M:Terminal.Gui.Dim.op_Implicit(System.Int32)~Terminal.Gui.Dim
  id: op_Implicit(System.Int32)~Terminal.Gui.Dim
  parent: Terminal.Gui.Dim
  langs:
  - csharp
  - vb
  name: Implicit(Int32 to Dim)
  nameWithType: Dim.Implicit(Int32 to Dim)
  fullName: Terminal.Gui.Dim.Implicit(System.Int32 to Terminal.Gui.Dim)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: op_Implicit
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 472
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCreates an Absolute <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref> from the specified integer value.\n"
  example: []
  syntax:
    content: public static implicit operator Dim(int n)
    parameters:
    - id: n
      type: System.Int32
      description: The value to convert to the pos.
    return:
      type: Terminal.Gui.Dim
      description: The Absolute <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref>.
    content.vb: 'Public Shared Widening Operator CType(n As Integer) As '
  overload: Terminal.Gui.Dim.op_Implicit*
  nameWithType.vb: Dim.Widening(Int32 to Dim)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Terminal.Gui.Dim.Widening(System.Int32 to Terminal.Gui.Dim)
  name.vb: Widening(Int32 to Dim)
- uid: Terminal.Gui.Dim.Sized(System.Int32)
  commentId: M:Terminal.Gui.Dim.Sized(System.Int32)
  id: Sized(System.Int32)
  parent: Terminal.Gui.Dim
  langs:
  - csharp
  - vb
  name: Sized(Int32)
  nameWithType: Dim.Sized(Int32)
  fullName: Terminal.Gui.Dim.Sized(System.Int32)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Sized
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 482
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nCreates an Absolute <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref> from the specified integer value.\n"
  example: []
  syntax:
    content: public static Dim Sized(int n)
    parameters:
    - id: n
      type: System.Int32
      description: The value to convert to the <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Terminal.Gui.Dim
      description: The Absolute <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref>.
    content.vb: 'Public Shared Function Sized(n As Integer) As '
  overload: Terminal.Gui.Dim.Sized*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Dim.op_Addition(Terminal.Gui.Dim,Terminal.Gui.Dim)
  commentId: M:Terminal.Gui.Dim.op_Addition(Terminal.Gui.Dim,Terminal.Gui.Dim)
  id: op_Addition(Terminal.Gui.Dim,Terminal.Gui.Dim)
  parent: Terminal.Gui.Dim
  langs:
  - csharp
  - vb
  name: Addition(Dim, Dim)
  nameWithType: Dim.Addition(Dim, Dim)
  fullName: Terminal.Gui.Dim.Addition(Terminal.Gui.Dim, Terminal.Gui.Dim)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: op_Addition
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 514
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nAdds a <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref>, yielding a new <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Dim operator +(Dim left, Dim right)
    parameters:
    - id: left
      type: Terminal.Gui.Dim
      description: The first <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> to add.
    - id: right
      type: Terminal.Gui.Dim
      description: The second <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> to add.
    return:
      type: Terminal.Gui.Dim
      description: The <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> that is the sum of the values of <code>left</code> and <code>right</code>.
    content.vb: 'Public Shared Operator +(left As  Dim, right As  Dim) As '
  overload: Terminal.Gui.Dim.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Dim.op_Subtraction(Terminal.Gui.Dim,Terminal.Gui.Dim)
  commentId: M:Terminal.Gui.Dim.op_Subtraction(Terminal.Gui.Dim,Terminal.Gui.Dim)
  id: op_Subtraction(Terminal.Gui.Dim,Terminal.Gui.Dim)
  parent: Terminal.Gui.Dim
  langs:
  - csharp
  - vb
  name: Subtraction(Dim, Dim)
  nameWithType: Dim.Subtraction(Dim, Dim)
  fullName: Terminal.Gui.Dim.Subtraction(Terminal.Gui.Dim, Terminal.Gui.Dim)
  type: Operator
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: op_Subtraction
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 525
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nSubtracts a <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref> from a <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref>, yielding a new <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Dim operator -(Dim left, Dim right)
    parameters:
    - id: left
      type: Terminal.Gui.Dim
      description: The <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> to subtract from (the minuend).
    - id: right
      type: Terminal.Gui.Dim
      description: The <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> to subtract (the subtrahend).
    return:
      type: Terminal.Gui.Dim
      description: The <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> that is the <code>left</code> minus <code>right</code>.
    content.vb: 'Public Shared Operator -(left As  Dim, right As  Dim) As '
  overload: Terminal.Gui.Dim.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Dim.Width(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Dim.Width(Terminal.Gui.View)
  id: Width(Terminal.Gui.View)
  parent: Terminal.Gui.Dim
  langs:
  - csharp
  - vb
  name: Width(View)
  nameWithType: Dim.Width(View)
  fullName: Terminal.Gui.Dim.Width(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Width
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 554
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nReturns a <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref> object tracks the Width of the specified <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Dim Width(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The view that will be tracked.
    return:
      type: Terminal.Gui.Dim
      description: The <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> of the other <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>.
    content.vb: 'Public Shared Function Width(view As View) As '
  overload: Terminal.Gui.Dim.Width*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Terminal.Gui.Dim.Height(Terminal.Gui.View)
  commentId: M:Terminal.Gui.Dim.Height(Terminal.Gui.View)
  id: Height(Terminal.Gui.View)
  parent: Terminal.Gui.Dim
  langs:
  - csharp
  - vb
  name: Height(View)
  nameWithType: Dim.Height(View)
  fullName: Terminal.Gui.Dim.Height(Terminal.Gui.View)
  type: Method
  source:
    remote:
      path: Terminal.Gui/Types/PosDim.cs
      branch: docs
      repo: tig:tig/gui.cs.git
    id: Height
    path: ../Terminal.Gui/Types/PosDim.cs
    startLine: 561
  assemblies:
  - Terminal.Gui
  namespace: Terminal.Gui
  summary: "\nReturns a <xref href=\"Terminal.Gui.Dim\" data-throw-if-not-resolved=\"false\"></xref> object tracks the Height of the specified <xref href=\"Terminal.Gui.View\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static Dim Height(View view)
    parameters:
    - id: view
      type: Terminal.Gui.View
      description: The view that will be tracked.
    return:
      type: Terminal.Gui.Dim
      description: The <xref href="Terminal.Gui.Dim" data-throw-if-not-resolved="false"></xref> of the other <xref href="Terminal.Gui.View" data-throw-if-not-resolved="false"></xref>.
    content.vb: 'Public Shared Function Height(view As View) As '
  overload: Terminal.Gui.Dim.Height*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Terminal.Gui.View
  commentId: T:Terminal.Gui.View
  parent: Terminal.Gui
  name: View
  nameWithType: View
  fullName: Terminal.Gui.View
- uid: Terminal.Gui
  commentId: N:Terminal.Gui
  name: Terminal.Gui
  nameWithType: Terminal.Gui
  fullName: Terminal.Gui
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Terminal.Gui.Dim
  commentId: T:Terminal.Gui.Dim
  parent: Terminal.Gui
  name: Dim
  nameWithType: Dim
  fullName: Terminal.Gui.Dim
- uid: Terminal.Gui.TextField
  commentId: T:Terminal.Gui.TextField
  parent: Terminal.Gui
  name: TextField
  nameWithType: TextField
  fullName: Terminal.Gui.TextField
- uid: Terminal.Gui.Dim.Percent*
  commentId: Overload:Terminal.Gui.Dim.Percent
  name: Percent
  nameWithType: Dim.Percent
  fullName: Terminal.Gui.Dim.Percent
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Terminal.Gui.Dim.Fill*
  commentId: Overload:Terminal.Gui.Dim.Fill
  name: Fill
  nameWithType: Dim.Fill
  fullName: Terminal.Gui.Dim.Fill
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Terminal.Gui.Dim.op_Implicit*
  commentId: Overload:Terminal.Gui.Dim.op_Implicit
  name: Implicit
  nameWithType: Dim.Implicit
  fullName: Terminal.Gui.Dim.Implicit
  nameWithType.vb: Dim.Widening
  fullName.vb: Terminal.Gui.Dim.Widening
  name.vb: Widening
- uid: Terminal.Gui.Dim.Sized*
  commentId: Overload:Terminal.Gui.Dim.Sized
  name: Sized
  nameWithType: Dim.Sized
  fullName: Terminal.Gui.Dim.Sized
- uid: Terminal.Gui.Dim.op_Addition*
  commentId: Overload:Terminal.Gui.Dim.op_Addition
  name: Addition
  nameWithType: Dim.Addition
  fullName: Terminal.Gui.Dim.Addition
- uid: Terminal.Gui.Dim.op_Subtraction*
  commentId: Overload:Terminal.Gui.Dim.op_Subtraction
  name: Subtraction
  nameWithType: Dim.Subtraction
  fullName: Terminal.Gui.Dim.Subtraction
- uid: Terminal.Gui.Dim.Width*
  commentId: Overload:Terminal.Gui.Dim.Width
  name: Width
  nameWithType: Dim.Width
  fullName: Terminal.Gui.Dim.Width
- uid: Terminal.Gui.Dim.Height*
  commentId: Overload:Terminal.Gui.Dim.Height
  name: Height
  nameWithType: Dim.Height
  fullName: Terminal.Gui.Dim.Height
shouldSkipMarkup: true
