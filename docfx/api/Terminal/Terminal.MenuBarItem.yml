### YamlMime:ManagedReference
items:
- uid: Terminal.MenuBarItem
  id: MenuBarItem
  children:
  - Terminal.MenuBarItem.#ctor(System.String,Terminal.MenuItem[])
  - Terminal.MenuBarItem.Children
  - Terminal.MenuBarItem.Title
  langs:
  - csharp
  name: MenuBarItem
  nameWithType: MenuBarItem
  fullName: Terminal.MenuBarItem
  type: Class
  assemblies:
  - Terminal
  namespace: Terminal
  summary: A menu bar item contains other menu items.
  syntax:
    content: public class MenuBarItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
- uid: Terminal.MenuBarItem.#ctor(System.String,Terminal.MenuItem[])
  id: '#ctor(System.String,Terminal.MenuItem[])'
  parent: Terminal.MenuBarItem
  langs:
  - csharp
  name: MenuBarItem(String, MenuItem[])
  nameWithType: MenuBarItem.MenuBarItem(String, MenuItem[])
  fullName: MenuBarItem.MenuBarItem(String, MenuItem[])
  type: Constructor
  assemblies:
  - Terminal
  namespace: Terminal
  syntax:
    content: public MenuBarItem (string title, Terminal.MenuItem[] children);
    parameters:
    - id: title
      type: System.String
      description: To be added.
    - id: children
      type: Terminal.MenuItem[]
      description: To be added.
  overload: Terminal.MenuBarItem.#ctor*
  exceptions: []
- uid: Terminal.MenuBarItem.Children
  id: Children
  parent: Terminal.MenuBarItem
  langs:
  - csharp
  name: Children
  nameWithType: MenuBarItem.Children
  fullName: MenuBarItem.Children
  type: Property
  assemblies:
  - Terminal
  namespace: Terminal
  syntax:
    content: public Terminal.MenuItem[] Children { get; set; }
    return:
      type: Terminal.MenuItem[]
      description: To be added.
  overload: Terminal.MenuBarItem.Children*
  exceptions: []
- uid: Terminal.MenuBarItem.Title
  id: Title
  parent: Terminal.MenuBarItem
  langs:
  - csharp
  name: Title
  nameWithType: MenuBarItem.Title
  fullName: MenuBarItem.Title
  type: Property
  assemblies:
  - Terminal
  namespace: Terminal
  summary: Gets or sets the title to display.
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: The title.
  overload: Terminal.MenuBarItem.Title*
  exceptions: []
references:
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Terminal.MenuBarItem.#ctor(System.String,Terminal.MenuItem[])
  parent: Terminal.MenuBarItem
  isExternal: false
  name: MenuBarItem(String, MenuItem[])
  nameWithType: MenuBarItem.MenuBarItem(String, MenuItem[])
  fullName: MenuBarItem.MenuBarItem(String, MenuItem[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Terminal.MenuItem
  name: MenuItem
  nameWithType: MenuItem
  fullName: Terminal.MenuItem
- uid: Terminal.MenuItem[]
  parent: Terminal
  isExternal: false
  name: MenuItem[]
  nameWithType: MenuItem[]
  fullName: Terminal.MenuItem[]
  spec.csharp:
  - uid: Terminal.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: Terminal.MenuItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Terminal.MenuBarItem.Children
  parent: Terminal.MenuBarItem
  isExternal: false
  name: Children
  nameWithType: MenuBarItem.Children
  fullName: MenuBarItem.Children
- uid: Terminal.MenuBarItem.Title
  parent: Terminal.MenuBarItem
  isExternal: false
  name: Title
  nameWithType: MenuBarItem.Title
  fullName: MenuBarItem.Title
- uid: Terminal.MenuBarItem.#ctor*
  parent: Terminal.MenuBarItem
  isExternal: false
  name: MenuBarItem
  nameWithType: MenuBarItem.MenuBarItem
  fullName: MenuBarItem.MenuBarItem
- uid: Terminal.MenuBarItem.Children*
  parent: Terminal.MenuBarItem
  isExternal: false
  name: Children
  nameWithType: MenuBarItem.Children
  fullName: MenuBarItem.Children
- uid: Terminal.MenuBarItem.Title*
  parent: Terminal.MenuBarItem
  isExternal: false
  name: Title
  nameWithType: MenuBarItem.Title
  fullName: MenuBarItem.Title
